{"version":3,"file":"base.js","sourceRoot":"","sources":["../../src/base/utilities.ts","../../src/base/options.ts","../../src/base/settings.ts","../../src/base/metrics.ts","../../src/base/deflate.ts","../../src/base/lzma.ts","../../src/base/dataBuffer.ts","../../src/base/ShapeData.ts","../../src/base/SWFTags.ts","../../src/base/binaryFileReader.ts","../../src/base/flashlog.ts","../../src/base/remoting.ts","../../src/base/external.ts","../../src/base/references.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet jsGlobal = (function () {\n\treturn this || (1, eval)('this//# sourceURL=jsGlobal-getter');\n})();\n// Our polyfills for some DOM things make testing this slightly more onerous than it ought to be.\nlet inBrowser = typeof window !== 'undefined' && 'document' in window && 'plugins' in window.document;\nlet inFirefox = typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Firefox') >= 0;\n\ndeclare let putstr: any;\n// declare let print;\n// declare let console;\n// declare let performance;\n// declare let XMLHttpRequest;\n// declare let document;\n// declare let getComputedStyle;\n\n/** @define {boolean} */ let release = false;\n/** @define {boolean} */ let profile = false;\n\ndeclare let dump: (message: string) => void;\n\nfunction dumpLine(line: string) {\n\tif (!release && typeof dump !== \"undefined\") {\n\t\tdump(line + \"\\n\");\n\t}\n}\n\nif (!jsGlobal.performance) {\n\tjsGlobal.performance = {};\n}\n\nif (!jsGlobal.performance.now) {\n\tjsGlobal.performance.now = function () {\n\t\treturn Date.now();\n\t};\n}\n\nlet START_TIME = performance.now();\n\ninterface String {\n\tpadRight(c: string, n: number): string;\n\n\tpadLeft(c: string, n: number): string;\n\n\tendsWith(s: string): boolean;\n}\n\ninterface Function {\n\tboundTo: boolean;\n}\n\ninterface Array<T> {\n\truntimeId: number;\n}\n\ninterface Math {\n\timul(a: number, b: number): number;\n\n\t/**\n\t * Returns the number of leading zeros of a number.\n\t * @param x A numeric expression.\n\t */\n\tclz32(x: number): number;\n}\n\ndeclare module Shumway {\n\tlet version: string;\n\tlet build: string;\n}\n\nmodule Shumway {\n\n\texport const enum CharacterCodes {\n\t\t_0 = 48,\n\t\t_1 = 49,\n\t\t_2 = 50,\n\t\t_3 = 51,\n\t\t_4 = 52,\n\t\t_5 = 53,\n\t\t_6 = 54,\n\t\t_7 = 55,\n\t\t_8 = 56,\n\t\t_9 = 57\n\t}\n\n\t/**\n\t * The buffer length required to contain any unsigned 32-bit integer.\n\t */\n\t/** @const */ export let UINT32_CHAR_BUFFER_LENGTH = 10; // \"4294967295\".length;\n\t/** @const */ export let UINT32_MAX = 0xFFFFFFFF;\n\t/** @const */ export let UINT32_MAX_DIV_10 = 0x19999999; // UINT32_MAX / 10;\n\t/** @const */ export let UINT32_MAX_MOD_10 = 0x5; // UINT32_MAX % 10\n\n\texport function isString(value: any): boolean {\n\t\treturn typeof value === \"string\";\n\t}\n\n\texport function isFunction(value: any): boolean {\n\t\treturn typeof value === \"function\";\n\t}\n\n\texport function isNumber(value: any): boolean {\n\t\treturn typeof value === \"number\";\n\t}\n\n\texport function isInteger(value: any): boolean {\n\t\treturn (value | 0) === value;\n\t}\n\n\texport function isArray(value: any): boolean {\n\t\treturn value instanceof Array;\n\t}\n\n\texport function isNumberOrString(value: any): boolean {\n\t\treturn typeof value === \"number\" || typeof value === \"string\";\n\t}\n\n\texport function isObject(value: any): boolean {\n\t\treturn typeof value === \"object\" || typeof value === 'function';\n\t}\n\n\texport function toNumber(x: any): number {\n\t\treturn +x;\n\t}\n\n\texport function isNumericString(value: string): boolean {\n\t\t// ECMAScript 5.1 - 9.8.1 Note 1, this expression is true for all\n\t\t// numbers x other than -0.\n\t\treturn String(Number(value)) === value;\n\t}\n\n\t/**\n\t * Whether the specified |value| is a number or the string representation of a number.\n\t */\n\texport function isNumeric(value: any): boolean {\n\t\tif (typeof value === \"number\") {\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof value === \"string\") {\n\t\t\t// |value| is rarely numeric (it's usually an identifier), and the\n\t\t\t// isIndex()/isNumericString() pair is slow and expensive, so we do a\n\t\t\t// quick check for obvious non-numericalness first. Just checking if the\n\t\t\t// first char is a 7-bit identifier char catches most cases.\n\t\t\tlet c = value.charCodeAt(0);\n\t\t\tif ((65 <= c && c <= 90) ||     // 'A'..'Z'\n\t\t\t\t(97 <= c && c <= 122) ||    // 'a'..'z'\n\t\t\t\t(c === 36) ||               // '$'\n\t\t\t\t(c === 95)) {               // '_'\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn isIndex(value) || isNumericString(value);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Whether the specified |value| is an unsigned 32 bit number expressed as a number\n\t * or string.\n\t */\n\texport function isIndex(value: any): boolean {\n\t\t// js/src/vm/String.cpp JSFlatString::isIndexSlow\n\t\t// http://dxr.mozilla.org/mozilla-central/source/js/src/vm/String.cpp#474\n\t\tlet index = 0;\n\t\tif (typeof value === \"number\") {\n\t\t\tindex = (value | 0);\n\t\t\tif (value === index && index >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn value >>> 0 === value;\n\t\t}\n\t\tif (typeof value !== \"string\") {\n\t\t\treturn false;\n\t\t}\n\t\tlet length = value.length;\n\t\tif (length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (value === \"0\") {\n\t\t\treturn true;\n\t\t}\n\t\t// Is there any way this will fit?\n\t\tif (length > UINT32_CHAR_BUFFER_LENGTH) {\n\t\t\treturn false;\n\t\t}\n\t\tlet i = 0;\n\t\tindex = value.charCodeAt(i++) - CharacterCodes._0;\n\t\tif (index < 1 || index > 9) {\n\t\t\treturn false;\n\t\t}\n\t\tlet oldIndex = 0;\n\t\tlet c = 0;\n\t\twhile (i < length) {\n\t\t\tc = value.charCodeAt(i++) - CharacterCodes._0;\n\t\t\tif (c < 0 || c > 9) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\toldIndex = index;\n\t\t\tindex = 10 * index + c;\n\t\t}\n\t\t/*\n\t\t * Look out for \"4294967296\" and larger-number strings that fit in UINT32_CHAR_BUFFER_LENGTH.\n\t\t * Only unsigned 32-bit integers shall pass.\n\t\t */\n\t\tif ((oldIndex < UINT32_MAX_DIV_10) || (oldIndex === UINT32_MAX_DIV_10 && c <= UINT32_MAX_MOD_10)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function isNullOrUndefined(value: any) {\n\t\treturn value == undefined;\n\t}\n\n\texport function argumentsToString(args: IArguments) {\n\t\tlet resultList = [];\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet arg = args[i];\n\t\t\ttry {\n\t\t\t\tlet argStr;\n\t\t\t\tif (typeof arg !== 'object' || !arg) {\n\t\t\t\t\targStr = arg + '';\n\t\t\t\t} else if ('toString' in arg) {\n\t\t\t\t\targStr = arg.toString();\n\t\t\t\t} else {\n\t\t\t\t\targStr = Object.prototype.toString.call(arg);\n\t\t\t\t}\n\t\t\t\tresultList.push(argStr);\n\t\t\t} catch (e) {\n\t\t\t\tresultList.push('<unprintable value>');\n\t\t\t}\n\t\t}\n\t\treturn resultList.join(', ');\n\t}\n\n\texport module Debug {\n\t\texport function error(message: string) {\n\t\t\tconsole.error(message);\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\texport function assert(condition: any, message: any = \"assertion failed\") {\n\t\t\tif (condition === \"\") {     // avoid inadvertent false positive\n\t\t\t\tcondition = true;\n\t\t\t}\n\t\t\tif (!condition) {\n\t\t\t\tif (typeof console !== 'undefined' && 'assert' in console) {\n\t\t\t\t\tconsole.assert(false, message);\n\t\t\t\t\tthrow new Error(message);\n\t\t\t\t} else {\n\t\t\t\t\tDebug.error(message.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texport function assertUnreachable(msg: string): void {\n\t\t\tlet location = new Error().stack.split('\\n')[1];\n\t\t\tthrow new Error(\"Reached unreachable location \" + location + msg);\n\t\t}\n\n\t\texport function assertNotImplemented(condition: boolean, message: string) {\n\t\t\tif (!condition) {\n\t\t\t\tDebug.error(\"notImplemented: \" + message);\n\t\t\t}\n\t\t}\n\n\t\tlet _warnedCounts = Object.create(null);\n\n\t\texport function warning(message: any, arg1?: any, arg2?: any/*...messages: any[]*/) {\n\t\t\tif (release) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet key = argumentsToString(arguments);\n\t\t\tif (_warnedCounts[key]) {\n\t\t\t\t_warnedCounts[key]++;\n\t\t\t\tif (Shumway.omitRepeatedWarnings.value) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_warnedCounts[key] = 1;\n\t\t\tconsole.warn.apply(console, arguments);\n\t\t}\n\n\t\texport function warnCounts() {\n\t\t\tlet list = [];\n\t\t\tfor (let key in _warnedCounts) {\n\t\t\t\tlist.push({key: key, count: _warnedCounts[key]});\n\t\t\t}\n\t\t\tlist.sort((entry, prev) => prev.count - entry.count);\n\t\t\treturn list.reduce((result, entry) => (result += '\\n' + entry.count + '\\t' + entry.key), '');\n\t\t}\n\n\t\texport function notImplemented(message: string) {\n\t\t\trelease || Debug.assert(false, \"Not Implemented \" + message);\n\t\t}\n\n\t\texport function dummyConstructor(message: string) {\n\t\t\trelease || Debug.assert(false, \"Dummy Constructor: \" + message);\n\t\t}\n\n\t\texport function abstractMethod(message: string) {\n\t\t\trelease || Debug.assert(false, \"Abstract Method \" + message);\n\t\t}\n\n\t\tlet somewhatImplementedCache: { [key: string]: boolean } = {};\n\n\t\texport function somewhatImplemented(message: string) {\n\t\t\tif (somewhatImplementedCache[message]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsomewhatImplementedCache[message] = true;\n\t\t\tDebug.warning(\"somewhatImplemented: \" + message);\n\t\t}\n\n\t\texport function unexpected(message?: any) {\n\t\t\tDebug.assert(false, \"Unexpected: \" + message);\n\t\t}\n\n\t\texport function unexpectedCase(message?: any) {\n\t\t\tDebug.assert(false, \"Unexpected Case: \" + message);\n\t\t}\n\t}\n\n\texport function getTicks(): number {\n\t\treturn performance.now();\n\t}\n\n\texport interface MapObject<T> {\n\t\t[name: string]: T\n\t}\n\n\texport module ArrayUtilities {\n\t\timport assert = Shumway.Debug.assert;\n\n\t\t/**\n\t\t * Pops elements from a source array into a destination array. This avoids\n\t\t * allocations and should be faster. The elements in the destination array\n\t\t * are pushed in the same order as they appear in the source array:\n\t\t *\n\t\t * popManyInto([1, 2, 3], 2, dst) => dst = [2, 3]\n\t\t */\n\t\texport function popManyInto(src: any [], count: number, dst: any []) {\n\t\t\trelease || assert(src.length >= count);\n\t\t\tfor (let i = count - 1; i >= 0; i--) {\n\t\t\t\tdst[i] = src.pop();\n\t\t\t}\n\t\t\tdst.length = count;\n\t\t}\n\n\t\texport function popMany<T>(array: T [], count: number): T [] {\n\t\t\trelease || assert(array.length >= count);\n\t\t\tlet start = array.length - count;\n\t\t\tlet result = array.slice(start, this.length);\n\t\t\tarray.length = start;\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Just deletes several array elements from the end of the list.\n\t\t */\n\t\texport function popManyIntoVoid(array: any [], count: number) {\n\t\t\trelease || assert(array.length >= count);\n\t\t\tarray.length = array.length - count;\n\t\t}\n\n\t\texport function pushMany(dst: any [], src: any []) {\n\t\t\tfor (let i = 0; i < src.length; i++) {\n\t\t\t\tdst.push(src[i]);\n\t\t\t}\n\t\t}\n\n\t\texport function top(array: any []) {\n\t\t\treturn array.length && array[array.length - 1];\n\t\t}\n\n\t\texport function last(array: any []) {\n\t\t\treturn array.length && array[array.length - 1];\n\t\t}\n\n\t\texport function peek(array: any []) {\n\t\t\trelease || assert(array.length > 0);\n\t\t\treturn array[array.length - 1];\n\t\t}\n\n\t\texport function indexOf<T>(array: T [], value: T): number {\n\t\t\tfor (let i = 0, j = array.length; i < j; i++) {\n\t\t\t\tif (array[i] === value) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\texport function equals<T>(a: T [], b: T []): boolean {\n\t\t\tif (a.length !== b.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i] !== b[i]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\texport function pushUnique<T>(array: T [], value: T): number {\n\t\t\tfor (let i = 0, j = array.length; i < j; i++) {\n\t\t\t\tif (array[i] === value) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tarray.push(value);\n\t\t\treturn array.length - 1;\n\t\t}\n\n\t\texport function unique<T>(array: T []): T [] {\n\t\t\tlet result: Array<T> = [];\n\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\tpushUnique(result, array[i]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\texport function copyFrom(dst: any [], src: any []) {\n\t\t\tdst.length = 0;\n\t\t\tArrayUtilities.pushMany(dst, src);\n\t\t}\n\n\t\texport interface TypedArray extends ArrayLike<number> {\n\t\t\tbuffer: ArrayBuffer;\n\t\t\tlength: number;\n\t\t\tset: (array: ArrayLike<number>, offset?: number) => void;\n\t\t\tsubarray: (begin: number, end?: number) => TypedArray;\n\t\t}\n\n\t\t/**\n\t\t * Makes sure that a typed array has the requested capacity. If required, it creates a new\n\t\t * instance of the array's class with a power-of-two capacity at least as large as required.\n\t\t */\n\t\texport function ensureTypedArrayCapacity<T extends TypedArray>(array: T, capacity: number): T {\n\t\t\tif (array.length < capacity) {\n\t\t\t\tlet oldArray = array;\n\t\t\t\tarray = new (<any>array).constructor(Shumway.IntegerUtilities.nearestPowerOfTwo(capacity));\n\t\t\t\tarray.set(oldArray, 0);\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\texport function memCopy<T extends TypedArray>(destination: T, source: T, doffset: number = 0,\n\t\t                                              soffset: number = 0, length: number = 0) {\n\t\t\tif (soffset > 0 || (length > 0 && length < source.length)) {\n\t\t\t\tif (length <= 0) {\n\t\t\t\t\tlength = source.length - soffset;\n\t\t\t\t}\n\t\t\t\tdestination.set(source.subarray(soffset, soffset + length), doffset);\n\t\t\t} else {\n\t\t\t\tdestination.set(source, doffset);\n\t\t\t}\n\t\t}\n\n\t\texport interface IDataDecoder {\n\t\t\tonData: (data: Uint8Array) => void;\n\t\t\tonError: (e: any) => void;\n\n\t\t\tpush(data: Uint8Array): void;\n\n\t\t\tclose(): void;\n\t\t}\n\t}\n\n\texport module ObjectUtilities {\n\t\texport function boxValue(value: any) {\n\t\t\tif (isNullOrUndefined(value) || isObject(value)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn Object(value);\n\t\t}\n\n\t\texport function toKeyValueArray(object: any) {\n\t\t\tlet hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\t\tlet array = [];\n\t\t\tfor (let k in object) {\n\t\t\t\tif (hasOwnProperty.call(object, k)) {\n\t\t\t\t\tarray.push([k, object[k]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\texport function isPrototypeWriteable(object: Object) {\n\t\t\treturn Object.getOwnPropertyDescriptor(object, \"prototype\").writable;\n\t\t}\n\n\t\texport function hasOwnProperty(object: Object, name: string): boolean {\n\t\t\treturn Object.prototype.hasOwnProperty.call(object, name);\n\t\t}\n\n\t\texport function propertyIsEnumerable(object: Object, name: string): boolean {\n\t\t\treturn Object.prototype.propertyIsEnumerable.call(object, name);\n\t\t}\n\n\t\t/**\n\t\t * Returns a property descriptor for the own or inherited property with the given name, or\n\t\t * null if one doesn't exist.\n\t\t */\n\t\texport function getPropertyDescriptor(object: Object, name: string): PropertyDescriptor {\n\t\t\tdo {\n\t\t\t\tlet propDesc = Object.getOwnPropertyDescriptor(object, name);\n\t\t\t\tif (propDesc) {\n\t\t\t\t\treturn propDesc;\n\t\t\t\t}\n\t\t\t\tobject = Object.getPrototypeOf(object);\n\t\t\t} while (object);\n\t\t\treturn null;\n\t\t}\n\n\t\texport function hasOwnGetter(object: Object, name: string): boolean {\n\t\t\tlet d = Object.getOwnPropertyDescriptor(object, name);\n\t\t\treturn !!(d && d.get);\n\t\t}\n\n\t\texport function getOwnGetter(object: Object, name: string): () => any {\n\t\t\tlet d = Object.getOwnPropertyDescriptor(object, name);\n\t\t\treturn d ? d.get : null;\n\t\t}\n\n\t\texport function hasOwnSetter(object: Object, name: string): boolean {\n\t\t\tlet d = Object.getOwnPropertyDescriptor(object, name);\n\t\t\treturn !!(d && !!d.set);\n\t\t}\n\n\t\texport function createMap<T>(): MapObject<T> {\n\t\t\treturn Object.create(null);\n\t\t}\n\n\t\texport function createArrayMap<T>(): MapObject<T> {\n\t\t\treturn <MapObject<T>><any>[];\n\t\t}\n\n\t\texport function defineReadOnlyProperty(object: Object, name: string, value: any) {\n\t\t\tObject.defineProperty(object, name, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false\n\t\t\t});\n\t\t}\n\n\t\texport function copyProperties(object: any, template: any) {\n\t\t\tfor (let property in template) {\n\t\t\t\tobject[property] = template[property];\n\t\t\t}\n\t\t}\n\n\t\texport function copyOwnProperties(object: any, template: any) {\n\t\t\tfor (let property in template) {\n\t\t\t\tif (hasOwnProperty(template, property)) {\n\t\t\t\t\tobject[property] = template[property];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texport function copyOwnPropertyDescriptors(object: Object,\n\t\t                                           template: Object,\n\t\t                                           filter: (name: string) => boolean = null,\n\t\t                                           overwrite = true,\n\t\t                                           makeWritable = false) {\n\t\t\tfor (let property in template) {\n\t\t\t\tif (hasOwnProperty(template, property) && (!filter || filter(property))) {\n\t\t\t\t\tlet descriptor = Object.getOwnPropertyDescriptor(template, property);\n\t\t\t\t\tif (!overwrite && hasOwnProperty(object, property)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\trelease || Debug.assert(descriptor);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (makeWritable && descriptor.writable === false) {\n\t\t\t\t\t\t\tdescriptor.writable = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tObject.defineProperty(object, property, descriptor);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tDebug.assert(\"Can't define: \" + property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texport function copyPropertiesByList(object: any,\n\t\t                                     template: any,\n\t\t                                     propertyList: string []) {\n\t\t\tfor (let i = 0; i < propertyList.length; i++) {\n\t\t\t\tlet property = propertyList[i];\n\t\t\t\tobject[property] = template[property];\n\t\t\t}\n\t\t}\n\n\t\texport function defineNonEnumerableGetter(obj: any, name: any, getter: any) {\n\t\t\tObject.defineProperty(obj, name, {\n\t\t\t\tget: getter,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false\n\t\t\t});\n\t\t}\n\n\t\texport function defineNonEnumerableProperty(obj: any, name: any, value: any) {\n\t\t\tObject.defineProperty(obj, name, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false\n\t\t\t});\n\t\t}\n\t}\n\n\texport module FunctionUtilities {\n\t\texport function makeForwardingGetter(target: string): () => any {\n\t\t\treturn <() => any> new Function(\"return this[\\\"\" + target + \"\\\"]//# sourceURL=fwd-get-\" +\n\t\t\t\ttarget + \".as\");\n\t\t}\n\n\t\texport function makeForwardingSetter(target: string): (a: any) => void {\n\t\t\treturn <(a: any) => void> new Function(\"value\", \"this[\\\"\" + target + \"\\\"] = value;\" +\n\t\t\t\t\"//# sourceURL=fwd-set-\" + target + \".as\");\n\t\t}\n\t}\n\n\texport module StringUtilities {\n\t\timport assert = Shumway.Debug.assert;\n\n\t\texport function repeatString(c: string, n: number): string {\n\t\t\tlet s = \"\";\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\ts += c;\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\n\t\texport function memorySizeToString(value: number) {\n\t\t\tvalue |= 0;\n\t\t\tlet K = 1024;\n\t\t\tlet M = K * K;\n\t\t\tif (value < K) {\n\t\t\t\treturn value + \" B\";\n\t\t\t} else if (value < M) {\n\t\t\t\treturn (value / K).toFixed(2) + \"KB\";\n\t\t\t} else {\n\t\t\t\treturn (value / M).toFixed(2) + \"MB\";\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns a reasonably sized description of the |value|, to be used for debugging purposes.\n\t\t */\n\t\texport function toSafeString(value: any) {\n\t\t\tif (typeof value === \"string\") {\n\t\t\t\treturn \"\\\"\" + value + \"\\\"\";\n\t\t\t}\n\t\t\tif (typeof value === \"number\" || typeof value === \"boolean\") {\n\t\t\t\treturn String(value);\n\t\t\t}\n\t\t\tif (value instanceof Array) {\n\t\t\t\treturn \"[] \" + value.length;\n\t\t\t}\n\t\t\treturn typeof value;\n\t\t}\n\n\t\texport function toSafeArrayString(array: any) {\n\t\t\tlet str = [];\n\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\tstr.push(toSafeString(array[i]));\n\t\t\t}\n\t\t\treturn str.join(\", \");\n\t\t}\n\n\t\texport function utf8decode(str: string): Uint8Array {\n\t\t\tlet bytes = new Uint8Array(str.length * 4);\n\t\t\tlet b = 0;\n\t\t\tfor (let i = 0, j = str.length; i < j; i++) {\n\t\t\t\tlet code = str.charCodeAt(i);\n\t\t\t\tif (code <= 0x7f) {\n\t\t\t\t\tbytes[b++] = code;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (0xD800 <= code && code <= 0xDBFF) {\n\t\t\t\t\tlet codeLow = str.charCodeAt(i + 1);\n\t\t\t\t\tif (0xDC00 <= codeLow && codeLow <= 0xDFFF) {\n\t\t\t\t\t\t// convert only when both high and low surrogates are present\n\t\t\t\t\t\tcode = ((code & 0x3FF) << 10) + (codeLow & 0x3FF) + 0x10000;\n\t\t\t\t\t\t++i;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((code & 0xFFE00000) !== 0) {\n\t\t\t\t\tbytes[b++] = 0xF8 | ((code >>> 24) & 0x03);\n\t\t\t\t\tbytes[b++] = 0x80 | ((code >>> 18) & 0x3F);\n\t\t\t\t\tbytes[b++] = 0x80 | ((code >>> 12) & 0x3F);\n\t\t\t\t\tbytes[b++] = 0x80 | ((code >>> 6) & 0x3F);\n\t\t\t\t\tbytes[b++] = 0x80 | (code & 0x3F);\n\t\t\t\t} else if ((code & 0xFFFF0000) !== 0) {\n\t\t\t\t\tbytes[b++] = 0xF0 | ((code >>> 18) & 0x07);\n\t\t\t\t\tbytes[b++] = 0x80 | ((code >>> 12) & 0x3F);\n\t\t\t\t\tbytes[b++] = 0x80 | ((code >>> 6) & 0x3F);\n\t\t\t\t\tbytes[b++] = 0x80 | (code & 0x3F);\n\t\t\t\t} else if ((code & 0xFFFFF800) !== 0) {\n\t\t\t\t\tbytes[b++] = 0xE0 | ((code >>> 12) & 0x0F);\n\t\t\t\t\tbytes[b++] = 0x80 | ((code >>> 6) & 0x3F);\n\t\t\t\t\tbytes[b++] = 0x80 | (code & 0x3F);\n\t\t\t\t} else {\n\t\t\t\t\tbytes[b++] = 0xC0 | ((code >>> 6) & 0x1F);\n\t\t\t\t\tbytes[b++] = 0x80 | (code & 0x3F);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn bytes.subarray(0, b);\n\t\t}\n\n\t\texport function utf8encode(bytes: Uint8Array): string {\n\t\t\tlet j = 0, str = \"\";\n\t\t\twhile (j < bytes.length) {\n\t\t\t\tlet b1 = bytes[j++] & 0xFF;\n\t\t\t\tif (b1 <= 0x7F) {\n\t\t\t\t\tstr += String.fromCharCode(b1);\n\t\t\t\t} else {\n\t\t\t\t\tlet currentPrefix = 0xC0;\n\t\t\t\t\tlet validBits = 5;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tlet mask = (currentPrefix >> 1) | 0x80;\n\t\t\t\t\t\tif ((b1 & mask) === currentPrefix) break;\n\t\t\t\t\t\tcurrentPrefix = (currentPrefix >> 1) | 0x80;\n\t\t\t\t\t\t--validBits;\n\t\t\t\t\t} while (validBits >= 0);\n\n\t\t\t\t\tif (validBits <= 0) {\n\t\t\t\t\t\t// Invalid UTF8 character -- copying as is\n\t\t\t\t\t\tstr += String.fromCharCode(b1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet code = (b1 & ((1 << validBits) - 1));\n\t\t\t\t\tlet invalid = false;\n\t\t\t\t\tlet i;\n\t\t\t\t\tfor (i = 5; i >= validBits; --i) {\n\t\t\t\t\t\tlet bi = bytes[j++];\n\t\t\t\t\t\tif ((bi & 0xC0) != 0x80) {\n\t\t\t\t\t\t\t// Invalid UTF8 character sequence\n\t\t\t\t\t\t\tinvalid = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcode = (code << 6) | (bi & 0x3F);\n\t\t\t\t\t}\n\t\t\t\t\tif (invalid) {\n\t\t\t\t\t\t// Copying invalid sequence as is\n\t\t\t\t\t\tfor (let k = j - (7 - i); k < j; ++k) {\n\t\t\t\t\t\t\tstr += String.fromCharCode(bytes[k] & 255);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (code >= 0x10000) {\n\t\t\t\t\t\tstr += String.fromCharCode((((code - 0x10000) >> 10) & 0x3FF) |\n\t\t\t\t\t\t\t0xD800, (code & 0x3FF) | 0xDC00);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += String.fromCharCode(code);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t\t// https://gist.github.com/958841\n\t\texport function base64EncodeBytes(bytes: Uint8Array) {\n\t\t\tlet base64 = '';\n\t\t\tlet encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t\t\tlet byteLength = bytes.byteLength;\n\t\t\tlet byteRemainder = byteLength % 3;\n\t\t\tlet mainLength = byteLength - byteRemainder;\n\n\t\t\tlet a, b, c, d;\n\t\t\tlet chunk;\n\n\t\t\t// Main loop deals with bytes in chunks of 3\n\t\t\tfor (let i = 0; i < mainLength; i = i + 3) {\n\t\t\t\t// Combine the three bytes into a single integer\n\t\t\t\tchunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n\t\t\t\t// Use bitmasks to extract 6-bit segments from the triplet\n\t\t\t\ta = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n\t\t\t\tb = (chunk & 258048) >> 12; // 258048 = (2^6 - 1) << 12\n\t\t\t\tc = (chunk & 4032) >> 6; // 4032 = (2^6 - 1) << 6\n\t\t\t\td = chunk & 63; // 63 = 2^6 - 1\n\n\t\t\t\t// Convert the raw binary segments to the appropriate ASCII encoding\n\t\t\t\tbase64 += concat4(encodings[a], encodings[b], encodings[c],\n\t\t\t\t\tencodings[d]);\n\t\t\t}\n\n\t\t\t// Deal with the remaining bytes and padding\n\t\t\tif (byteRemainder == 1) {\n\t\t\t\tchunk = bytes[mainLength];\n\n\t\t\t\ta = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n\t\t\t\t// Set the 4 least significant bits to zero\n\t\t\t\tb = (chunk & 3) << 4; // 3 = 2^2 - 1\n\n\t\t\t\tbase64 += concat3(encodings[a], encodings[b], '==');\n\t\t\t} else if (byteRemainder == 2) {\n\t\t\t\tchunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n\t\t\t\ta = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n\t\t\t\tb = (chunk & 1008) >> 4; // 1008 = (2^6 - 1) << 4\n\n\t\t\t\t// Set the 2 least significant bits to zero\n\t\t\t\tc = (chunk & 15) << 2; // 15 = 2^4 - 1\n\n\t\t\t\tbase64 += concat4(encodings[a], encodings[b], encodings[c], '=');\n\t\t\t}\n\t\t\treturn base64;\n\t\t}\n\n\t\tlet base64DecodeMap = [ // starts at 0x2B\n\t\t\t62, 0, 0, 0, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\t\t\t0, 0, 0, 0, 0, 0, 0, // 0x3A-0x40\n\t\t\t0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n\t\t\t19, 20, 21, 22, 23, 24, 25, 0, 0, 0, 0, 0, 0, // 0x5B-0x0x60\n\t\t\t26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\n\t\t\t44, 45, 46, 47, 48, 49, 50, 51];\n\t\tlet base64DecodeMapOffset = 0x2B;\n\t\tlet base64EOF = 0x3D;\n\n\t\t/**\n\t\t * Decodes the result of encoding with base64EncodeBytes, but not necessarily any other\n\t\t * base64-encoded data. Note that this also doesn't do any error checking.\n\t\t */\n\t\texport function decodeRestrictedBase64ToBytes(encoded: string): Uint8Array {\n\t\t\tlet ch: number;\n\t\t\tlet code: number;\n\t\t\tlet code2: number;\n\n\t\t\tlet len = encoded.length;\n\t\t\tlet padding = encoded.charAt(len - 2) === '=' ? 2 : encoded.charAt(len - 1) === '=' ? 1 : 0;\n\t\t\trelease || assert(encoded.length % 4 === 0);\n\t\t\tlet decoded = new Uint8Array((encoded.length >> 2) * 3 - padding);\n\n\t\t\tfor (let i = 0, j = 0; i < encoded.length;) {\n\t\t\t\tch = encoded.charCodeAt(i++);\n\t\t\t\tcode = base64DecodeMap[ch - base64DecodeMapOffset];\n\t\t\t\tch = encoded.charCodeAt(i++);\n\t\t\t\tcode2 = base64DecodeMap[ch - base64DecodeMapOffset];\n\t\t\t\tdecoded[j++] = (code << 2) | ((code2 & 0x30) >> 4);\n\n\t\t\t\tch = encoded.charCodeAt(i++);\n\t\t\t\tif (ch == base64EOF) {\n\t\t\t\t\treturn decoded;\n\t\t\t\t}\n\t\t\t\tcode = base64DecodeMap[ch - base64DecodeMapOffset];\n\t\t\t\tdecoded[j++] = ((code2 & 0x0f) << 4) | ((code & 0x3c) >> 2);\n\n\t\t\t\tch = encoded.charCodeAt(i++);\n\t\t\t\tif (ch == base64EOF) {\n\t\t\t\t\treturn decoded;\n\t\t\t\t}\n\t\t\t\tcode2 = base64DecodeMap[ch - base64DecodeMapOffset];\n\t\t\t\tdecoded[j++] = ((code & 0x03) << 6) | code2;\n\t\t\t}\n\t\t\treturn decoded;\n\t\t}\n\n\t\texport function escapeString(str: string) {\n\t\t\tif (str !== undefined) {\n\t\t\t\tstr = str.replace(/[^\\w$]/gi, \"$\");\n\t\t\t\t/* No dots, colons, dashes and /s */\n\t\t\t\tif (/^\\d/.test(str)) { /* No digits at the beginning */\n\t\t\t\t\tstr = '$' + str;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t\t/**\n\t\t * Workaround for max stack size limit.\n\t\t */\n\t\texport function fromCharCodeArray(buffer: Uint8Array): string {\n\t\t\tlet str = \"\", SLICE = 1024 * 16;\n\t\t\tfor (let i = 0; i < buffer.length; i += SLICE) {\n\t\t\t\tlet chunk = Math.min(buffer.length - i, SLICE);\n\t\t\t\tstr += String.fromCharCode.apply(null, buffer.subarray(i, i + chunk));\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t\tlet _encoding = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$_';\n\n\t\texport function variableLengthEncodeInt32(n: number) {\n\t\t\tlet e = _encoding;\n\t\t\tlet bitCount = (32 - Math.clz32(n));\n\t\t\trelease || assert(bitCount <= 32, bitCount);\n\t\t\tlet l = Math.ceil(bitCount / 6);\n\t\t\t// Encode length followed by six bit chunks.\n\t\t\tlet s = e[l];\n\t\t\tfor (let i = l - 1; i >= 0; i--) {\n\t\t\t\tlet offset = (i * 6);\n\t\t\t\ts += e[(n >> offset) & 0x3F];\n\t\t\t}\n\t\t\trelease || assert(StringUtilities.variableLengthDecodeInt32(s) === n, n + \" : \" + s + \" - \" + l + \" bits: \" + bitCount);\n\t\t\treturn s;\n\t\t}\n\n\t\texport function toEncoding(n: number) {\n\t\t\treturn _encoding[n];\n\t\t}\n\n\t\texport function fromEncoding(c: number) {\n\t\t\tif (c >= 65 && c <= 90) {\n\t\t\t\treturn c - 65;\n\t\t\t} else if (c >= 97 && c <= 122) {\n\t\t\t\treturn c - 71;\n\t\t\t} else if (c >= 48 && c <= 57) {\n\t\t\t\treturn c + 4;\n\t\t\t} else if (c === 36) {\n\t\t\t\treturn 62;\n\t\t\t} else if (c === 95) {\n\t\t\t\treturn 63;\n\t\t\t}\n\t\t\trelease || assert(false, \"Invalid Encoding\");\n\t\t\treturn 0;\n\t\t}\n\n\t\texport function variableLengthDecodeInt32(s: string) {\n\t\t\tlet l = StringUtilities.fromEncoding(s.charCodeAt(0));\n\t\t\tlet n = 0;\n\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\tlet offset = ((l - i - 1) * 6);\n\t\t\t\tn |= StringUtilities.fromEncoding(s.charCodeAt(1 + i)) << offset;\n\t\t\t}\n\t\t\treturn n;\n\t\t}\n\n\t\texport function trimMiddle(s: string, maxLength: number): string {\n\t\t\tif (s.length <= maxLength) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t\tlet leftHalf = maxLength >> 1;\n\t\t\tlet rightHalf = maxLength - leftHalf - 1;\n\t\t\treturn s.substr(0, leftHalf) + \"\\u2026\" + s.substr(s.length - rightHalf, rightHalf);\n\t\t}\n\n\t\texport function multiple(s: string, count: number): string {\n\t\t\tlet o = \"\";\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\to += s;\n\t\t\t}\n\t\t\treturn o;\n\t\t}\n\n\t\texport function indexOfAny(s: string, chars: string [], position: number) {\n\t\t\tlet index = s.length;\n\t\t\tfor (let i = 0; i < chars.length; i++) {\n\t\t\t\tlet j = s.indexOf(chars[i], position);\n\t\t\t\tif (j >= 0) {\n\t\t\t\t\tindex = Math.min(index, j);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn index === s.length ? -1 : index;\n\t\t}\n\n\t\tlet _concat3array = new Array(3);\n\t\tlet _concat4array = new Array(4);\n\t\tlet _concat9array = new Array(9);\n\n\t\t/**\n\t\t * The concatN() functions concatenate multiple strings in a way that\n\t\t * avoids creating intermediate strings, unlike String.prototype.concat().\n\t\t *\n\t\t * Note that these functions don't have identical behaviour to using '+',\n\t\t * because they will ignore any arguments that are |undefined| or |null|.\n\t\t * This usually doesn't matter.\n\t\t */\n\n\t\texport function concat3(s0: any, s1: any, s2: any) {\n\t\t\t_concat3array[0] = s0;\n\t\t\t_concat3array[1] = s1;\n\t\t\t_concat3array[2] = s2;\n\t\t\treturn _concat3array.join('');\n\t\t}\n\n\t\texport function concat4(s0: any, s1: any, s2: any, s3: any) {\n\t\t\t_concat4array[0] = s0;\n\t\t\t_concat4array[1] = s1;\n\t\t\t_concat4array[2] = s2;\n\t\t\t_concat4array[3] = s3;\n\t\t\treturn _concat4array.join('');\n\t\t}\n\n\t\texport function concat9(s0: any, s1: any, s2: any, s3: any, s4: any,\n\t\t                        s5: any, s6: any, s7: any, s8: any) {\n\t\t\t_concat9array[0] = s0;\n\t\t\t_concat9array[1] = s1;\n\t\t\t_concat9array[2] = s2;\n\t\t\t_concat9array[3] = s3;\n\t\t\t_concat9array[4] = s4;\n\t\t\t_concat9array[5] = s5;\n\t\t\t_concat9array[6] = s6;\n\t\t\t_concat9array[7] = s7;\n\t\t\t_concat9array[8] = s8;\n\t\t\treturn _concat9array.join('');\n\t\t}\n\t}\n\n\texport module HashUtilities {\n\t\tlet _md5R = new Uint8Array([\n\t\t\t7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\n\t\t\t5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\n\t\t\t4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\n\t\t\t6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n\n\t\tlet _md5K = new Int32Array([\n\t\t\t-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426,\n\t\t\t-1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162,\n\t\t\t1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n\t\t\t643717713, -373897302, -701558691, 38016083, -660478335, -405537848,\n\t\t\t568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784,\n\t\t\t1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556,\n\t\t\t-1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222,\n\t\t\t-722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n\t\t\t-198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606,\n\t\t\t-1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649,\n\t\t\t-145523070, -1120210379, 718787259, -343485551]);\n\n\t\texport function hashBytesTo32BitsMD5(data: Uint8Array, offset: number, length: number): number {\n\t\t\tlet r = _md5R;\n\t\t\tlet k = _md5K;\n\t\t\tlet h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n\t\t\t// pre-processing\n\t\t\tlet paddedLength = (length + 72) & ~63; // data + 9 extra bytes\n\t\t\tlet padded = new Uint8Array(paddedLength);\n\t\t\tlet i, j, n;\n\t\t\tfor (i = 0; i < length; ++i) {\n\t\t\t\tpadded[i] = data[offset++];\n\t\t\t}\n\t\t\tpadded[i++] = 0x80;\n\t\t\tn = paddedLength - 8;\n\t\t\twhile (i < n) {\n\t\t\t\tpadded[i++] = 0;\n\t\t\t}\n\t\t\tpadded[i++] = (length << 3) & 0xFF;\n\t\t\tpadded[i++] = (length >> 5) & 0xFF;\n\t\t\tpadded[i++] = (length >> 13) & 0xFF;\n\t\t\tpadded[i++] = (length >> 21) & 0xFF;\n\t\t\tpadded[i++] = (length >>> 29) & 0xFF;\n\t\t\tpadded[i++] = 0;\n\t\t\tpadded[i++] = 0;\n\t\t\tpadded[i++] = 0;\n\t\t\t// chunking\n\t\t\t// TODO ArrayBuffer ?\n\t\t\tlet w = new Int32Array(16);\n\t\t\tfor (i = 0; i < paddedLength;) {\n\t\t\t\tfor (j = 0; j < 16; ++j, i += 4) {\n\t\t\t\t\tw[j] = (padded[i] | (padded[i + 1] << 8) |\n\t\t\t\t\t\t(padded[i + 2] << 16) | (padded[i + 3] << 24));\n\t\t\t\t}\n\t\t\t\tlet a = h0, b = h1, c = h2, d = h3, f, g;\n\t\t\t\tfor (j = 0; j < 64; ++j) {\n\t\t\t\t\tif (j < 16) {\n\t\t\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\t\t\tg = j;\n\t\t\t\t\t} else if (j < 32) {\n\t\t\t\t\t\tf = (d & b) | ((~d) & c);\n\t\t\t\t\t\tg = (5 * j + 1) & 15;\n\t\t\t\t\t} else if (j < 48) {\n\t\t\t\t\t\tf = b ^ c ^ d;\n\t\t\t\t\t\tg = (3 * j + 5) & 15;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tf = c ^ (b | (~d));\n\t\t\t\t\t\tg = (7 * j) & 15;\n\t\t\t\t\t}\n\t\t\t\t\tlet tmp = d, rotateArg = (a + f + k[j] + w[g]) | 0, rotate = r[j];\n\t\t\t\t\td = c;\n\t\t\t\t\tc = b;\n\t\t\t\t\tb = (b + ((rotateArg << rotate) | (rotateArg >>> (32 - rotate)))) | 0;\n\t\t\t\t\ta = tmp;\n\t\t\t\t}\n\t\t\t\th0 = (h0 + a) | 0;\n\t\t\t\th1 = (h1 + b) | 0;\n\t\t\t\th2 = (h2 + c) | 0;\n\t\t\t\th3 = (h3 + d) | 0;\n\t\t\t}\n\t\t\treturn h0;\n\t\t}\n\n\t\texport function mixHash(a: number, b: number) {\n\t\t\treturn (((31 * a) | 0) + b) | 0;\n\t\t}\n\t}\n\n\t/**\n\t * An extremely naive cache with a maximum size.\n\t * TODO: LRU\n\t */\n\texport class Cache {\n\t\tprivate _data: any;\n\t\tprivate _size: number;\n\t\tprivate _maxSize: number;\n\n\t\tconstructor(maxSize: number) {\n\t\t\tthis._data = Object.create(null);\n\t\t\tthis._size = 0;\n\t\t\tthis._maxSize = maxSize;\n\t\t}\n\n\t\tget(key: any) {\n\t\t\treturn this._data[key];\n\t\t}\n\n\t\tset(key: any, value: any) {\n\t\t\trelease || Debug.assert(!(key in this._data)); // Cannot mutate cache entries.\n\t\t\tif (this._size >= this._maxSize) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._data[key] = value;\n\t\t\tthis._size++;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Marsaglia's algorithm, adapted from V8. Use this if you want a deterministic random number.\n\t */\n\texport class Random {\n\t\tprivate static _state: Uint32Array = new Uint32Array([0xDEAD, 0xBEEF]);\n\n\t\tpublic static seed(seed: number) {\n\t\t\tRandom._state[0] = seed;\n\t\t\tRandom._state[1] = seed;\n\t\t}\n\n\t\tpublic static reset() {\n\t\t\tRandom._state[0] = 0xDEAD;\n\t\t\tRandom._state[1] = 0xBEEF;\n\t\t}\n\n\t\tpublic static next(): number {\n\t\t\tlet s = this._state;\n\t\t\tlet r0 = (Math.imul(18273, s[0] & 0xFFFF) + (s[0] >>> 16)) | 0;\n\t\t\ts[0] = r0;\n\t\t\tlet r1 = (Math.imul(36969, s[1] & 0xFFFF) + (s[1] >>> 16)) | 0;\n\t\t\ts[1] = r1;\n\t\t\tlet x = ((r0 << 16) + (r1 & 0xFFFF)) | 0;\n\t\t\t// Division by 0x100000000 through multiplication by reciprocal.\n\t\t\treturn (x < 0 ? (x + 0x100000000) : x) * 2.3283064365386962890625e-10;\n\t\t}\n\t}\n\n\tMath.random = function random(): number {\n\t\treturn Random.next();\n\t};\n\n\t/**\n\t * This should only be called if you need fake time.\n\t */\n\texport function installTimeWarper() {\n\t\tlet RealDate = Date;\n\n\t\t// Go back in time.\n\t\tlet fakeTime = 1428107694580; // 3-Apr-2015\n\n\t\t// Overload\n\t\tjsGlobal.Date = function (yearOrTimevalue?: number, month?: number, date?: number, hour?: number,\n\t\t                          minute?: number, second?: number, millisecond?: number) {\n\t\t\tswitch (arguments.length) {\n\t\t\t\tcase  0:\n\t\t\t\t\treturn new RealDate(fakeTime);\n\t\t\t\tcase  1:\n\t\t\t\t\treturn new RealDate(yearOrTimevalue);\n\t\t\t\tcase  2:\n\t\t\t\t\treturn new RealDate(yearOrTimevalue, month);\n\t\t\t\tcase  3:\n\t\t\t\t\treturn new RealDate(yearOrTimevalue, month, date);\n\t\t\t\tcase  4:\n\t\t\t\t\treturn new RealDate(yearOrTimevalue, month, date, hour);\n\t\t\t\tcase  5:\n\t\t\t\t\treturn new RealDate(yearOrTimevalue, month, date, hour, minute);\n\t\t\t\tcase  6:\n\t\t\t\t\treturn new RealDate(yearOrTimevalue, month, date, hour, minute, second);\n\t\t\t\tdefault:\n\t\t\t\t\treturn new RealDate(yearOrTimevalue, month, date, hour, minute, second, millisecond);\n\t\t\t}\n\t\t};\n\n\t\t// Make date now deterministic.\n\t\tjsGlobal.Date.now = function () {\n\t\t\treturn fakeTime += 10; // Advance time.\n\t\t};\n\n\t\tjsGlobal.Date.UTC = function () {\n\t\t\treturn RealDate.UTC.apply(RealDate, arguments);\n\t\t};\n\t}\n\n\n\tfunction polyfillWeakMap() {\n\t\tif (typeof jsGlobal.WeakMap === 'function') {\n\t\t\treturn; // weak map is supported\n\t\t}\n\t\tlet id = 0;\n\n\t\tfunction WeakMap() {\n\t\t\tthis.id = '$weakmap' + (id++);\n\t\t}\n\t\tWeakMap.prototype = {\n\t\t\thas: function (obj: any) {\n\t\t\t\treturn obj.hasOwnProperty(this.id);\n\t\t\t},\n\t\t\tget: function (obj: any, defaultValue: any) {\n\t\t\t\treturn obj.hasOwnProperty(this.id) ? obj[this.id] : defaultValue;\n\t\t\t},\n\t\t\tset: function (obj: any, value: any) {\n\t\t\t\tObject.defineProperty(obj, this.id, {\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tconfigurable: true\n\t\t\t\t});\n\t\t\t},\n\t\t\tdelete: function (obj: any) {\n\t\t\t\tdelete obj[this.id];\n\t\t\t}\n\t\t};\n\t\tjsGlobal.WeakMap = WeakMap;\n\t}\n\n\tpolyfillWeakMap();\n\n\texport interface IReferenceCountable {\n\t\t_referenceCount: number;\n\n\t\t_addReference(): void;\n\n\t\t_removeReference(): void;\n\t}\n\n\tlet useReferenceCounting = true;\n\n\texport class WeakList<T extends IReferenceCountable> {\n\t\tprivate _map: WeakMap<T, number>;\n\t\tprivate _newAdditions: Array<Array<T>>;\n\t\tprivate _list: T [];\n\t\tprivate _id: number;\n\n\t\tconstructor() {\n\t\t\tif (typeof ShumwayCom !== \"undefined\" && ShumwayCom.getWeakMapKeys) {\n\t\t\t\tthis._map = new WeakMap<T, number>();\n\t\t\t\tthis._id = 0;\n\t\t\t\tthis._newAdditions = [];\n\t\t\t} else {\n\t\t\t\tthis._list = [];\n\t\t\t}\n\t\t}\n\n\t\tclear() {\n\t\t\tif (this._map) {\n\t\t\t\tthis._map = new WeakMap<T, number>();\n\t\t\t} else {\n\t\t\t\tthis._list.length = 0;\n\t\t\t}\n\t\t}\n\n\t\tpush(value: T) {\n\t\t\tif (this._map) {\n\t\t\t\trelease || Debug.assert(!this._map.has(value));\n\t\t\t\t// We store an increasing id as the value so that keys can be sorted by it.\n\t\t\t\tthis._map.set(value, this._id++);\n\t\t\t\tthis._newAdditions.forEach(function (additions: Array<T>) {\n\t\t\t\t\tadditions.push(value);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trelease || Debug.assert(this._list.indexOf(value) === -1);\n\t\t\t\tthis._list.push(value);\n\t\t\t}\n\t\t}\n\n\t\tremove(value: T) {\n\t\t\tif (this._map) {\n\t\t\t\trelease || Debug.assert(this._map.has(value));\n\t\t\t\tthis._map.delete(value);\n\t\t\t} else {\n\t\t\t\trelease || Debug.assert(this._list.indexOf(value) > -1);\n\t\t\t\tthis._list[this._list.indexOf(value)] = null;\n\t\t\t\trelease || Debug.assert(this._list.indexOf(value) === -1);\n\t\t\t}\n\t\t}\n\n\t\tforEach(callback: (value: T) => void) {\n\t\t\tif (this._map) {\n\t\t\t\tlet newAdditionsToKeys: Array<T> = [];\n\t\t\t\tthis._newAdditions.push(newAdditionsToKeys);\n\t\t\t\tlet map = this._map;\n\t\t\t\tlet keys: Array<T> = ShumwayCom.getWeakMapKeys(map);\n\t\t\t\t// The keys returned by ShumwayCom.getWeakMapKeys are not guaranteed to\n\t\t\t\t// be in insertion order. Therefore we have to sort them manually.\n\t\t\t\tkeys.sort(function (a: T, b: T) {\n\t\t\t\t\treturn map.get(a) - map.get(b);\n\t\t\t\t});\n\t\t\t\tkeys.forEach(function (value: T) {\n\t\t\t\t\tif (value._referenceCount !== 0) {\n\t\t\t\t\t\tcallback(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// ShumwayCom.getWeakMapKeys take snapshot of the keys, but we are also\n\t\t\t\t// interested in new added keys while keys.forEach was run.\n\t\t\t\tnewAdditionsToKeys.forEach(function (value: T) {\n\t\t\t\t\tif (value._referenceCount !== 0) {\n\t\t\t\t\t\tcallback(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._newAdditions.splice(this._newAdditions.indexOf(newAdditionsToKeys), 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet list = this._list;\n\t\t\tlet zeroCount = 0;\n\t\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\t\tlet value = list[i];\n\t\t\t\tif (!value) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (useReferenceCounting && value._referenceCount === 0) {\n\t\t\t\t\tlist[i] = null;\n\t\t\t\t\tzeroCount++;\n\t\t\t\t} else {\n\t\t\t\t\tcallback(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (zeroCount > 16 && zeroCount > (list.length >> 2)) {\n\t\t\t\tlet newList = [];\n\t\t\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\t\t\tlet value = list[i];\n\t\t\t\t\tif (value && value._referenceCount > 0) {\n\t\t\t\t\t\tnewList.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._list = newList;\n\t\t\t}\n\t\t}\n\n\t\tget length(): number {\n\t\t\tif (this._map) {\n\t\t\t\t// TODO: Implement this.\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn this._list.length;\n\t\t\t}\n\t\t}\n\t}\n\n\texport module NumberUtilities {\n\t\texport function pow2(exponent: number): number {\n\t\t\tif (exponent === (exponent | 0)) {\n\t\t\t\tif (exponent < 0) {\n\t\t\t\t\treturn 1 / (1 << -exponent);\n\t\t\t\t}\n\t\t\t\treturn 1 << exponent;\n\t\t\t}\n\t\t\treturn Math.pow(2, exponent);\n\t\t}\n\n\t\texport function clamp(value: number, min: number, max: number) {\n\t\t\treturn Math.max(min, Math.min(max, value));\n\t\t}\n\n\t\t/**\n\t\t * Rounds *.5 to the nearest even number.\n\t\t * See https://en.wikipedia.org/wiki/Rounding#Round_half_to_even for details.\n\t\t */\n\t\texport function roundHalfEven(value: number): number {\n\t\t\tif (Math.abs(value % 1) === 0.5) {\n\t\t\t\tlet floor = Math.floor(value);\n\t\t\t\treturn floor % 2 === 0 ? floor : Math.ceil(value);\n\t\t\t}\n\t\t\treturn Math.round(value);\n\t\t}\n\n\t\t/**\n\t\t * Rounds *.5 up on even occurrences, down on odd occurrences.\n\t\t * See https://en.wikipedia.org/wiki/Rounding#Alternating_tie-breaking for details.\n\t\t */\n\t\texport function altTieBreakRound(value: number, even: boolean): number {\n\t\t\tif (Math.abs(value % 1) === 0.5 && !even) {\n\t\t\t\treturn value | 0;\n\t\t\t}\n\t\t\treturn Math.round(value);\n\t\t}\n\n\t\texport function epsilonEquals(value: number, other: number): boolean {\n\t\t\treturn Math.abs(value - other) < 0.0000001;\n\t\t}\n\t}\n\n\texport const enum Numbers {\n\t\tMaxU16 = 0xFFFF,\n\t\tMaxI16 = 0x7FFF,\n\t\tMinI16 = -0x8000\n\t}\n\n\texport module IntegerUtilities {\n\t\tlet sharedBuffer = new ArrayBuffer(8);\n\t\texport let i8 = new Int8Array(sharedBuffer);\n\t\texport let u8 = new Uint8Array(sharedBuffer);\n\t\texport let i32 = new Int32Array(sharedBuffer);\n\t\texport let f32 = new Float32Array(sharedBuffer);\n\t\texport let f64 = new Float64Array(sharedBuffer);\n\t\texport let nativeLittleEndian = new Int8Array(new Int32Array([1]).buffer)[0] === 1;\n\n\t\t/**\n\t\t * Convert a float into 32 bits.\n\t\t */\n\t\texport function floatToInt32(v: number) {\n\t\t\tf32[0] = v;\n\t\t\treturn i32[0];\n\t\t}\n\n\t\t/**\n\t\t * Convert 32 bits into a float.\n\t\t */\n\t\texport function int32ToFloat(i: number) {\n\t\t\ti32[0] = i;\n\t\t\treturn f32[0];\n\t\t}\n\n\t\t/**\n\t\t * Swap the bytes of a 16 bit number.\n\t\t */\n\t\texport function swap16(i: number) {\n\t\t\treturn ((i & 0xFF) << 8) | ((i >> 8) & 0xFF);\n\t\t}\n\n\t\t/**\n\t\t * Swap the bytes of a 32 bit number.\n\t\t */\n\t\texport function swap32(i: number) {\n\t\t\treturn ((i & 0xFF) << 24) | ((i & 0xFF00) << 8) | ((i >> 8) & 0xFF00) | ((i >> 24) & 0xFF);\n\t\t}\n\n\t\t/**\n\t\t * Converts a number to s8.u8 fixed point representation.\n\t\t */\n\t\texport function toS8U8(v: number) {\n\t\t\treturn ((v * 256) << 16) >> 16;\n\t\t}\n\n\t\t/**\n\t\t * Converts a number from s8.u8 fixed point representation.\n\t\t */\n\t\texport function fromS8U8(i: number) {\n\t\t\treturn i / 256;\n\t\t}\n\n\t\t/**\n\t\t * Round trips a number through s8.u8 conversion.\n\t\t */\n\t\texport function clampS8U8(v: number) {\n\t\t\treturn fromS8U8(toS8U8(v));\n\t\t}\n\n\t\t/**\n\t\t * Converts a number to signed 16 bits.\n\t\t */\n\t\texport function toS16(v: number) {\n\t\t\treturn (v << 16) >> 16;\n\t\t}\n\n\t\texport function bitCount(i: number): number {\n\t\t\ti = i - ((i >> 1) & 0x55555555);\n\t\t\ti = (i & 0x33333333) + ((i >> 2) & 0x33333333);\n\t\t\treturn (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24;\n\t\t}\n\n\t\texport function ones(i: number): number {\n\t\t\ti = i - ((i >> 1) & 0x55555555);\n\t\t\ti = (i & 0x33333333) + ((i >> 2) & 0x33333333);\n\t\t\treturn ((i + (i >> 4) & 0xF0F0F0F) * 0x1010101) >> 24;\n\t\t}\n\n\t\texport function trailingZeros(i: number): number {\n\t\t\treturn IntegerUtilities.ones((i & -i) - 1);\n\t\t}\n\n\t\texport function getFlags(i: number, flags: string[]): string {\n\t\t\tlet str = \"\";\n\t\t\tfor (let i = 0; i < flags.length; i++) {\n\t\t\t\tif ((i & (1 << i)) !== 0) {\n\t\t\t\t\tstr += flags[i] + \" \";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (str.length === 0) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\treturn str.trim();\n\t\t}\n\n\t\texport function isPowerOfTwo(x: number) {\n\t\t\treturn x && ((x & (x - 1)) === 0);\n\t\t}\n\n\t\texport function roundToMultipleOfFour(x: number) {\n\t\t\treturn (x + 3) & ~0x3;\n\t\t}\n\n\t\texport function nearestPowerOfTwo(x: number) {\n\t\t\tx--;\n\t\t\tx |= x >> 1;\n\t\t\tx |= x >> 2;\n\t\t\tx |= x >> 4;\n\t\t\tx |= x >> 8;\n\t\t\tx |= x >> 16;\n\t\t\tx++;\n\t\t\treturn x;\n\t\t}\n\n\t\texport function roundToMultipleOfPowerOfTwo(i: number, powerOfTwo: number) {\n\t\t\tlet x = (1 << powerOfTwo) - 1;\n\t\t\treturn (i + x) & ~x; // Round up to multiple of power of two.\n\t\t}\n\n\t\texport function toHEX(i: number) {\n\t\t\ti = (i < 0 ? 0xFFFFFFFF + i + 1 : i);\n\t\t\treturn \"0x\" + (\"00000000\" + i.toString(16)).substr(-8);\n\t\t}\n\n\t\t/**\n\t\t * Polyfill imul.\n\t\t */\n\t\tif (!Math.imul) {\n\t\t\tMath.imul = function imul(a: number, b: number) {\n\t\t\t\tlet ah = (a >>> 16) & 0xffff;\n\t\t\t\tlet al = a & 0xffff;\n\t\t\t\tlet bh = (b >>> 16) & 0xffff;\n\t\t\t\tlet bl = b & 0xffff;\n\t\t\t\t// the shift by 0 fixes the sign on the high part\n\t\t\t\t// the final |0 converts the unsigned value into a signed value\n\t\t\t\treturn ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Polyfill clz32.\n\t\t */\n\t\tif (!Math.clz32) {\n\t\t\tMath.clz32 = function clz32(i: number) {\n\t\t\t\ti |= (i >> 1);\n\t\t\t\ti |= (i >> 2);\n\t\t\t\ti |= (i >> 4);\n\t\t\t\ti |= (i >> 8);\n\t\t\t\ti |= (i >> 16);\n\t\t\t\treturn 32 - IntegerUtilities.ones(i);\n\t\t\t};\n\t\t}\n\t}\n\n\texport const enum LogLevel {\n\t\tError = 0x1,\n\t\tWarn = 0x2,\n\t\tDebug = 0x4,\n\t\tLog = 0x8,\n\t\tInfo = 0x10,\n\t\tAll = 0x1f\n\t}\n\n\texport class IndentingWriter {\n\t\t// public static PURPLE = '\\033[94m';\n\t\t// public static YELLOW = '\\033[93m';\n\t\t// public static GREEN = '\\033[92m';\n\t\t// public static RED = '\\033[91m';\n\t\t// public static BOLD_RED = '\\033[1;91m';\n\t\t// public static ENDC = '\\033[0m';\n\n\t\tpublic static PURPLE = '\\x1B[94m';\n\t\tpublic static YELLOW = '\\x1B[93m';\n\t\tpublic static GREEN = '\\x1B[92m';\n\t\tpublic static RED = '\\x1B[91m';\n\t\tpublic static BOLD_RED = '\\x1B[1;91m';\n\t\tpublic static ENDC = '\\x1B[0m';\n\n\t\tpublic static logLevel: LogLevel = LogLevel.All;\n\n\t\tprivate static _consoleOut = console.log.bind(console);\n\t\tprivate static _consoleOutNoNewline = console.log.bind(console);\n\n\t\tprivate _tab: string;\n\t\tprivate _padding: string;\n\t\tprivate _suppressOutput: boolean;\n\t\tprivate _out: (s: string, o?: any) => void;\n\t\tprivate _outNoNewline: (s: string) => void;\n\n\t\tget suppressOutput() {\n\t\t\treturn this._suppressOutput;\n\t\t}\n\n\t\tset suppressOutput(val: boolean) {\n\t\t\tthis._suppressOutput = val;\n\t\t}\n\n\t\tconstructor(suppressOutput: boolean = false, out?: any) {\n\t\t\tthis._tab = \"  \";\n\t\t\tthis._padding = \"\";\n\t\t\tthis._suppressOutput = suppressOutput;\n\t\t\tthis._out = out || IndentingWriter._consoleOut;\n\t\t\tthis._outNoNewline = out || IndentingWriter._consoleOutNoNewline;\n\t\t}\n\n\t\twrite(str: string = \"\", writePadding = false) {\n\t\t\tif (!this._suppressOutput) {\n\t\t\t\tthis._outNoNewline((writePadding ? this._padding : \"\") + str);\n\t\t\t}\n\t\t}\n\n\t\twriteLn(str: string = \"\") {\n\t\t\tif (!this._suppressOutput) {\n\t\t\t\tthis._out(this._padding + str);\n\t\t\t}\n\t\t}\n\n\t\twriteObject(str: string = \"\", object?: Object) {\n\t\t\tif (!this._suppressOutput) {\n\t\t\t\tthis._out(this._padding + str, object);\n\t\t\t}\n\t\t}\n\n\t\twriteTimeLn(str: string = \"\") {\n\t\t\tif (!this._suppressOutput) {\n\t\t\t\tthis._out(this._padding + performance.now().toFixed(2) + \" \" + str);\n\t\t\t}\n\t\t}\n\n\t\twriteComment(str: string) {\n\t\t\tlet lines = (str || '').split(\"\\n\");\n\t\t\tif (lines.length === 1) {\n\t\t\t\tthis.writeLn(\"// \" + lines[0]);\n\t\t\t} else {\n\t\t\t\tthis.writeLn(\"/**\");\n\t\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\t\tthis.writeLn(\" * \" + lines[i]);\n\t\t\t\t}\n\t\t\t\tthis.writeLn(\" */\");\n\t\t\t}\n\t\t}\n\n\t\twriteLns(str: string) {\n\t\t\tlet lines = (str || '').split(\"\\n\");\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tthis.writeLn(lines[i]);\n\t\t\t}\n\t\t}\n\n\t\terrorLn(str: string) {\n\t\t\tif (IndentingWriter.logLevel & LogLevel.Error) {\n\t\t\t\tthis.boldRedLn(str);\n\t\t\t}\n\t\t}\n\n\t\twarnLn(str: string) {\n\t\t\tif (IndentingWriter.logLevel & LogLevel.Warn) {\n\t\t\t\tthis.yellowLn(str);\n\t\t\t}\n\t\t}\n\n\t\tdebugLn(str: string) {\n\t\t\tif (IndentingWriter.logLevel & LogLevel.Debug) {\n\t\t\t\tthis.purpleLn(str);\n\t\t\t}\n\t\t}\n\n\t\tlogLn(str: string) {\n\t\t\tif (IndentingWriter.logLevel & LogLevel.Log) {\n\t\t\t\tthis.writeLn(str);\n\t\t\t}\n\t\t}\n\n\t\tinfoLn(str: string) {\n\t\t\tif (IndentingWriter.logLevel & LogLevel.Info) {\n\t\t\t\tthis.writeLn(str);\n\t\t\t}\n\t\t}\n\n\t\tyellowLn(str: string) {\n\t\t\tthis.colorLn(IndentingWriter.YELLOW, str);\n\t\t}\n\n\t\tgreenLn(str: string) {\n\t\t\tthis.colorLn(IndentingWriter.GREEN, str);\n\t\t}\n\n\t\tboldRedLn(str: string) {\n\t\t\tthis.colorLn(IndentingWriter.BOLD_RED, str);\n\t\t}\n\n\t\tredLn(str: string) {\n\t\t\tthis.colorLn(IndentingWriter.RED, str);\n\t\t}\n\n\t\tpurpleLn(str: string) {\n\t\t\tthis.colorLn(IndentingWriter.PURPLE, str);\n\t\t}\n\n\t\tcolorLn(color: string, str: string) {\n\t\t\tif (!this._suppressOutput) {\n\t\t\t\tif (!inBrowser) {\n\t\t\t\t\tthis._out(this._padding + color + str + IndentingWriter.ENDC);\n\t\t\t\t} else {\n\t\t\t\t\tthis._out(this._padding + str);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tredLns(str: string) {\n\t\t\tthis.colorLns(IndentingWriter.RED, str);\n\t\t}\n\n\t\tcolorLns(color: string, str: string) {\n\t\t\tlet lines = (str || '').split(\"\\n\");\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tthis.colorLn(color, lines[i]);\n\t\t\t}\n\t\t}\n\n\t\tenter(str: string) {\n\t\t\tif (!this._suppressOutput) {\n\t\t\t\tthis._out(this._padding + str);\n\t\t\t}\n\t\t\tthis.indent();\n\t\t}\n\n\t\tleaveAndEnter(str: string) {\n\t\t\tthis.leave(str);\n\t\t\tthis.indent();\n\t\t}\n\n\t\tleave(str?: string) {\n\t\t\tthis.outdent();\n\t\t\tif (!this._suppressOutput && str) {\n\t\t\t\tthis._out(this._padding + str);\n\t\t\t}\n\t\t}\n\n\t\tindent() {\n\t\t\tthis._padding += this._tab;\n\t\t}\n\n\t\toutdent() {\n\t\t\tif (this._padding.length > 0) {\n\t\t\t\tthis._padding = this._padding.substring(0, this._padding.length - this._tab.length);\n\t\t\t}\n\t\t}\n\n\t\twriteArray(arr: any[], detailed: boolean = false, noNumbers: boolean = false) {\n\t\t\tdetailed = detailed || false;\n\t\t\tfor (let i = 0, j = arr.length; i < j; i++) {\n\t\t\t\tlet prefix = \"\";\n\t\t\t\tif (detailed) {\n\t\t\t\t\tif (arr[i] === null) {\n\t\t\t\t\t\tprefix = \"null\";\n\t\t\t\t\t} else if (arr[i] === undefined) {\n\t\t\t\t\t\tprefix = \"undefined\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprefix = arr[i].constructor.name;\n\t\t\t\t\t}\n\t\t\t\t\tprefix += \" \";\n\t\t\t\t}\n\t\t\t\tlet number = noNumbers ? \"\" : (\"\" + i).padRight(' ', 4);\n\t\t\t\tthis.writeLn(number + prefix + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\texport class CircularBuffer {\n\t\tindex: number;\n\t\tstart: number;\n\t\tarray: Array<number>;\n\t\t_size: number;\n\t\t_mask: number;\n\n\t\tconstructor(Type: any, sizeInBits: number = 12) {\n\t\t\tthis.index = 0;\n\t\t\tthis.start = 0;\n\t\t\tthis._size = 1 << sizeInBits;\n\t\t\tthis._mask = this._size - 1;\n\t\t\tthis.array = new Type(this._size);\n\t\t}\n\n\t\tpublic get(i: number) {\n\t\t\treturn (this.array as any)[i];\n\t\t}\n\n\t\tpublic forEachInReverse(visitor: any) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet i = this.index === 0 ? this._size - 1 : this.index - 1;\n\t\t\tlet end = (this.start - 1) & this._mask;\n\t\t\twhile (i !== end) {\n\t\t\t\tif (visitor(this.array[i], i)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti = i === 0 ? this._size - 1 : i - 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic write(value: any) {\n\t\t\tthis.array[this.index] = value;\n\t\t\tthis.index = (this.index + 1) & this._mask;\n\t\t\tif (this.index === this.start) {\n\t\t\t\tthis.start = (this.start + 1) & this._mask;\n\t\t\t}\n\t\t}\n\n\t\tpublic isFull(): boolean {\n\t\t\treturn ((this.index + 1) & this._mask) === this.start;\n\t\t}\n\n\t\tpublic isEmpty(): boolean {\n\t\t\treturn this.index === this.start;\n\t\t}\n\n\t\tpublic reset() {\n\t\t\tthis.index = 0;\n\t\t\tthis.start = 0;\n\t\t}\n\t}\n\n\texport class ColorStyle {\n\t\tstatic TabToolbar = \"#252c33\";\n\t\tstatic Toolbars = \"#343c45\";\n\t\tstatic HighlightBlue = \"#1d4f73\";\n\t\tstatic LightText = \"#f5f7fa\";\n\t\tstatic ForegroundText = \"#b6babf\";\n\t\tstatic Black = \"#000000\";\n\t\tstatic VeryDark = \"#14171a\";\n\t\tstatic Dark = \"#181d20\";\n\t\tstatic Light = \"#a9bacb\";\n\t\tstatic Grey = \"#8fa1b2\";\n\t\tstatic DarkGrey = \"#5f7387\";\n\t\tstatic Blue = \"#46afe3\";\n\t\tstatic Purple = \"#6b7abb\";\n\t\tstatic Pink = \"#df80ff\";\n\t\tstatic Red = \"#eb5368\";\n\t\tstatic Orange = \"#d96629\";\n\t\tstatic LightOrange = \"#d99b28\";\n\t\tstatic Green = \"#70bf53\";\n\t\tstatic BlueGrey = \"#5e88b0\";\n\n\t\tprivate static _randomStyleCache: Array<string>;\n\t\tprivate static _nextStyle = 0;\n\n\t\tstatic randomStyle() {\n\t\t\tif (!ColorStyle._randomStyleCache) {\n\t\t\t\tColorStyle._randomStyleCache = [\n\t\t\t\t\t\"#ff5e3a\",\n\t\t\t\t\t\"#ff9500\",\n\t\t\t\t\t\"#ffdb4c\",\n\t\t\t\t\t\"#87fc70\",\n\t\t\t\t\t\"#52edc7\",\n\t\t\t\t\t\"#1ad6fd\",\n\t\t\t\t\t\"#c644fc\",\n\t\t\t\t\t\"#ef4db6\",\n\t\t\t\t\t\"#4a4a4a\",\n\t\t\t\t\t\"#dbddde\",\n\t\t\t\t\t\"#ff3b30\",\n\t\t\t\t\t\"#ff9500\",\n\t\t\t\t\t\"#ffcc00\",\n\t\t\t\t\t\"#4cd964\",\n\t\t\t\t\t\"#34aadc\",\n\t\t\t\t\t\"#007aff\",\n\t\t\t\t\t\"#5856d6\",\n\t\t\t\t\t\"#ff2d55\",\n\t\t\t\t\t\"#8e8e93\",\n\t\t\t\t\t\"#c7c7cc\",\n\t\t\t\t\t\"#5ad427\",\n\t\t\t\t\t\"#c86edf\",\n\t\t\t\t\t\"#d1eefc\",\n\t\t\t\t\t\"#e0f8d8\",\n\t\t\t\t\t\"#fb2b69\",\n\t\t\t\t\t\"#f7f7f7\",\n\t\t\t\t\t\"#1d77ef\",\n\t\t\t\t\t\"#d6cec3\",\n\t\t\t\t\t\"#55efcb\",\n\t\t\t\t\t\"#ff4981\",\n\t\t\t\t\t\"#ffd3e0\",\n\t\t\t\t\t\"#f7f7f7\",\n\t\t\t\t\t\"#ff1300\",\n\t\t\t\t\t\"#1f1f21\",\n\t\t\t\t\t\"#bdbec2\",\n\t\t\t\t\t\"#ff3a2d\"\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn ColorStyle._randomStyleCache[(ColorStyle._nextStyle++) % ColorStyle._randomStyleCache.length];\n\t\t}\n\n\t\tprivate static _gradient = [\n\t\t\t\"#FF0000\",  // Red\n\t\t\t\"#FF1100\",\n\t\t\t\"#FF2300\",\n\t\t\t\"#FF3400\",\n\t\t\t\"#FF4600\",\n\t\t\t\"#FF5700\",\n\t\t\t\"#FF6900\",\n\t\t\t\"#FF7B00\",\n\t\t\t\"#FF8C00\",\n\t\t\t\"#FF9E00\",\n\t\t\t\"#FFAF00\",\n\t\t\t\"#FFC100\",\n\t\t\t\"#FFD300\",\n\t\t\t\"#FFE400\",\n\t\t\t\"#FFF600\",\n\t\t\t\"#F7FF00\",\n\t\t\t\"#E5FF00\",\n\t\t\t\"#D4FF00\",\n\t\t\t\"#C2FF00\",\n\t\t\t\"#B0FF00\",\n\t\t\t\"#9FFF00\",\n\t\t\t\"#8DFF00\",\n\t\t\t\"#7CFF00\",\n\t\t\t\"#6AFF00\",\n\t\t\t\"#58FF00\",\n\t\t\t\"#47FF00\",\n\t\t\t\"#35FF00\",\n\t\t\t\"#24FF00\",\n\t\t\t\"#12FF00\",\n\t\t\t\"#00FF00\"   // Green\n\t\t];\n\n\t\tstatic gradientColor(value: number) {\n\t\t\treturn ColorStyle._gradient[ColorStyle._gradient.length * NumberUtilities.clamp(value, 0, 1) | 0];\n\t\t}\n\n\t\tstatic contrastStyle(rgb: string): string {\n\t\t\t// http://www.w3.org/TR/AERT#color-contrast\n\t\t\tlet c = parseInt(rgb.substr(1), 16);\n\t\t\tlet yiq = (((c >> 16) * 299) + (((c >> 8) & 0xff) * 587) + ((c & 0xff) * 114)) / 1000;\n\t\t\treturn (yiq >= 128) ? '#000000' : '#ffffff';\n\t\t}\n\n\t\tstatic reset() {\n\t\t\tColorStyle._nextStyle = 0;\n\t\t}\n\t}\n\n\texport interface UntypedBounds {\n\t\txMin: number;\n\t\tyMin: number;\n\t\txMax: number;\n\t\tyMax: number;\n\t}\n\n\texport interface ASRectangle {\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number;\n\t}\n\n\t/**\n\t * Faster release version of bounds.\n\t */\n\texport class Bounds {\n\t\txMin: number;\n\t\tyMin: number;\n\t\txMax: number;\n\t\tyMax: number;\n\n\t\tconstructor(xMin: number, yMin: number, xMax: number, yMax: number) {\n\t\t\tthis.xMin = xMin | 0;\n\t\t\tthis.yMin = yMin | 0;\n\t\t\tthis.xMax = xMax | 0;\n\t\t\tthis.yMax = yMax | 0;\n\t\t}\n\n\t\tstatic FromUntyped(source: UntypedBounds): Bounds {\n\t\t\treturn new Bounds(source.xMin, source.yMin, source.xMax, source.yMax);\n\t\t}\n\n\t\tstatic FromRectangle(source: ASRectangle): Bounds {\n\t\t\treturn new Bounds(source.x * 20 | 0, source.y * 20 | 0, (source.x + source.width) * 20 | 0,\n\t\t\t\t(source.y + source.height) * 20 | 0);\n\t\t}\n\n\t\tsetElements(xMin: number, yMin: number, xMax: number, yMax: number): void {\n\t\t\tthis.xMin = xMin;\n\t\t\tthis.yMin = yMin;\n\t\t\tthis.xMax = xMax;\n\t\t\tthis.yMax = yMax;\n\t\t}\n\n\t\tcopyFrom(source: Bounds): void {\n\t\t\tthis.setElements(source.xMin, source.yMin, source.xMax, source.yMax);\n\t\t}\n\n\t\tcontains(x: number, y: number): boolean {\n\t\t\treturn x < this.xMin !== x < this.xMax &&\n\t\t\t\ty < this.yMin !== y < this.yMax;\n\t\t}\n\n\t\tunionInPlace(other: Bounds): void {\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.extendByPoint(other.xMin, other.yMin);\n\t\t\tthis.extendByPoint(other.xMax, other.yMax);\n\t\t}\n\n\t\textendByPoint(x: number, y: number): void {\n\t\t\tthis.extendByX(x);\n\t\t\tthis.extendByY(y);\n\t\t}\n\n\t\textendByX(x: number): void {\n\t\t\t// Exclude default values.\n\t\t\tif (this.xMin === 0x8000000) {\n\t\t\t\tthis.xMin = this.xMax = x;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.xMin = Math.min(this.xMin, x);\n\t\t\tthis.xMax = Math.max(this.xMax, x);\n\t\t}\n\n\t\textendByY(y: number): void {\n\t\t\t// Exclude default values.\n\t\t\tif (this.yMin === 0x8000000) {\n\t\t\t\tthis.yMin = this.yMax = y;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.yMin = Math.min(this.yMin, y);\n\t\t\tthis.yMax = Math.max(this.yMax, y);\n\t\t}\n\n\t\tpublic intersects(toIntersect: Bounds): boolean {\n\t\t\treturn this.contains(toIntersect.xMin, toIntersect.yMin) ||\n\t\t\t\tthis.contains(toIntersect.xMax, toIntersect.yMax);\n\t\t}\n\n\t\tisEmpty(): boolean {\n\t\t\treturn this.xMax <= this.xMin || this.yMax <= this.yMin;\n\t\t}\n\n\t\tget width(): number {\n\t\t\treturn this.xMax - this.xMin;\n\t\t}\n\n\t\tset width(value: number) {\n\t\t\tthis.xMax = this.xMin + value;\n\t\t}\n\n\t\tget height(): number {\n\t\t\treturn this.yMax - this.yMin;\n\t\t}\n\n\t\tset height(value: number) {\n\t\t\tthis.yMax = this.yMin + value;\n\t\t}\n\n\t\tpublic getBaseWidth(angle: number): number {\n\t\t\tlet u = Math.abs(Math.cos(angle));\n\t\t\tlet v = Math.abs(Math.sin(angle));\n\t\t\treturn u * (this.xMax - this.xMin) + v * (this.yMax - this.yMin);\n\t\t}\n\n\t\tpublic getBaseHeight(angle: number): number {\n\t\t\tlet u = Math.abs(Math.cos(angle));\n\t\t\tlet v = Math.abs(Math.sin(angle));\n\t\t\treturn v * (this.xMax - this.xMin) + u * (this.yMax - this.yMin);\n\t\t}\n\n\t\tsetEmpty(): void {\n\t\t\tthis.xMin = this.yMin = this.xMax = this.yMax = 0;\n\t\t}\n\n\t\t/**\n\t\t * Set all fields to the sentinel value 0x8000000.\n\t\t *\n\t\t * This is what Flash uses to indicate uninitialized bounds. Important for bounds calculation\n\t\t * in `Graphics` instances, which start out with empty bounds but must not just extend them\n\t\t * from an 0,0 origin.\n\t\t */\n\t\tsetToSentinels(): void {\n\t\t\tthis.xMin = this.yMin = this.xMax = this.yMax = 0x8000000;\n\t\t}\n\n\t\tclone(): Bounds {\n\t\t\treturn new Bounds(this.xMin, this.yMin, this.xMax, this.yMax);\n\t\t}\n\n\t\ttoString(): string {\n\t\t\treturn \"{ \" +\n\t\t\t\t\"xMin: \" + this.xMin + \", \" +\n\t\t\t\t\"xMin: \" + this.yMin + \", \" +\n\t\t\t\t\"xMax: \" + this.xMax + \", \" +\n\t\t\t\t\"xMax: \" + this.yMax +\n\t\t\t\t\" }\";\n\t\t}\n\t}\n\n\t/**\n\t * Slower debug version of bounds, makes sure that all points have integer coordinates.\n\t */\n\texport class DebugBounds {\n\t\tprivate _xMin: number;\n\t\tprivate _yMin: number;\n\t\tprivate _xMax: number;\n\t\tprivate _yMax: number;\n\n\t\tconstructor(xMin: number, yMin: number, xMax: number, yMax: number) {\n\t\t\tDebug.assert(isInteger(xMin));\n\t\t\tDebug.assert(isInteger(yMin));\n\t\t\tDebug.assert(isInteger(xMax));\n\t\t\tDebug.assert(isInteger(yMax));\n\t\t\tthis._xMin = xMin | 0;\n\t\t\tthis._yMin = yMin | 0;\n\t\t\tthis._xMax = xMax | 0;\n\t\t\tthis._yMax = yMax | 0;\n\t\t\tthis.assertValid();\n\t\t}\n\n\t\tstatic FromUntyped(source: UntypedBounds): DebugBounds {\n\t\t\treturn new DebugBounds(source.xMin, source.yMin, source.xMax, source.yMax);\n\t\t}\n\n\t\tstatic FromRectangle(source: ASRectangle): DebugBounds {\n\t\t\treturn new DebugBounds(source.x * 20 | 0, source.y * 20 | 0, (source.x + source.width) * 20 | 0,\n\t\t\t\t(source.y + source.height) * 20 | 0);\n\t\t}\n\n\t\tsetElements(xMin: number, yMin: number, xMax: number, yMax: number): void {\n\t\t\tthis.xMin = xMin;\n\t\t\tthis.yMin = yMin;\n\t\t\tthis.xMax = xMax;\n\t\t\tthis.yMax = yMax;\n\t\t}\n\n\t\tcopyFrom(source: DebugBounds): void {\n\t\t\tthis.setElements(source.xMin, source.yMin, source.xMax, source.yMax);\n\t\t}\n\n\t\tcontains(x: number, y: number): boolean {\n\t\t\treturn x < this.xMin !== x < this.xMax &&\n\t\t\t\ty < this.yMin !== y < this.yMax;\n\t\t}\n\n\t\tunionInPlace(other: DebugBounds): void {\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.extendByPoint(other.xMin, other.yMin);\n\t\t\tthis.extendByPoint(other.xMax, other.yMax);\n\t\t}\n\n\t\textendByPoint(x: number, y: number): void {\n\t\t\tthis.extendByX(x);\n\t\t\tthis.extendByY(y);\n\t\t}\n\n\t\textendByX(x: number): void {\n\t\t\tif (this.xMin === 0x8000000) {\n\t\t\t\tthis.xMin = this.xMax = x;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.xMin = Math.min(this.xMin, x);\n\t\t\tthis.xMax = Math.max(this.xMax, x);\n\t\t}\n\n\t\textendByY(y: number): void {\n\t\t\tif (this.yMin === 0x8000000) {\n\t\t\t\tthis.yMin = this.yMax = y;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.yMin = Math.min(this.yMin, y);\n\t\t\tthis.yMax = Math.max(this.yMax, y);\n\t\t}\n\n\t\tpublic intersects(toIntersect: DebugBounds): boolean {\n\t\t\treturn this.contains(toIntersect._xMin, toIntersect._yMin) ||\n\t\t\t\tthis.contains(toIntersect._xMax, toIntersect._yMax);\n\t\t}\n\n\t\tisEmpty(): boolean {\n\t\t\treturn this._xMax <= this._xMin || this._yMax <= this._yMin;\n\t\t}\n\n\t\tset xMin(value: number) {\n\t\t\tDebug.assert(isInteger(value));\n\t\t\tthis._xMin = value;\n\t\t\tthis.assertValid();\n\t\t}\n\n\t\tget xMin(): number {\n\t\t\treturn this._xMin;\n\t\t}\n\n\t\tset yMin(value: number) {\n\t\t\tDebug.assert(isInteger(value));\n\t\t\tthis._yMin = value | 0;\n\t\t\tthis.assertValid();\n\t\t}\n\n\t\tget yMin(): number {\n\t\t\treturn this._yMin;\n\t\t}\n\n\t\tset xMax(value: number) {\n\t\t\tDebug.assert(isInteger(value));\n\t\t\tthis._xMax = value | 0;\n\t\t\tthis.assertValid();\n\t\t}\n\n\t\tget xMax(): number {\n\t\t\treturn this._xMax;\n\t\t}\n\n\t\tget width(): number {\n\t\t\treturn this._xMax - this._xMin;\n\t\t}\n\n\t\tset yMax(value: number) {\n\t\t\tDebug.assert(isInteger(value));\n\t\t\tthis._yMax = value | 0;\n\t\t\tthis.assertValid();\n\t\t}\n\n\t\tget yMax(): number {\n\t\t\treturn this._yMax;\n\t\t}\n\n\t\tget height(): number {\n\t\t\treturn this._yMax - this._yMin;\n\t\t}\n\n\t\tpublic getBaseWidth(angle: number): number {\n\t\t\tlet u = Math.abs(Math.cos(angle));\n\t\t\tlet v = Math.abs(Math.sin(angle));\n\t\t\treturn u * (this._xMax - this._xMin) + v * (this._yMax - this._yMin);\n\t\t}\n\n\t\tpublic getBaseHeight(angle: number): number {\n\t\t\tlet u = Math.abs(Math.cos(angle));\n\t\t\tlet v = Math.abs(Math.sin(angle));\n\t\t\treturn v * (this._xMax - this._xMin) + u * (this._yMax - this._yMin);\n\t\t}\n\n\t\tsetEmpty(): void {\n\t\t\tthis._xMin = this._yMin = this._xMax = this._yMax = 0;\n\t\t}\n\n\t\tclone(): DebugBounds {\n\t\t\treturn new DebugBounds(this.xMin, this.yMin, this.xMax, this.yMax);\n\t\t}\n\n\t\ttoString(): string {\n\t\t\treturn \"{ \" +\n\t\t\t\t\"xMin: \" + this._xMin + \", \" +\n\t\t\t\t\"yMin: \" + this._yMin + \", \" +\n\t\t\t\t\"xMax: \" + this._xMax + \", \" +\n\t\t\t\t\"yMax: \" + this._yMax +\n\t\t\t\t\" }\";\n\t\t}\n\n\t\tprivate assertValid(): void {\n//      release || assert(this._xMax >= this._xMin);\n//      release || assert(this._yMax >= this._yMin);\n\t\t}\n\t}\n\n\t/**\n\t * Override Bounds with a slower by safer version, don't do this in release mode.\n\t */\n\t\t// Shumway.Bounds = DebugBounds;\n\n\texport class Color {\n\t\tpublic r: number;\n\t\tpublic g: number;\n\t\tpublic b: number;\n\t\tpublic a: number;\n\n\t\tconstructor(r: number, g: number, b: number, a: number) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\tthis.a = a;\n\t\t}\n\n\t\tstatic FromARGB(argb: number) {\n\t\t\treturn new Color(\n\t\t\t\t(argb >> 16 & 0xFF) / 255,\n\t\t\t\t(argb >> 8 & 0xFF) / 255,\n\t\t\t\t(argb >> 0 & 0xFF) / 255,\n\t\t\t\t(argb >> 24 & 0xFF) / 255\n\t\t\t);\n\t\t}\n\n\t\tstatic FromRGBA(rgba: number) {\n\t\t\treturn Color.FromARGB(ColorUtilities.RGBAToARGB(rgba));\n\t\t}\n\n\t\tpublic toRGBA() {\n\t\t\treturn (this.r * 255) << 24 | (this.g * 255) << 16 | (this.b * 255) << 8 | (this.a * 255);\n\t\t}\n\n\t\tpublic toCSSStyle() {\n\t\t\treturn ColorUtilities.rgbaToCSSStyle(this.toRGBA());\n\t\t}\n\n\t\tset(other: Color) {\n\t\t\tthis.r = other.r;\n\t\t\tthis.g = other.g;\n\t\t\tthis.b = other.b;\n\t\t\tthis.a = other.a;\n\t\t}\n\n\t\tpublic static Red = new Color(1, 0, 0, 1);\n\t\tpublic static Green = new Color(0, 1, 0, 1);\n\t\tpublic static Blue = new Color(0, 0, 1, 1);\n\t\tpublic static None = new Color(0, 0, 0, 0);\n\t\tpublic static White = new Color(1, 1, 1, 1);\n\t\tpublic static Black = new Color(0, 0, 0, 1);\n\t\tprivate static colorCache: { [color: string]: Color } = {};\n\n\t\tpublic static randomColor(alpha: number = 1): Color {\n\t\t\treturn new Color(Math.random(), Math.random(), Math.random(), alpha);\n\t\t}\n\n\t\tpublic static parseColor(color: string) {\n\t\t\tif (!Color.colorCache) {\n\t\t\t\tColor.colorCache = Object.create(null);\n\t\t\t}\n\t\t\tif (Color.colorCache[color]) {\n\t\t\t\treturn Color.colorCache[color];\n\t\t\t}\n\t\t\t// TODO: Obviously slow, but it will do for now.\n\t\t\tlet span = document.createElement('span');\n\t\t\tdocument.body.appendChild(span);\n\t\t\tspan.style.backgroundColor = color;\n\t\t\tlet rgb = getComputedStyle(span).backgroundColor;\n\t\t\tdocument.body.removeChild(span);\n\t\t\tlet m = /^rgb\\((\\d+), (\\d+), (\\d+)\\)$/.exec(rgb);\n\t\t\tif (!m) m = /^rgba\\((\\d+), (\\d+), (\\d+), ([\\d.]+)\\)$/.exec(rgb);\n\t\t\tlet result = new Color(0, 0, 0, 0);\n\t\t\tresult.r = parseFloat(m[1]) / 255;\n\t\t\tresult.g = parseFloat(m[2]) / 255;\n\t\t\tresult.b = parseFloat(m[3]) / 255;\n\t\t\tresult.a = m[4] ? parseFloat(m[4]) / 255 : 1;\n\t\t\treturn Color.colorCache[color] = result;\n\t\t}\n\t}\n\n\texport module ColorUtilities {\n\t\texport function RGBAToARGB(rgba: number): number {\n\t\t\treturn ((rgba >> 8) & 0x00ffffff) | ((rgba & 0xff) << 24);\n\t\t}\n\n\t\texport function ARGBToRGBA(argb: number): number {\n\t\t\treturn argb << 8 | ((argb >> 24) & 0xff);\n\t\t}\n\n\t\t/**\n\t\t * Cache frequently used rgba -> css style conversions.\n\t\t */\n\t\tlet rgbaToCSSStyleCache = new Cache(1024);\n\n\t\texport function rgbaToCSSStyle(rgba: number): string {\n\t\t\tlet result = rgbaToCSSStyleCache.get(rgba);\n\t\t\tif (typeof result === \"string\") {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tresult = Shumway.StringUtilities.concat9('rgba(', rgba >> 24 & 0xff, ',', rgba >> 16 & 0xff, ',', rgba >> 8 & 0xff, ',', (rgba & 0xff) / 0xff, ')');\n\t\t\trgbaToCSSStyleCache.set(rgba, result);\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Cache frequently used css -> rgba styles conversions.\n\t\t */\n\t\tlet cssStyleToRGBACache = new Cache(1024);\n\n\t\texport function cssStyleToRGBA(style: string) {\n\t\t\tlet result = cssStyleToRGBACache.get(style);\n\t\t\tif (typeof result === \"number\") {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tresult = 0xff0000ff; // Red\n\t\t\tif (style[0] === \"#\") {\n\t\t\t\tif (style.length === 7) {\n\t\t\t\t\tresult = (parseInt(style.substring(1), 16) << 8) | 0xff;\n\t\t\t\t}\n\t\t\t} else if (style[0] === \"r\") {\n\t\t\t\t// We don't parse all types of rgba(....) color styles. We only handle the\n\t\t\t\t// ones we generate ourselves.\n\t\t\t\tlet values = style.substring(5, style.length - 1).split(\",\");\n\t\t\t\tlet r = parseInt(values[0]);\n\t\t\t\tlet g = parseInt(values[1]);\n\t\t\t\tlet b = parseInt(values[2]);\n\t\t\t\tlet a = parseFloat(values[3]);\n\t\t\t\tresult = (r & 0xff) << 24 |\n\t\t\t\t\t(g & 0xff) << 16 |\n\t\t\t\t\t(b & 0xff) << 8 |\n\t\t\t\t\t((a * 255) & 0xff);\n\t\t\t}\n\t\t\tcssStyleToRGBACache.set(style, result);\n\t\t\treturn result;\n\t\t}\n\n\t\texport function hexToRGB(color: string): number {\n\t\t\treturn parseInt(color.slice(1), 16);\n\t\t}\n\n\t\texport function rgbToHex(color: number): string {\n\t\t\treturn '#' + ('000000' + (color >>> 0).toString(16)).slice(-6);\n\t\t}\n\n\t\texport function isValidHexColor(value: any): boolean {\n\t\t\treturn /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value);\n\t\t}\n\n\t\texport function clampByte(value: number) {\n\t\t\treturn Math.max(0, Math.min(255, value));\n\t\t}\n\n\t\t/**\n\t\t * Unpremultiplies the given |pARGB| color value.\n\t\t */\n\t\texport function unpremultiplyARGB(pARGB: number) {\n\t\t\tlet b = (pARGB >> 0) & 0xff;\n\t\t\tlet g = (pARGB >> 8) & 0xff;\n\t\t\tlet r = (pARGB >> 16) & 0xff;\n\t\t\tlet a = (pARGB >> 24) & 0xff;\n\t\t\tr = Math.imul(255, r) / a & 0xff;\n\t\t\tg = Math.imul(255, g) / a & 0xff;\n\t\t\tb = Math.imul(255, b) / a & 0xff;\n\t\t\treturn a << 24 | r << 16 | g << 8 | b;\n\t\t}\n\n\t\t/**\n\t\t * Premultiplies the given |pARGB| color value.\n\t\t */\n\t\texport function premultiplyARGB(uARGB: number) {\n\t\t\tlet b = (uARGB >> 0) & 0xff;\n\t\t\tlet g = (uARGB >> 8) & 0xff;\n\t\t\tlet r = (uARGB >> 16) & 0xff;\n\t\t\tlet a = (uARGB >> 24) & 0xff;\n\t\t\tr = ((Math.imul(r, a) + 127) / 255) | 0;\n\t\t\tg = ((Math.imul(g, a) + 127) / 255) | 0;\n\t\t\tb = ((Math.imul(b, a) + 127) / 255) | 0;\n\t\t\treturn a << 24 | r << 16 | g << 8 | b;\n\t\t}\n\n\t\tlet premultiplyTable: Uint8Array;\n\n\t\t/**\n\t\t * All possible alpha values and colors 256 * 256 = 65536 entries. Experiments\n\t\t * indicate that doing unpremultiplication this way is roughly 5x faster.\n\t\t *\n\t\t * To lookup a color |c| in the table at a given alpha value |a| use:\n\t\t * |(a << 8) + c| to compute the index. This layout order was chosen to make\n\t\t * table lookups cache friendly, it actually makes a difference.\n\t\t *\n\t\t * TODO: Figure out if memory / speed tradeoff is worth it.\n\t\t */\n\t\tlet unpremultiplyTable: Uint8Array;\n\n\t\t/**\n\t\t * Make sure to call this before using the |unpremultiplyARGBUsingTableLookup| or\n\t\t * |premultiplyARGBUsingTableLookup| functions. We want to execute this lazily so\n\t\t * we don't incur any startup overhead.\n\t\t */\n\t\texport function ensureUnpremultiplyTable() {\n\t\t\tif (!unpremultiplyTable) {\n\t\t\t\tunpremultiplyTable = new Uint8Array(256 * 256);\n\t\t\t\tfor (let c = 0; c < 256; c++) {\n\t\t\t\t\tfor (let a = 0; a < 256; a++) {\n\t\t\t\t\t\tunpremultiplyTable[(a << 8) + c] = Math.imul(255, c) / a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texport function getUnpremultiplyTable(): Uint8Array {\n\t\t\tensureUnpremultiplyTable();\n\t\t\treturn unpremultiplyTable;\n\t\t}\n\n\t\texport function tableLookupUnpremultiplyARGB(pARGB: number): number {\n\t\t\tpARGB = pARGB | 0;\n\t\t\tlet a = (pARGB >> 24) & 0xff;\n\t\t\tif (a === 0) {\n\t\t\t\treturn 0;\n\t\t\t} else if (a === 0xff) {\n\t\t\t\treturn pARGB;\n\t\t\t}\n\t\t\tlet b = (pARGB >> 0) & 0xff;\n\t\t\tlet g = (pARGB >> 8) & 0xff;\n\t\t\tlet r = (pARGB >> 16) & 0xff;\n\t\t\tlet o = a << 8;\n\t\t\tlet T = unpremultiplyTable;\n\t\t\tr = T[o + r];\n\t\t\tg = T[o + g];\n\t\t\tb = T[o + b];\n\t\t\treturn a << 24 | r << 16 | g << 8 | b;\n\t\t}\n\n\t\t/**\n\t\t * The blending equation for unpremultiplied alpha is:\n\t\t *\n\t\t *   (src.rgb * src.a) + (dst.rgb * (1 - src.a))\n\t\t *\n\t\t * For premultiplied alpha src.rgb and dst.rgb are already\n\t\t * premultiplied by alpha, so the equation becomes:\n\t\t *\n\t\t *   src.rgb + (dst.rgb * (1 - src.a))\n\t\t *\n\t\t * TODO: Not sure what to do about the dst.rgb which is\n\t\t * premultiplied by its alpah, but this appears to work.\n\t\t *\n\t\t * We use the \"double blend trick\" (http://stereopsis.com/doubleblend.html) to\n\t\t * compute GA and BR without unpacking them.\n\t\t */\n\t\texport function blendPremultipliedBGRA(tpBGRA: number, spBGRA: number) {\n\t\t\tlet sA = spBGRA & 0xff;\n\t\t\tlet sGA = spBGRA & 0x00ff00ff;\n\t\t\tlet sBR = spBGRA >> 8 & 0x00ff00ff;\n\t\t\tlet tGA = tpBGRA & 0x00ff00ff;\n\t\t\tlet tBR = tpBGRA >> 8 & 0x00ff00ff;\n\t\t\tlet A = 256 - sA;\n\t\t\ttGA = Math.imul(tGA, A) >> 8;\n\t\t\ttBR = Math.imul(tBR, A) >> 8;\n\t\t\treturn ((sBR + tBR & 0x00ff00ff) << 8) | (sGA + tGA & 0x00ff00ff);\n\t\t}\n\n\t\timport swap32 = IntegerUtilities.swap32;\n\n\t\texport function convertImage(sourceFormat: ImageType, targetFormat: ImageType, source: Int32Array, target: Int32Array) {\n\t\t\tif (source !== target) {\n\t\t\t\trelease || Debug.assert(source.buffer !== target.buffer, \"Can't handle overlapping views.\");\n\t\t\t}\n\t\t\tlet length = source.length;\n\t\t\tif (sourceFormat === targetFormat) {\n\t\t\t\tif (source === target) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttarget[i] = source[i];\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// enterTimeline(\"convertImage\", ImageType[sourceFormat] + \" to \" + ImageType[targetFormat] + \" (\" + memorySizeToString(source.length));\n\t\t\tif (sourceFormat === ImageType.PremultipliedAlphaARGB &&\n\t\t\t\ttargetFormat === ImageType.StraightAlphaRGBA) {\n\t\t\t\tShumway.ColorUtilities.ensureUnpremultiplyTable();\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet pBGRA = source[i];\n\t\t\t\t\tlet a = pBGRA & 0xff;\n\t\t\t\t\tif (a === 0) {\n\t\t\t\t\t\ttarget[i] = 0;\n\t\t\t\t\t} else if (a === 0xff) {\n\t\t\t\t\t\ttarget[i] = 0xff000000 | ((pBGRA >> 8) & 0x00ffffff);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet b = (pBGRA >> 24) & 0xff;\n\t\t\t\t\t\tlet g = (pBGRA >> 16) & 0xff;\n\t\t\t\t\t\tlet r = (pBGRA >> 8) & 0xff;\n\t\t\t\t\t\tlet o = a << 8;\n\t\t\t\t\t\tlet T = unpremultiplyTable;\n\t\t\t\t\t\tr = T[o + r];\n\t\t\t\t\t\tg = T[o + g];\n\t\t\t\t\t\tb = T[o + b];\n\t\t\t\t\t\ttarget[i] = a << 24 | b << 16 | g << 8 | r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (sourceFormat === ImageType.StraightAlphaARGB &&\n\t\t\t\ttargetFormat === ImageType.StraightAlphaRGBA) {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttarget[i] = swap32(source[i]);\n\t\t\t\t}\n\t\t\t} else if (sourceFormat === ImageType.StraightAlphaRGBA &&\n\t\t\t\ttargetFormat === ImageType.PremultipliedAlphaARGB) {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet uABGR = source[i];\n\t\t\t\t\tlet uARGB = (uABGR & 0xFF00FF00) | // A_G_\n\t\t\t\t\t\t(uABGR >> 16) & 0xff | // A_GB\n\t\t\t\t\t\t(uABGR & 0xff) << 16;   // ARGR\n\t\t\t\t\ttarget[i] = swap32(premultiplyARGB(uARGB));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trelease || Debug.somewhatImplemented(\"Image Format Conversion: \" + ImageType[sourceFormat] + \" -> \" + ImageType[targetFormat]);\n\t\t\t\t// Copy the buffer over for now, we should at least get some image output.\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttarget[i] = source[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// leaveTimeline(\"convertImage\");\n\t\t}\n\t}\n\n\t/**\n\t * Simple pool allocator for ArrayBuffers. This reduces memory usage in data structures\n\t * that resize buffers.\n\t */\n\texport class ArrayBufferPool {\n\t\tprivate _list: ArrayBuffer [];\n\t\tprivate _maxSize: number;\n\t\tprivate static _enabled = true;\n\n\t\t/**\n\t\t * Creates a pool that manages a pool of a |maxSize| number of array buffers.\n\t\t */\n\t\tconstructor(maxSize: number = 32) {\n\t\t\tthis._list = [];\n\t\t\tthis._maxSize = maxSize;\n\t\t}\n\n\t\t/**\n\t\t * Creates or reuses an existing array buffer that is at least the\n\t\t * specified |length|.\n\t\t */\n\t\tpublic acquire(length: number): ArrayBuffer {\n\t\t\tif (ArrayBufferPool._enabled) {\n\t\t\t\tlet list = this._list;\n\t\t\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\t\t\tlet buffer = list[i];\n\t\t\t\t\tif (buffer.byteLength >= length) {\n\t\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t\t\treturn buffer;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new ArrayBuffer(length);\n\t\t}\n\n\t\t/**\n\t\t * Releases an array buffer that is no longer needed back to the pool.\n\t\t */\n\t\tpublic release(buffer: ArrayBuffer) {\n\t\t\tif (ArrayBufferPool._enabled) {\n\t\t\t\tlet list = this._list;\n\t\t\t\trelease || Debug.assert(ArrayUtilities.indexOf(list, buffer) < 0);\n\t\t\t\tif (list.length === this._maxSize) {\n\t\t\t\t\tlist.shift();\n\t\t\t\t}\n\t\t\t\tlist.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Resizes a Uint8Array to have the given length.\n\t\t */\n\t\tpublic ensureUint8ArrayLength(array: Uint8Array, length: number): Uint8Array {\n\t\t\tif (array.length >= length) {\n\t\t\t\treturn array;\n\t\t\t}\n\t\t\tlet newLength = Math.max(array.length + length, ((array.length * 3) >> 1) + 1);\n\t\t\tlet newArray = new Uint8Array(this.acquire(newLength), 0, newLength);\n\t\t\tnewArray.set(array);\n\t\t\tthis.release(array.buffer);\n\t\t\treturn newArray;\n\t\t}\n\n\t\t/**\n\t\t * Resizes a Float64Array to have the given length.\n\t\t */\n\t\tpublic ensureFloat64ArrayLength(array: Float64Array, length: number): Float64Array {\n\t\t\tif (array.length >= length) {\n\t\t\t\treturn array;\n\t\t\t}\n\t\t\tlet newLength = Math.max(array.length + length, ((array.length * 3) >> 1) + 1);\n\t\t\tlet newArray = new Float64Array(this.acquire(newLength * Float64Array.BYTES_PER_ELEMENT), 0, newLength);\n\t\t\tnewArray.set(array);\n\t\t\tthis.release(array.buffer);\n\t\t\treturn newArray;\n\t\t}\n\t}\n\n\texport module Telemetry {\n\t\texport const enum Feature {\n\t\t\tEXTERNAL_INTERFACE_FEATURE = 1,\n\t\t\tCLIPBOARD_FEATURE = 2,\n\t\t\tSHAREDOBJECT_FEATURE = 3,\n\t\t\tVIDEO_FEATURE = 4,\n\t\t\tSOUND_FEATURE = 5,\n\t\t\tNETCONNECTION_FEATURE = 6\n\t\t}\n\n\t\texport const enum ErrorTypes {\n\t\t\tAVM1_ERROR = 1,\n\t\t\tAVM2_ERROR = 2\n\t\t}\n\n\t\texport const enum LoadResource {\n\t\t\tLoadSource = 0,\n\t\t\tLoadWhitelistAllowed = 1,\n\t\t\tLoadWhitelistDenied = 2,\n\t\t\tStreamAllowed = 3,\n\t\t\tStreamDenied = 4,\n\t\t\tStreamCrossdomain = 5\n\t\t}\n\n\t\texport let instance: ITelemetryService;\n\t}\n\n\texport interface ITelemetryService {\n\t\treportTelemetry(data: any): void;\n\t}\n\n\texport interface FileLoadingRequest {\n\t\turl: string;\n\t\tdata: any;\n\t}\n\n\texport interface FileLoadingProgress {\n\t\tbytesLoaded: number;\n\t\tbytesTotal: number;\n\t}\n\n\texport interface FileLoadingSession {\n\t\tonopen?: () => void;\n\t\tonclose?: () => void;\n\t\tonprogress?: (data: any, progressStatus: FileLoadingProgress) => void;\n\t\tonhttpstatus?: (location: string, httpStatus: number, httpHeaders: any) => void;\n\t\tonerror?: (e: any) => void;\n\n\t\topen(request: FileLoadingRequest): void;\n\n\t\tclose: () => void;\n\t}\n\n\texport interface IFileLoadingService {\n\t\tcreateSession(): FileLoadingSession;\n\n\t\tresolveUrl(url: string): string;\n\n\t\tnavigateTo(url: string, target: string): void;\n\t}\n\n\texport module FileLoadingService {\n\t\texport let instance: IFileLoadingService;\n\t}\n\n\texport const enum SystemResourceId {\n\t\tBuiltinAbc = 0,\n\t\tPlayerglobalAbcs = 1,\n\t\tPlayerglobalManifest = 2,\n\t\tShellAbc = 3\n\t}\n\n\texport interface ISystemResourcesLoadingService {\n\t\tload(id: SystemResourceId): Promise<any>;\n\t}\n\n\texport module SystemResourcesLoadingService {\n\t\texport let instance: ISystemResourcesLoadingService;\n\t}\n\n\texport function registerCSSFont(id: number, data: Uint8Array, forceFontInit: boolean) {\n\t\tif (!inBrowser) {\n\t\t\tDebug.warning('Cannot register CSS font outside the browser');\n\t\t\treturn;\n\t\t}\n\t\tlet head = document.head;\n\t\thead.insertBefore(document.createElement('style'), head.firstChild);\n\t\tlet style = <CSSStyleSheet>document.styleSheets[0];\n\t\tlet rule = '@font-face{font-family:swffont' + id + ';src:url(data:font/opentype;base64,' +\n\t\t\tShumway.StringUtilities.base64EncodeBytes(data) + ')' + '}';\n\t\tstyle.insertRule(rule, style.cssRules.length);\n\t\t// In at least Chrome, the browser only decodes a font once it's used in the page at all.\n\t\t// Because it still does so asynchronously, we create a with some text using the font, take\n\t\t// some measurement from it (which will turn out wrong because the font isn't yet available),\n\t\t// and then remove the node again. Then, magic happens. After a bit of time for said magic to\n\t\t// take hold, the font is available for actual use on canvas.\n\t\t// TODO: remove the need for magic by implementing this in terms of the font loading API.\n\t\tif (forceFontInit) {\n\t\t\tlet node = document.createElement('div');\n\t\t\tnode.style.fontFamily = 'swffont' + id;\n\t\t\tnode.innerHTML = 'hello';\n\t\t\tdocument.body.appendChild(node);\n\t\t\tlet dummyHeight = node.clientHeight;\n\t\t\tdocument.body.removeChild(node);\n\t\t}\n\t}\n\n\n\texport interface IExternalInterfaceService {\n\t\tenabled: boolean;\n\n\t\tinitJS(callback: (functionName: string, args: any[]) => any): void;\n\n\t\tregisterCallback(functionName: string): void;\n\n\t\tunregisterCallback(functionName: string): void;\n\n\t\teval(expression: any): any;\n\n\t\tcall(request: any): any;\n\n\t\tgetId(): string;\n\t}\n\n\texport module ExternalInterfaceService {\n\t\texport let instance: IExternalInterfaceService = {\n\t\t\tenabled: false,\n\t\t\tinitJS(callback: (functionName: string, args: any[]) => any) {\n\t\t\t\t// ...\n\t\t\t},\n\t\t\tregisterCallback(functionName: string) {\n\t\t\t\t// ...\n\t\t\t},\n\t\t\tunregisterCallback(functionName: string) {\n\t\t\t\t// ...\n\t\t\t},\n\t\t\teval(expression: string): any {\n\t\t\t\t// ...\n\t\t\t},\n\t\t\tcall(request: string): any {\n\t\t\t\t// ...\n\t\t\t},\n\t\t\tgetId(): string {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\t}\n\n\texport const enum LocalConnectionConnectResult {\n\t\tInvalidCallback = -3,\n\t\tAlreadyTaken = -2,\n\t\tInvalidName = -1,\n\t\tSuccess = 0\n\t}\n\n\texport const enum LocalConnectionCloseResult {\n\t\tNotConnected = -1,\n\t\tSuccess = 0\n\t}\n\n\texport interface ILocalConnectionReceiver {\n\t\thandleMessage(methodName: string, argsBuffer: ArrayBuffer): void;\n\t}\n\n\texport interface ILocalConnectionSender {\n\t\tdispatchEvent(event: any): void;\n\n\t\thasEventListener(type: string): boolean;\n\n\t\tsec: any;\n\t}\n\n\texport interface ILocalConnectionService {\n\t\tcreateConnection(connectionName: string,\n\t\t                 receiver: ILocalConnectionReceiver): LocalConnectionConnectResult;\n\n\t\tcloseConnection(connectionName: string,\n\t\t                receiver: ILocalConnectionReceiver): LocalConnectionCloseResult;\n\n\t\tsend(connectionName: string, methodName: string, args: ArrayBuffer,\n\t\t     sender: ILocalConnectionSender, senderDomain: string, senderIsSecure: boolean): void;\n\n\t\tallowDomains(connectionName: string, receiver: ILocalConnectionReceiver, domains: string[],\n\t\t             secure: boolean): void;\n\t}\n\n\texport module LocalConnectionService {\n\t\texport let instance: ILocalConnectionService;\n\t}\n\n\texport interface IClipboardService {\n\t\tsetClipboard(data: string): void;\n\t}\n\n\texport module ClipboardService {\n\t\texport let instance: IClipboardService = {\n\t\t\tsetClipboard(data: string) {\n\t\t\t\tDebug.notImplemented('setClipboard');\n\t\t\t}\n\t\t};\n\t}\n\n\texport class Callback {\n\t\tprivate _queues: any;\n\n\t\tconstructor() {\n\t\t\tthis._queues = {};\n\t\t}\n\n\t\tpublic register(type: any, callback: any) {\n\t\t\tDebug.assert(type);\n\t\t\tDebug.assert(callback);\n\t\t\tlet queue = this._queues[type];\n\t\t\tif (queue) {\n\t\t\t\tif (queue.indexOf(callback) > -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tqueue = this._queues[type] = [];\n\t\t\t}\n\t\t\tqueue.push(callback);\n\t\t}\n\n\t\tpublic unregister(type: string, callback: any) {\n\t\t\tDebug.assert(type);\n\t\t\tDebug.assert(callback);\n\t\t\tlet queue = this._queues[type];\n\t\t\tif (!queue) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet i = queue.indexOf(callback);\n\t\t\tif (i !== -1) {\n\t\t\t\tqueue.splice(i, 1);\n\t\t\t}\n\t\t\tif (queue.length === 0) {\n\t\t\t\tthis._queues[type] = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic notify(type: string, args_: any) {\n\t\t\tlet queue = this._queues[type];\n\t\t\tif (!queue) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tqueue = queue.slice();\n\t\t\tlet args = Array.prototype.slice.call(arguments, 0);\n\t\t\tfor (let i = 0; i < queue.length; i++) {\n\t\t\t\tlet callback = queue[i];\n\t\t\t\tcallback.apply(null, args);\n\t\t\t}\n\t\t}\n\n\t\tpublic notify1(type: string, value: any) {\n\t\t\tlet queue = this._queues[type];\n\t\t\tif (!queue) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tqueue = queue.slice();\n\t\t\tfor (let i = 0; i < queue.length; i++) {\n\t\t\t\tlet callback = queue[i];\n\t\t\t\tcallback(type, value);\n\t\t\t}\n\t\t}\n\t}\n\n\texport enum ImageType {\n\t\tNone,\n\n\t\t/**\n\t\t * Premultiplied ARGB (byte-order).\n\t\t */\n\t\tPremultipliedAlphaARGB,\n\n\t\t/**\n\t\t * Unpremultiplied ARGB (byte-order).\n\t\t */\n\t\tStraightAlphaARGB,\n\n\t\t/**\n\t\t * Unpremultiplied RGBA (byte-order), this is what putImageData expects.\n\t\t */\n\t\tStraightAlphaRGBA,\n\n\t\tJPEG,\n\t\tPNG,\n\t\tGIF\n\t}\n\n\texport function getMIMETypeForImageType(type: ImageType): string {\n\t\tswitch (type) {\n\t\t\tcase ImageType.JPEG:\n\t\t\t\treturn \"image/jpeg\";\n\t\t\tcase ImageType.PNG:\n\t\t\t\treturn \"image/png\";\n\t\t\tcase ImageType.GIF:\n\t\t\t\treturn \"image/gif\";\n\t\t\tdefault:\n\t\t\t\treturn \"text/plain\";\n\t\t}\n\t}\n\n\texport module UI {\n\n\t\t/*\n\t\t * Converts a |MouseCursor| number to a CSS |cursor| property value.\n\t\t */\n\t\texport function toCSSCursor(mouseCursor: number) {\n\t\t\tswitch (mouseCursor) {\n\t\t\t\tcase 0: // MouseCursor.AUTO\n\t\t\t\t\treturn 'auto';\n\t\t\t\tcase 2: // MouseCursor.BUTTON\n\t\t\t\t\treturn 'pointer';\n\t\t\t\tcase 3: // MouseCursor.HAND\n\t\t\t\t\treturn 'grab';\n\t\t\t\tcase 4: // MouseCursor.IBEAM\n\t\t\t\t\treturn 'text';\n\t\t\t\tcase 1: // MouseCursor.ARROW\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'default';\n\t\t\t}\n\t\t}\n\n\t}\n\n\texport class PromiseWrapper<T> {\n\t\tpublic promise: Promise<T>;\n\t\tpublic resolve: (result: T) => void;\n\t\tpublic reject: (reason: any) => void;\n\n\t\tthen(onFulfilled: any, onRejected: any) {\n\t\t\treturn this.promise.then(onFulfilled, onRejected);\n\t\t}\n\n\t\tconstructor() {\n\t\t\tthis.promise = new Promise<T>(function (resolve: any, reject: any) {\n\t\t\t\tthis.resolve = resolve;\n\t\t\t\tthis.reject = reject;\n\t\t\t}.bind(this));\n\t\t}\n\t}\n}\n\n\ndeclare let exports: any;\nif (typeof exports !== \"undefined\") {\n\texports[\"Shumway\"] = Shumway;\n}\n\n\n/**\n * Extend builtin prototypes.\n *\n * TODO: Go through the code and remove all references to these.\n */\n(function () {\n\tfunction extendBuiltin(prototype: any, property: any, value: any) {\n\t\tif (!prototype[property]) {\n\t\t\tObject.defineProperty(prototype, property,\n\t\t\t\t{\n\t\t\t\t\tvalue: value,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false\n\t\t\t\t});\n\t\t}\n\t}\n\n\tfunction removeColors(s: string) {\n\t\treturn s.replace(/\\033\\[[0-9]*m/g, \"\");\n\t}\n\n\textendBuiltin(String.prototype, \"padRight\", function (c: string, n: number) {\n\t\tlet str = this;\n\t\tlet length = removeColors(str).length;\n\t\tif (!c || length >= n) {\n\t\t\treturn str;\n\t\t}\n\t\tlet max = (n - length) / c.length;\n\t\tfor (let i = 0; i < max; i++) {\n\t\t\tstr += c;\n\t\t}\n\t\treturn str;\n\t});\n\n\textendBuiltin(String.prototype, \"padLeft\", function (c: string, n: number) {\n\t\tlet str = this;\n\t\tlet length = str.length;\n\t\tif (!c || length >= n) {\n\t\t\treturn str;\n\t\t}\n\t\tlet max = (n - length) / c.length;\n\t\tfor (let i = 0; i < max; i++) {\n\t\t\tstr = c + str;\n\t\t}\n\t\treturn str;\n\t});\n\n\textendBuiltin(String.prototype, \"trim\", function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, \"\");\n\t});\n\n\textendBuiltin(String.prototype, \"endsWith\", function (str: string) {\n\t\treturn this.indexOf(str, this.length - str.length) !== -1;\n\t});\n\n\textendBuiltin(Array.prototype, \"replace\", function (x: any, y: any) {\n\t\tif (x === y) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet count = 0;\n\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\tif (this[i] === x) {\n\t\t\t\tthis[i] = y;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t});\n\n})();\n","/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Option and Argument Management\n *\n * Options are configuration settings sprinkled throughout the code. They can be grouped into sets of\n * options called |OptionSets| which can form a hierarchy of options. For instance:\n *\n * let set = new OptionSet();\n * let opt = set.register(new Option(\"v\", \"verbose\", \"boolean\", false, \"Enables verbose logging.\"));\n *\n * creates an option set with one option in it. The option can be changed directly using |opt.value = true| or\n * automatically using the |ArgumentParser|:\n *\n * let parser = new ArgumentParser();\n * parser.addBoundOptionSet(set);\n * parser.parse([\"-v\"]);\n *\n * The |ArgumentParser| can also be used directly:\n *\n * let parser = new ArgumentParser();\n * argumentParser.addArgument(\"h\", \"help\", \"boolean\", {parse: function (x) {\n *   printUsage();\n * }});\n */\n\n///<reference path='references.ts' />\nmodule Shumway.Options {\n\timport isObject = Shumway.isObject;\n\timport isNullOrUndefined = Shumway.isNullOrUndefined;\n\timport assert = Shumway.Debug.assert;\n\n\texport class Argument {\n\t\tshortName: string;\n\t\tlongName: string;\n\t\ttype: any;\n\t\toptions: any;\n\t\tpositional: boolean;\n\t\tparseFn: any;\n\t\tvalue: any;\n\n\t\tconstructor(shortName: string, longName: string, type: any, options: any) {\n\t\t\tthis.shortName = shortName;\n\t\t\tthis.longName = longName;\n\t\t\tthis.type = type;\n\t\t\toptions = options || {};\n\t\t\tthis.positional = options.positional;\n\t\t\tthis.parseFn = options.parse;\n\t\t\tthis.value = options.defaultValue;\n\t\t}\n\n\t\tpublic parse(value: any) {\n\t\t\tif (this.type === \"boolean\") {\n\t\t\t\trelease || assert(typeof value === \"boolean\");\n\t\t\t\tthis.value = value;\n\t\t\t} else if (this.type === \"number\") {\n\t\t\t\trelease || assert(!isNaN(value), value + \" is not a number\");\n\t\t\t\tthis.value = parseInt(value, 10);\n\t\t\t} else {\n\t\t\t\tthis.value = value;\n\t\t\t}\n\t\t\tif (this.parseFn) {\n\t\t\t\tthis.parseFn(this.value);\n\t\t\t}\n\t\t}\n\t}\n\n\texport class ArgumentParser {\n\t\targs: any [];\n\n\t\tconstructor() {\n\t\t\tthis.args = [];\n\t\t}\n\n\t\tpublic addArgument(shortName: string, longName: string, type: any, options: any) {\n\t\t\tlet argument = new Argument(shortName, longName, type, options);\n\t\t\tthis.args.push(argument);\n\t\t\treturn argument;\n\t\t}\n\n\t\tpublic addBoundOption(option: any) {\n\t\t\tlet options = {\n\t\t\t\tparse: function (x: any) {\n\t\t\t\t\toption.value = x;\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.args.push(new Argument(option.shortName, option.longName, option.type, options));\n\t\t}\n\n\t\tpublic addBoundOptionSet(optionSet: any) {\n\t\t\tlet self = this;\n\t\t\toptionSet.options.forEach(function (x: any) {\n\t\t\t\tif (OptionSet.isOptionSet(x)) {\n\t\t\t\t\tself.addBoundOptionSet(x);\n\t\t\t\t} else {\n\t\t\t\t\trelease || assert(x);\n\t\t\t\t\tself.addBoundOption(x);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tpublic getUsage() {\n\t\t\tlet str = \"\";\n\t\t\tthis.args.forEach(function (x) {\n\t\t\t\tif (!x.positional) {\n\t\t\t\t\tstr += \"[-\" + x.shortName + \"|--\" + x.longName + (x.type === \"boolean\" ? \"\" : \" \" + x.type[0].toUpperCase()) + \"]\";\n\t\t\t\t} else {\n\t\t\t\t\tstr += x.longName;\n\t\t\t\t}\n\t\t\t\tstr += \" \";\n\t\t\t});\n\t\t\treturn str;\n\t\t}\n\n\t\tpublic parse(args: any) {\n\t\t\tlet nonPositionalArgumentMap: MapObject<any> = {};\n\t\t\tlet positionalArgumentList: Array<any> = [];\n\t\t\tthis.args.forEach(function (x: any) {\n\t\t\t\tif (x.positional) {\n\t\t\t\t\tpositionalArgumentList.push(x);\n\t\t\t\t} else {\n\t\t\t\t\tnonPositionalArgumentMap[\"-\" + x.shortName] = x;\n\t\t\t\t\tnonPositionalArgumentMap[\"--\" + x.longName] = x;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet leftoverArguments = [];\n\n\t\t\twhile (args.length) {\n\t\t\t\tlet argString = args.shift();\n\t\t\t\tlet argument = null, value = argString;\n\t\t\t\tif (argString == '--') {\n\t\t\t\t\tleftoverArguments = leftoverArguments.concat(args);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (argString.slice(0, 1) == '-' || argString.slice(0, 2) == '--') {\n\t\t\t\t\targument = nonPositionalArgumentMap[argString];\n\t\t\t\t\t// release || assert(argument, \"Argument \" + argString + \" is unknown.\");\n\t\t\t\t\tif (!argument) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (argument.type !== \"boolean\") {\n\t\t\t\t\t\tvalue = args.shift();\n\t\t\t\t\t\trelease || assert(value !== \"-\" && value !== \"--\", \"Argument \" + argString + \" must have a value.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (args.length && [\"yes\", \"no\", \"true\", \"false\", \"t\", \"f\"].indexOf(args[0]) >= 0) {\n\t\t\t\t\t\t\tvalue = [\"yes\", \"true\", \"t\"].indexOf(args.shift()) >= 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (positionalArgumentList.length) {\n\t\t\t\t\targument = positionalArgumentList.shift();\n\t\t\t\t} else {\n\t\t\t\t\tleftoverArguments.push(value);\n\t\t\t\t}\n\t\t\t\tif (argument) {\n\t\t\t\t\targument.parse(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\trelease || assert(positionalArgumentList.length === 0, \"Missing positional arguments.\");\n\t\t\treturn leftoverArguments;\n\t\t}\n\t}\n\n\texport class OptionSet {\n\t\tname: string;\n\t\tsettings: any;\n\t\toptions: any;\n\t\topen: boolean = false;\n\n\t\tpublic static isOptionSet(obj: any): boolean {\n\t\t\t// We will be getting options from different iframe, so this function will\n\t\t\t// check if the obj somewhat like OptionSet.\n\t\t\tif (obj instanceof OptionSet) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (typeof obj !== 'object' || obj === null ||\n\t\t\t\tobj instanceof Option) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn ('options' in obj) && ('name' in obj) && ('settings' in obj);\n\t\t}\n\n\t\tconstructor(name: string, settings: any = null) {\n\t\t\tthis.name = name;\n\t\t\tthis.settings = settings || {};\n\t\t\tthis.options = [];\n\t\t}\n\n\t\tpublic register(option: any) {\n\t\t\tif (OptionSet.isOptionSet(option)) {\n\t\t\t\t// check for duplicate option sets (bail if found)\n\t\t\t\tfor (let i = 0; i < this.options.length; i++) {\n\t\t\t\t\tlet optionSet = this.options[i];\n\t\t\t\t\tif (OptionSet.isOptionSet(optionSet) && optionSet.name === option.name) {\n\t\t\t\t\t\treturn optionSet;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.options.push(option);\n\t\t\tif (this.settings) {\n\t\t\t\tif (OptionSet.isOptionSet(option)) {\n\t\t\t\t\tlet optionSettings = this.settings[option.name];\n\t\t\t\t\tif (isObject(optionSettings)) {\n\t\t\t\t\t\toption.settings = optionSettings.settings;\n\t\t\t\t\t\toption.open = optionSettings.open;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// build_bundle chokes on this:\n\t\t\t\t\t// if (!isNullOrUndefined(this.settings[option.longName])) {\n\t\t\t\t\tif (typeof this.settings[option.longName] !== \"undefined\") {\n\t\t\t\t\t\tswitch (option.type) {\n\t\t\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\t\t\toption.value = !!this.settings[option.longName];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\t\t\toption.value = +this.settings[option.longName];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\toption.value = this.settings[option.longName];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn option;\n\t\t}\n\n\t\tpublic trace(writer: any) {\n\t\t\twriter.enter(this.name + \" {\");\n\t\t\tthis.options.forEach(function (option: any) {\n\t\t\t\toption.trace(writer);\n\t\t\t});\n\t\t\twriter.leave(\"}\");\n\t\t}\n\n\t\tpublic getSettings() {\n\t\t\tlet settings: MapObject<any> = {};\n\t\t\tthis.options.forEach(function (option: any) {\n\t\t\t\tif (OptionSet.isOptionSet(option)) {\n\t\t\t\t\tsettings[option.name] = {\n\t\t\t\t\t\tsettings: option.getSettings(),\n\t\t\t\t\t\topen: option.open\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tsettings[option.longName] = option.value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn settings;\n\t\t}\n\n\t\tpublic setSettings(settings: any) {\n\t\t\tif (!settings) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.options.forEach(function (option: any) {\n\t\t\t\tif (OptionSet.isOptionSet(option)) {\n\t\t\t\t\tif (option.name in settings) {\n\t\t\t\t\t\toption.setSettings(settings[option.name].settings);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (option.longName in settings) {\n\t\t\t\t\t\toption.value = settings[option.longName];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\texport class Option {\n\t\tlongName: string;\n\t\tshortName: string;\n\t\ttype: string;\n\t\tdefaultValue: any;\n\t\tvalue: any; // during options merge can be changed to accessor\n\t\tdescription: string;\n\t\tconfig: any;\n\t\t/**\n\t\t * Dat GUI control.\n\t\t */\n\t\t\t// TODO remove, player will not have access to the DOM\n\t\tctrl: any;\n\t\t// config:\n\t\t//  { range: { min: 1, max: 5, step: 1 } }\n\t\t//  { list: [ \"item 1\", \"item 2\", \"item 3\" ] }\n\t\t//  { choices: { \"choice 1\": 1, \"choice 2\": 2, \"choice 3\": 3 } }\n\t\tconstructor(shortName: string, longName: string, type: string, defaultValue: any,\n\t\t            description: string, config: any = null) {\n\t\t\tthis.longName = longName;\n\t\t\tthis.shortName = shortName;\n\t\t\tthis.type = type;\n\t\t\tthis.defaultValue = defaultValue;\n\t\t\tthis.value = defaultValue;\n\t\t\tthis.description = description;\n\t\t\tthis.config = config;\n\t\t}\n\n\t\tpublic parse(value: any) {\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tpublic trace(writer: any) {\n\t\t\twriter.writeLn((\"-\" + this.shortName + \"|--\" + this.longName).padRight(\" \", 30) +\n\t\t\t\t\" = \" + this.type + \" \" + this.value + \" [\" + this.defaultValue + \"]\" +\n\t\t\t\t\" (\" + this.description + \")\");\n\t\t}\n\t}\n}\n","/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path='references.ts' />\n\nmodule Shumway {\n\texport module Settings {\n\t\texport let ROOT: string = \"Shumway Options\";\n\t\texport let shumwayOptions = new Options.OptionSet(ROOT);\n\n\t\texport function setSettings(settings: any) {\n\t\t\tshumwayOptions.setSettings(settings);\n\t\t}\n\n\t\texport function getSettings() {\n\t\t\treturn shumwayOptions.getSettings();\n\t\t}\n\t}\n\timport Option = Shumway.Options.Option;\n\timport OptionSet = Shumway.Options.OptionSet;\n\n\timport shumwayOptions = Shumway.Settings.shumwayOptions;\n\n\texport let loggingOptions = shumwayOptions.register(new OptionSet(\"Logging Options\"));\n\n\texport let omitRepeatedWarnings = loggingOptions.register(new Option(\"wo\", \"warnOnce\",\n\t\t\"boolean\", true,\n\t\t'Omit Repeated Warnings'));\n}\n","/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path='references.ts' />\nmodule Shumway.Metrics {\n\texport class Timer {\n\t\tprivate static _base: Timer = new Timer(null, \"Total\");\n\t\tprivate static _top = Timer._base;\n\t\tprivate static _flat = new Timer(null, \"Flat\");\n\t\tprivate static _flatStack: Array<any> = [];\n\t\tprivate _parent: Timer;\n\t\tprivate _name: string;\n\t\tprivate _begin: number;\n\t\tprivate _last: number;\n\t\tprivate _total: number;\n\t\tprivate _count: number;\n\t\tprivate _timers: MapObject<Timer>;\n\n\t\tconstructor(parent: Timer, name: string) {\n\t\t\tthis._parent = parent;\n\t\t\tthis._timers = ObjectUtilities.createMap<Timer>();\n\t\t\tthis._name = name;\n\t\t\tthis._begin = 0;\n\t\t\tthis._last = 0;\n\t\t\tthis._total = 0;\n\t\t\tthis._count = 0;\n\t\t}\n\n\t\tpublic static time(name: string, fn: Function) {\n\t\t\tTimer.start(name);\n\t\t\tfn();\n\t\t\tTimer.stop();\n\t\t}\n\n\t\tpublic static start(name: string) {\n\t\t\tTimer._top = Timer._top._timers[name] || (Timer._top._timers[name] = new Timer(Timer._top, name));\n\t\t\tTimer._top.start();\n\t\t\tlet tmp = Timer._flat._timers[name] || (Timer._flat._timers[name] = new Timer(Timer._flat, name));\n\t\t\ttmp.start();\n\t\t\tTimer._flatStack.push(tmp);\n\t\t}\n\n\t\tpublic static stop() {\n\t\t\tTimer._top.stop();\n\t\t\tTimer._top = Timer._top._parent;\n\t\t\tTimer._flatStack.pop().stop();\n\t\t}\n\n\t\tpublic static stopStart(name: string) {\n\t\t\tTimer.stop();\n\t\t\tTimer.start(name);\n\t\t}\n\n\t\tpublic start() {\n\t\t\tthis._begin = getTicks();\n\t\t}\n\n\t\tpublic stop() {\n\t\t\tthis._last = getTicks() - this._begin;\n\t\t\tthis._total += this._last;\n\t\t\tthis._count += 1;\n\t\t}\n\n\t\tpublic toJSON() {\n\t\t\treturn {name: this._name, total: this._total, timers: this._timers};\n\t\t}\n\n\t\tpublic trace(writer: IndentingWriter) {\n\t\t\twriter.enter(\n\t\t\t\tthis._name + \": \" + this._total.toFixed(2) + \" ms\" +\n\t\t\t\t\", count: \" + this._count +\n\t\t\t\t\", average: \" + (this._total / this._count).toFixed(2) + \" ms\"\n\t\t\t);\n\t\t\tfor (let name in this._timers) {\n\t\t\t\tthis._timers[name].trace(writer);\n\t\t\t}\n\t\t\twriter.outdent();\n\t\t}\n\n\t\tpublic static trace(writer: IndentingWriter) {\n\t\t\tTimer._base.trace(writer);\n\t\t\tTimer._flat.trace(writer);\n\t\t}\n\t}\n\n\t/**\n\t * Quick way to count named events.\n\t */\n\texport class Counter {\n\t\tpublic static instance: Counter = new Counter(true);\n\n\t\tprivate _enabled: boolean;\n\t\tprivate _counts: MapObject<number>;\n\t\tprivate _times: MapObject<number>;\n\n\t\tget counts(): MapObject<number> {\n\t\t\treturn this._counts;\n\t\t}\n\n\t\tconstructor(enabled: boolean) {\n\t\t\tthis._enabled = enabled;\n\t\t\tthis.clear();\n\t\t}\n\n\t\tpublic setEnabled(enabled: boolean) {\n\t\t\tthis._enabled = enabled;\n\t\t}\n\n\t\tpublic clear() {\n\t\t\tthis._counts = ObjectUtilities.createMap<number>();\n\t\t\tthis._times = ObjectUtilities.createMap<number>();\n\t\t}\n\n\t\tpublic toJSON() {\n\t\t\treturn {\n\t\t\t\tcounts: this._counts,\n\t\t\t\ttimes: this._times\n\t\t\t};\n\t\t}\n\n\t\tpublic count(name: string, increment: number = 1, time: number = 0) {\n\t\t\tif (!this._enabled) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this._counts[name] === undefined) {\n\t\t\t\tthis._counts[name] = 0;\n\t\t\t\tthis._times[name] = 0;\n\t\t\t}\n\t\t\tthis._counts[name] += increment;\n\t\t\tthis._times[name] += time;\n\t\t\treturn this._counts[name];\n\t\t}\n\n\t\tpublic trace(writer: IndentingWriter) {\n\t\t\tfor (let name in this._counts) {\n\t\t\t\twriter.writeLn(name + \": \" + this._counts[name]);\n\t\t\t}\n\t\t}\n\n\t\tprivate _pairToString(times: MapObject<number>, pair: Array<any>): string {\n\t\t\tlet name = pair[0];\n\t\t\tlet count = pair[1];\n\t\t\tlet time = times[name];\n\t\t\tlet line = name + \": \" + count;\n\t\t\tif (time) {\n\t\t\t\tline += \", \" + time.toFixed(4);\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tline += \" (\" + (time / count).toFixed(4) + \")\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn line;\n\t\t}\n\n\t\tpublic toStringSorted(): string {\n\t\t\tlet self = this;\n\t\t\tlet times = this._times;\n\t\t\tlet pairs = [];\n\t\t\tfor (let name in this._counts) {\n\t\t\t\tpairs.push([name, this._counts[name]]);\n\t\t\t}\n\t\t\tpairs.sort(function (a: any, b: any) {\n\t\t\t\treturn b[1] - a[1];\n\t\t\t});\n\t\t\treturn (pairs.map(function (pair) {\n\t\t\t\treturn self._pairToString(times, pair);\n\t\t\t}).join(\", \"));\n\t\t}\n\n\t\tpublic traceSorted(writer: IndentingWriter, inline = false) {\n\t\t\tlet self = this;\n\t\t\tlet times = this._times;\n\t\t\tlet pairs = [];\n\t\t\tfor (let name in this._counts) {\n\t\t\t\tpairs.push([name, this._counts[name]]);\n\t\t\t}\n\t\t\tpairs.sort(function (a: any, b: any) {\n\t\t\t\treturn b[1] - a[1];\n\t\t\t});\n\t\t\tif (inline) {\n\t\t\t\twriter.writeLn(pairs.map(function (pair) {\n\t\t\t\t\treturn self._pairToString(times, pair);\n\t\t\t\t}).join(\", \"));\n\t\t\t} else {\n\t\t\t\tpairs.forEach(function (pair) {\n\t\t\t\t\twriter.writeLn(self._pairToString(times, pair));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\texport class Average {\n\t\tprivate _samples: Float64Array;\n\t\tprivate _count: number;\n\t\tprivate _index: number;\n\n\t\tconstructor(max: number) {\n\t\t\tthis._samples = new Float64Array(max);\n\t\t\tthis._count = 0;\n\t\t\tthis._index = 0;\n\t\t}\n\n\t\tpublic push(sample: number) {\n\t\t\tif (this._count < this._samples.length) {\n\t\t\t\tthis._count++;\n\t\t\t}\n\t\t\tthis._index++;\n\t\t\tthis._samples[this._index % this._samples.length] = sample;\n\t\t}\n\n\t\tpublic average(): number {\n\t\t\tlet sum = 0;\n\t\t\tfor (let i = 0; i < this._count; i++) {\n\t\t\t\tsum += this._samples[i];\n\t\t\t}\n\t\t\treturn sum / this._count;\n\t\t}\n\t}\n}\n\n","/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway.ArrayUtilities {\n\tenum InflateState {\n\t\tINIT = 0,\n\t\tBLOCK_0 = 1,\n\t\tBLOCK_1 = 2,\n\t\tBLOCK_2_PRE = 3,\n\t\tBLOCK_2 = 4,\n\t\tDONE = 5,\n\t\tERROR = 6,\n\t\tVERIFY_HEADER = 7\n\t}\n\n\tlet WINDOW_SIZE = 32768;\n\tlet WINDOW_SHIFT_POSITION = 65536;\n\tlet MAX_WINDOW_SIZE = WINDOW_SHIFT_POSITION + 258;\n\n\t/* plus max copy len */\n\n\tinterface HuffmanTable {\n\t\tcodes: Uint32Array;\n\t\tmaxBits: number;\n\t}\n\n\tinterface DeflateCopyState {\n\t\tstate: number;\n\t\tlen: number;\n\t\tlenBits: number;\n\t\tdist: number;\n\t\tdistBits: number;\n\t}\n\n\tinterface DeflateBlock2State {\n\t\tnumLiteralCodes: number;\n\t\tnumDistanceCodes: number;\n\t\tcodeLengthTable: HuffmanTable;\n\t\tbitLengths: Uint8Array;\n\t\tcodesRead: number;\n\t\tdupBits: number;\n\t}\n\n\texport class Inflate implements IDataDecoder {\n\t\tpublic onData: (buffer: Uint8Array) => void;\n\t\tpublic onError: (e: any) => void;\n\n\t\tconstructor(verifyHeader: boolean) {\n\t\t\t//\n\t\t}\n\n\t\tpublic push(data: Uint8Array) {\n\t\t\tDebug.abstractMethod('Inflate.push');\n\t\t}\n\n\t\tpublic close() {\n\t\t\t//\n\t\t}\n\n\t\tpublic static create(verifyHeader: boolean): Inflate {\n\t\t\tif (typeof ShumwayCom !== 'undefined' && ShumwayCom.createSpecialInflate) {\n\t\t\t\treturn new SpecialInflateAdapter(verifyHeader, ShumwayCom.createSpecialInflate);\n\t\t\t}\n\t\t\treturn new BasicInflate(verifyHeader);\n\t\t}\n\n\t\t_processZLibHeader(buffer: Uint8Array, start: number, end: number): number {\n\t\t\t/* returns -1 - bad header, 0 - not enough data, 1+ - number of bytes processed */\n\t\t\tlet ZLIB_HEADER_SIZE = 2;\n\t\t\tif (start + ZLIB_HEADER_SIZE > end) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tlet header = (buffer[start] << 8) | buffer[start + 1];\n\t\t\tlet error: string = null;\n\t\t\tif ((header & 0x0f00) !== 0x0800) {\n\t\t\t\terror = 'inflate: unknown compression method';\n\t\t\t} else if ((header % 31) !== 0) {\n\t\t\t\terror = 'inflate: bad FCHECK';\n\t\t\t} else if ((header & 0x20) !== 0) {\n\t\t\t\terror = 'inflate: FDICT bit set';\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\tif (this.onError) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn ZLIB_HEADER_SIZE;\n\t\t\t}\n\t\t}\n\n\t\tpublic static inflate(data: Uint8Array, expectedLength: number, zlibHeader: boolean): Uint8Array {\n\t\t\tlet output = new Uint8Array(expectedLength);\n\t\t\tlet position = 0;\n\t\t\tlet inflate = Inflate.create(zlibHeader);\n\t\t\tinflate.onData = function (data) {\n\t\t\t\t// Make sure we don't cause an exception here when trying to set out-of-bound data by clamping the number of\n\t\t\t\t// bytes to write to the remaining space in our output buffer. The Flash Player ignores data that goes over the\n\t\t\t\t// expected length, so should we.\n\t\t\t\tlet length = Math.min(data.length, output.length - position);\n\t\t\t\tif (length) {\n\t\t\t\t\tmemCopy(output, data, position, 0, length);\n\t\t\t\t}\n\t\t\t\tposition += length;\n\t\t\t};\n\t\t\tinflate.onError = function (error) {\n\t\t\t\tthrow new Error(error);\n\t\t\t};\n\t\t\tinflate.push(data);\n\t\t\tinflate.close();\n\t\t\treturn output;\n\t\t}\n\t}\n\n\tclass BasicInflate extends Inflate {\n\t\tprivate _buffer: Uint8Array;\n\t\tprivate _bufferSize: number;\n\t\tprivate _bufferPosition: number;\n\t\tprivate _bitBuffer: number;\n\t\tprivate _bitLength: number;\n\t\tprivate _window: Uint8Array;\n\t\tprivate _windowPosition: number;\n\t\tprivate _state: InflateState;\n\t\tprivate _isFinalBlock: boolean;\n\t\tprivate _literalTable: HuffmanTable;\n\t\tprivate _distanceTable: HuffmanTable;\n\t\tprivate _block0Read: number;\n\t\tprivate _block2State: DeflateBlock2State;\n\t\tprivate _copyState: DeflateCopyState;\n\n\t\tconstructor(verifyHeader: boolean) {\n\t\t\tsuper(verifyHeader);\n\t\t\tthis._buffer = null;\n\t\t\tthis._bufferSize = 0;\n\t\t\tthis._bufferPosition = 0;\n\t\t\tthis._bitBuffer = 0;\n\t\t\tthis._bitLength = 0;\n\t\t\tthis._window = new Uint8Array(MAX_WINDOW_SIZE);\n\t\t\tthis._windowPosition = 0;\n\t\t\tthis._state = verifyHeader ? InflateState.VERIFY_HEADER : InflateState.INIT;\n\t\t\tthis._isFinalBlock = false;\n\t\t\tthis._literalTable = null;\n\t\t\tthis._distanceTable = null;\n\t\t\tthis._block0Read = 0;\n\t\t\tthis._block2State = null;\n\t\t\tthis._copyState = {\n\t\t\t\tstate: 0,\n\t\t\t\tlen: 0,\n\t\t\t\tlenBits: 0,\n\t\t\t\tdist: 0,\n\t\t\t\tdistBits: 0\n\t\t\t};\n\n\t\t\tif (!areTablesInitialized) {\n\t\t\t\tinitializeTables();\n\t\t\t\tareTablesInitialized = true;\n\t\t\t}\n\t\t}\n\n\t\tpublic push(data: Uint8Array) {\n\t\t\tif (!this._buffer || this._buffer.length < this._bufferSize + data.length) {\n\t\t\t\tlet newBuffer = new Uint8Array(this._bufferSize + data.length);\n\t\t\t\tif (this._buffer) {\n\t\t\t\t\tnewBuffer.set(this._buffer);\n\t\t\t\t}\n\t\t\t\tthis._buffer = newBuffer;\n\t\t\t}\n\t\t\tthis._buffer.set(data, this._bufferSize);\n\t\t\tthis._bufferSize += data.length;\n\t\t\tthis._bufferPosition = 0;\n\n\t\t\tlet incomplete = false;\n\t\t\tdo {\n\t\t\t\tlet lastPosition = this._windowPosition;\n\t\t\t\tif (this._state === InflateState.INIT) {\n\t\t\t\t\tincomplete = this._decodeInitState();\n\t\t\t\t\tif (incomplete) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch (this._state) {\n\t\t\t\t\tcase InflateState.BLOCK_0:\n\t\t\t\t\t\tincomplete = this._decodeBlock0();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase InflateState.BLOCK_2_PRE:\n\t\t\t\t\t\tincomplete = this._decodeBlock2Pre();\n\t\t\t\t\t\tif (incomplete) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t/* fall through */\n\t\t\t\t\tcase InflateState.BLOCK_1:\n\t\t\t\t\tcase InflateState.BLOCK_2:\n\t\t\t\t\t\tincomplete = this._decodeBlock();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase InflateState.ERROR:\n\t\t\t\t\tcase InflateState.DONE:\n\t\t\t\t\t\t// skipping all data\n\t\t\t\t\t\tthis._bufferPosition = this._bufferSize;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase InflateState.VERIFY_HEADER:\n\t\t\t\t\t\tlet processed = this._processZLibHeader(this._buffer, this._bufferPosition, this._bufferSize);\n\t\t\t\t\t\tif (processed > 0) {\n\t\t\t\t\t\t\tthis._bufferPosition += processed;\n\t\t\t\t\t\t\tthis._state = InflateState.INIT;\n\t\t\t\t\t\t} else if (processed === 0) {\n\t\t\t\t\t\t\tincomplete = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._state = InflateState.ERROR;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet decoded = this._windowPosition - lastPosition;\n\t\t\t\tif (decoded > 0) {\n\t\t\t\t\tthis.onData(this._window.subarray(lastPosition, this._windowPosition));\n\t\t\t\t}\n\t\t\t\tif (this._windowPosition >= WINDOW_SHIFT_POSITION) {\n\t\t\t\t\t// shift window\n\t\t\t\t\tif ('copyWithin' in this._buffer) {\n\t\t\t\t\t\tthis._window['copyWithin'](0, this._windowPosition - WINDOW_SIZE, this._windowPosition);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._window.set(this._window.subarray(this._windowPosition - WINDOW_SIZE,\n\t\t\t\t\t\t\tthis._windowPosition));\n\t\t\t\t\t}\n\t\t\t\t\tthis._windowPosition = WINDOW_SIZE;\n\t\t\t\t}\n\t\t\t} while (!incomplete && this._bufferPosition < this._bufferSize);\n\n\t\t\tif (this._bufferPosition < this._bufferSize) {\n\t\t\t\t// shift buffer\n\t\t\t\tif ('copyWithin' in this._buffer) {\n\t\t\t\t\tthis._buffer['copyWithin'](0, this._bufferPosition, this._bufferSize);\n\t\t\t\t} else {\n\t\t\t\t\tthis._buffer.set(this._buffer.subarray(this._bufferPosition, this._bufferSize));\n\t\t\t\t}\n\t\t\t\tthis._bufferSize -= this._bufferPosition;\n\t\t\t} else {\n\t\t\t\tthis._bufferSize = 0;\n\t\t\t}\n\t\t}\n\n\t\tprivate _decodeInitState(): boolean {\n\t\t\tif (this._isFinalBlock) {\n\t\t\t\tthis._state = InflateState.DONE;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet buffer = this._buffer, bufferSize = this._bufferSize;\n\t\t\tlet bitBuffer = this._bitBuffer, bitLength = this._bitLength;\n\t\t\tlet state;\n\t\t\tlet position = this._bufferPosition;\n\t\t\tif (((bufferSize - position) << 3) + bitLength < 3) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (bitLength < 3) {\n\t\t\t\tbitBuffer |= buffer[position++] << bitLength;\n\t\t\t\tbitLength += 8;\n\t\t\t}\n\t\t\tlet type = bitBuffer & 7;\n\t\t\tbitBuffer >>= 3;\n\t\t\tbitLength -= 3;\n\t\t\tswitch (type >> 1) {\n\t\t\t\tcase 0:\n\t\t\t\t\tbitBuffer = 0;\n\t\t\t\t\tbitLength = 0;\n\t\t\t\t\tif (bufferSize - position < 4) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet length = buffer[position] | (buffer[position + 1] << 8);\n\t\t\t\t\tlet length2 = buffer[position + 2] | (buffer[position + 3] << 8);\n\t\t\t\t\tposition += 4;\n\t\t\t\t\tif ((length ^ length2) !== 0xFFFF) {\n\t\t\t\t\t\tthis._error('inflate: invalid block 0 length');\n\t\t\t\t\t\tstate = InflateState.ERROR;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (length === 0) {\n\t\t\t\t\t\tstate = InflateState.INIT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._block0Read = length;\n\t\t\t\t\t\tstate = InflateState.BLOCK_0;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tstate = InflateState.BLOCK_1;\n\t\t\t\t\tthis._literalTable = fixedLiteralTable;\n\t\t\t\t\tthis._distanceTable = fixedDistanceTable;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tif (((bufferSize - position) << 3) + bitLength < 14 + 3 * 4) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\twhile (bitLength < 14) {\n\t\t\t\t\t\tbitBuffer |= buffer[position++] << bitLength;\n\t\t\t\t\t\tbitLength += 8;\n\t\t\t\t\t}\n\t\t\t\t\tlet numLengthCodes = ((bitBuffer >> 10) & 15) + 4;\n\t\t\t\t\tif (((bufferSize - position) << 3) + bitLength < 14 + 3 * numLengthCodes) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tlet block2State: DeflateBlock2State = {\n\t\t\t\t\t\tnumLiteralCodes: (bitBuffer & 31) + 257,\n\t\t\t\t\t\tnumDistanceCodes: ((bitBuffer >> 5) & 31) + 1,\n\t\t\t\t\t\tcodeLengthTable: undefined,\n\t\t\t\t\t\tbitLengths: undefined,\n\t\t\t\t\t\tcodesRead: 0,\n\t\t\t\t\t\tdupBits: 0\n\t\t\t\t\t};\n\t\t\t\t\tbitBuffer >>= 14;\n\t\t\t\t\tbitLength -= 14;\n\t\t\t\t\tlet codeLengths = new Uint8Array(19);\n\t\t\t\t\tlet i;\n\t\t\t\t\tfor (i = 0; i < numLengthCodes; ++i) {\n\t\t\t\t\t\tif (bitLength < 3) {\n\t\t\t\t\t\t\tbitBuffer |= buffer[position++] << bitLength;\n\t\t\t\t\t\t\tbitLength += 8;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcodeLengths[codeLengthOrder[i]] = bitBuffer & 7;\n\t\t\t\t\t\tbitBuffer >>= 3;\n\t\t\t\t\t\tbitLength -= 3;\n\t\t\t\t\t}\n\t\t\t\t\tfor (; i < 19; i++) {\n\t\t\t\t\t\tcodeLengths[codeLengthOrder[i]] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tblock2State.bitLengths =\n\t\t\t\t\t\tnew Uint8Array(block2State.numLiteralCodes + block2State.numDistanceCodes);\n\t\t\t\t\tblock2State.codeLengthTable = makeHuffmanTable(codeLengths);\n\t\t\t\t\tthis._block2State = block2State;\n\t\t\t\t\tstate = InflateState.BLOCK_2_PRE;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis._error('inflate: unsupported block type');\n\t\t\t\t\tstate = InflateState.ERROR;\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._isFinalBlock = !!(type & 1);\n\t\t\tthis._state = state;\n\t\t\tthis._bufferPosition = position;\n\t\t\tthis._bitBuffer = bitBuffer;\n\t\t\tthis._bitLength = bitLength;\n\t\t\treturn false;\n\t\t}\n\n\t\tprivate _error(e: string) {\n\t\t\tif (this.onError) {\n\t\t\t\tthis.onError(e);\n\t\t\t}\n\t\t}\n\n\t\tprivate _decodeBlock0() {\n\t\t\tlet position = this._bufferPosition;\n\t\t\tlet windowPosition = this._windowPosition;\n\t\t\tlet toRead = this._block0Read;\n\t\t\tlet leftInWindow = MAX_WINDOW_SIZE - windowPosition;\n\t\t\tlet leftInBuffer = this._bufferSize - position;\n\t\t\tlet incomplete = leftInBuffer < toRead;\n\t\t\tlet canFit = Math.min(leftInWindow, leftInBuffer, toRead);\n\t\t\tthis._window.set(this._buffer.subarray(position, position + canFit),\n\t\t\t\twindowPosition);\n\t\t\tthis._windowPosition = windowPosition + canFit;\n\t\t\tthis._bufferPosition = position + canFit;\n\t\t\tthis._block0Read = toRead - canFit;\n\n\t\t\tif (toRead === canFit) {\n\t\t\t\tthis._state = InflateState.INIT;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn incomplete && leftInWindow < leftInBuffer;\n\t\t}\n\n\t\tprivate _readBits(size: number) {\n\t\t\tlet bitBuffer = this._bitBuffer;\n\t\t\tlet bitLength = this._bitLength;\n\t\t\tif (size > bitLength) {\n\t\t\t\tlet pos = this._bufferPosition;\n\t\t\t\tlet end = this._bufferSize;\n\t\t\t\tdo {\n\t\t\t\t\tif (pos >= end) {\n\t\t\t\t\t\tthis._bufferPosition = pos;\n\t\t\t\t\t\tthis._bitBuffer = bitBuffer;\n\t\t\t\t\t\tthis._bitLength = bitLength;\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tbitBuffer |= this._buffer[pos++] << bitLength;\n\t\t\t\t\tbitLength += 8;\n\t\t\t\t} while (size > bitLength);\n\t\t\t\tthis._bufferPosition = pos;\n\t\t\t}\n\t\t\tthis._bitBuffer = bitBuffer >> size;\n\t\t\tthis._bitLength = bitLength - size;\n\t\t\treturn bitBuffer & ((1 << size) - 1);\n\t\t}\n\n\t\tprivate _readCode(codeTable: any) {\n\t\t\tlet bitBuffer = this._bitBuffer;\n\t\t\tlet bitLength = this._bitLength;\n\t\t\tlet maxBits = codeTable.maxBits;\n\t\t\tif (maxBits > bitLength) {\n\t\t\t\tlet pos = this._bufferPosition;\n\t\t\t\tlet end = this._bufferSize;\n\t\t\t\tdo {\n\t\t\t\t\tif (pos >= end) {\n\t\t\t\t\t\tthis._bufferPosition = pos;\n\t\t\t\t\t\tthis._bitBuffer = bitBuffer;\n\t\t\t\t\t\tthis._bitLength = bitLength;\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tbitBuffer |= this._buffer[pos++] << bitLength;\n\t\t\t\t\tbitLength += 8;\n\t\t\t\t} while (maxBits > bitLength);\n\t\t\t\tthis._bufferPosition = pos;\n\t\t\t}\n\n\t\t\tlet code = codeTable.codes[bitBuffer & ((1 << maxBits) - 1)];\n\t\t\tlet len = code >> 16;\n\t\t\tif ((code & 0x8000)) {\n\t\t\t\tthis._error('inflate: invalid encoding');\n\t\t\t\tthis._state = InflateState.ERROR;\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tthis._bitBuffer = bitBuffer >> len;\n\t\t\tthis._bitLength = bitLength - len;\n\t\t\treturn code & 0xffff;\n\t\t}\n\n\t\tprivate _decodeBlock2Pre() {\n\t\t\tlet block2State = this._block2State;\n\t\t\tlet numCodes = block2State.numLiteralCodes + block2State.numDistanceCodes;\n\t\t\tlet bitLengths = block2State.bitLengths;\n\t\t\tlet i = block2State.codesRead;\n\t\t\tlet prev = i > 0 ? bitLengths[i - 1] : 0;\n\t\t\tlet codeLengthTable = block2State.codeLengthTable;\n\t\t\tlet j;\n\t\t\tif (block2State.dupBits > 0) {\n\t\t\t\tj = this._readBits(block2State.dupBits);\n\t\t\t\tif (j < 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\twhile (j--) {\n\t\t\t\t\tbitLengths[i++] = prev;\n\t\t\t\t}\n\t\t\t\tblock2State.dupBits = 0;\n\t\t\t}\n\t\t\twhile (i < numCodes) {\n\t\t\t\tlet sym = this._readCode(codeLengthTable);\n\t\t\t\tif (sym < 0) {\n\t\t\t\t\tblock2State.codesRead = i;\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (sym < 16) {\n\t\t\t\t\tbitLengths[i++] = (prev = sym);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet j, dupBits;\n\t\t\t\tswitch (sym) {\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\tdupBits = 2;\n\t\t\t\t\t\tj = 3;\n\t\t\t\t\t\tsym = prev;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 17:\n\t\t\t\t\t\tdupBits = 3;\n\t\t\t\t\t\tj = 3;\n\t\t\t\t\t\tsym = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 18:\n\t\t\t\t\t\tdupBits = 7;\n\t\t\t\t\t\tj = 11;\n\t\t\t\t\t\tsym = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\twhile (j--) {\n\t\t\t\t\tbitLengths[i++] = sym;\n\t\t\t\t}\n\t\t\t\tj = this._readBits(dupBits);\n\t\t\t\tif (j < 0) {\n\t\t\t\t\tblock2State.codesRead = i;\n\t\t\t\t\tblock2State.dupBits = dupBits;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\twhile (j--) {\n\t\t\t\t\tbitLengths[i++] = sym;\n\t\t\t\t}\n\t\t\t\tprev = sym;\n\t\t\t}\n\t\t\tthis._literalTable = makeHuffmanTable(bitLengths.subarray(0, block2State.numLiteralCodes));\n\t\t\tthis._distanceTable = makeHuffmanTable(bitLengths.subarray(block2State.numLiteralCodes));\n\t\t\tthis._state = InflateState.BLOCK_2;\n\t\t\tthis._block2State = null;\n\t\t\treturn false;\n\t\t}\n\n\t\tprivate _decodeBlock(): boolean {\n\t\t\tlet literalTable = this._literalTable, distanceTable = this._distanceTable;\n\t\t\tlet output = this._window, pos = this._windowPosition;\n\t\t\tlet copyState = this._copyState;\n\t\t\tlet i: number, j: number, sym: number;\n\t\t\tlet len: number, lenBits: number, dist: number, distBits: number;\n\n\t\t\tif (copyState.state !== 0) {\n\t\t\t\t// continuing len/distance operation\n\t\t\t\tswitch (copyState.state) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tif ((j = this._readBits(copyState.lenBits)) < 0) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcopyState.len += j;\n\t\t\t\t\t\tcopyState.state = 2;\n\t\t\t\t\t/* fall through */\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tif ((sym = this._readCode(distanceTable)) < 0) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcopyState.distBits = distanceExtraBits[sym];\n\t\t\t\t\t\tcopyState.dist = distanceCodes[sym];\n\t\t\t\t\t\tcopyState.state = 3;\n\t\t\t\t\t/* fall through */\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tif (copyState.distBits > 0 && (j = this._readBits(copyState.distBits)) < 0) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdist = copyState.dist + j;\n\t\t\t\t\t\tlen = copyState.len;\n\t\t\t\t\t\ti = pos - dist;\n\t\t\t\t\t\twhile (len--) {\n\t\t\t\t\t\t\toutput[pos++] = output[i++];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcopyState.state = 0;\n\t\t\t\t\t\tif (pos >= WINDOW_SHIFT_POSITION) {\n\t\t\t\t\t\t\tthis._windowPosition = pos;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tsym = this._readCode(literalTable);\n\t\t\t\tif (sym < 0) {\n\t\t\t\t\tthis._windowPosition = pos;\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (sym < 256) {\n\t\t\t\t\toutput[pos++] = sym;\n\t\t\t\t} else if (sym > 256) {\n\t\t\t\t\tthis._windowPosition = pos;\n\t\t\t\t\tsym -= 257;\n\t\t\t\t\tlenBits = lengthExtraBits[sym];\n\t\t\t\t\tlen = lengthCodes[sym];\n\t\t\t\t\tj = lenBits === 0 ? 0 : this._readBits(lenBits);\n\t\t\t\t\tif (j < 0) {\n\t\t\t\t\t\tcopyState.state = 1;\n\t\t\t\t\t\tcopyState.len = len;\n\t\t\t\t\t\tcopyState.lenBits = lenBits;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tlen += j;\n\t\t\t\t\tsym = this._readCode(distanceTable);\n\t\t\t\t\tif (sym < 0) {\n\t\t\t\t\t\tcopyState.state = 2;\n\t\t\t\t\t\tcopyState.len = len;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tdistBits = distanceExtraBits[sym];\n\t\t\t\t\tdist = distanceCodes[sym];\n\t\t\t\t\tj = distBits === 0 ? 0 : this._readBits(distBits);\n\t\t\t\t\tif (j < 0) {\n\t\t\t\t\t\tcopyState.state = 3;\n\t\t\t\t\t\tcopyState.len = len;\n\t\t\t\t\t\tcopyState.dist = dist;\n\t\t\t\t\t\tcopyState.distBits = distBits;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tdist += j;\n\t\t\t\t\ti = pos - dist;\n\t\t\t\t\twhile (len--) {\n\t\t\t\t\t\toutput[pos++] = output[i++];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._state = InflateState.INIT;\n\t\t\t\t\tbreak; // end of block\n\t\t\t\t}\n\t\t\t} while (pos < WINDOW_SHIFT_POSITION);\n\t\t\tthis._windowPosition = pos;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tlet codeLengthOrder: Uint8Array;\n\tlet distanceCodes: Uint16Array;\n\tlet distanceExtraBits: Uint8Array;\n\tlet fixedDistanceTable: HuffmanTable;\n\tlet lengthCodes: Uint16Array;\n\tlet lengthExtraBits: Uint8Array;\n\tlet fixedLiteralTable: HuffmanTable;\n\n\tlet areTablesInitialized: boolean = false;\n\n\tfunction initializeTables() {\n\t\tcodeLengthOrder = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n\t\tdistanceCodes = new Uint16Array(30);\n\t\tdistanceExtraBits = new Uint8Array(30);\n\t\tfor (let i = 0, j = 0, code = 1; i < 30; ++i) {\n\t\t\tdistanceCodes[i] = code;\n\t\t\tcode += 1 << (distanceExtraBits[i] = ~~((j += (i > 2 ? 1 : 0)) / 2));\n\t\t}\n\n\t\tlet bitLengths = new Uint8Array(288);\n\t\tfor (let i = 0; i < 32; ++i) {\n\t\t\tbitLengths[i] = 5;\n\t\t}\n\t\tfixedDistanceTable = makeHuffmanTable(bitLengths.subarray(0, 32));\n\n\t\tlengthCodes = new Uint16Array(29);\n\t\tlengthExtraBits = new Uint8Array(29);\n\t\tfor (let i = 0, j = 0, code = 3; i < 29; ++i) {\n\t\t\tlengthCodes[i] = code - (i == 28 ? 1 : 0);\n\t\t\tcode += 1 << (lengthExtraBits[i] = ~~(((j += (i > 4 ? 1 : 0)) / 4) % 6));\n\t\t}\n\t\tfor (let i = 0; i < 288; ++i) {\n\t\t\tbitLengths[i] = i < 144 || i > 279 ? 8 : (i < 256 ? 9 : 7);\n\t\t}\n\t\tfixedLiteralTable = makeHuffmanTable(bitLengths);\n\t}\n\n\tfunction makeHuffmanTable(bitLengths: Uint8Array): HuffmanTable {\n\t\tlet maxBits = Math.max.apply(null, bitLengths);\n\t\tlet numLengths = bitLengths.length;\n\t\tlet size = 1 << maxBits;\n\t\tlet codes = new Uint32Array(size);\n\t\t// avoiding len == 0: using max number of bits\n\t\tlet dummyCode = (maxBits << 16) | 0xFFFF;\n\t\tfor (let j = 0; j < size; j++) {\n\t\t\tcodes[j] = dummyCode;\n\t\t}\n\t\tfor (let code = 0, len = 1, skip = 2; len <= maxBits; code <<= 1, ++len, skip <<= 1) {\n\t\t\tfor (let val = 0; val < numLengths; ++val) {\n\t\t\t\tif (bitLengths[val] === len) {\n\t\t\t\t\tlet lsb = 0;\n\t\t\t\t\tfor (let i = 0; i < len; ++i)\n\t\t\t\t\t\tlsb = (lsb * 2) + ((code >> i) & 1);\n\t\t\t\t\tfor (let i = lsb; i < size; i += skip)\n\t\t\t\t\t\tcodes[i] = (len << 16) | val;\n\t\t\t\t\t++code;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {codes: codes, maxBits: maxBits};\n\t}\n\n\n\tclass SpecialInflateAdapter extends Inflate {\n\t\tprivate _verifyHeader: boolean;\n\t\tprivate _buffer: Uint8Array;\n\n\t\tprivate _specialInflate: SpecialInflate;\n\n\t\tconstructor(verifyHeader: boolean, createSpecialInflate: () => SpecialInflate) {\n\t\t\tsuper(verifyHeader);\n\n\t\t\tthis._verifyHeader = verifyHeader;\n\n\t\t\tthis._specialInflate = createSpecialInflate();\n\t\t\tthis._specialInflate.setDataCallback(function (data: any) {\n\t\t\t\tthis.onData(data);\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tpublic push(data: Uint8Array) {\n\t\t\tif (this._verifyHeader) {\n\t\t\t\tlet buffer;\n\t\t\t\tif (this._buffer) {\n\t\t\t\t\tbuffer = new Uint8Array(this._buffer.length + data.length);\n\t\t\t\t\tbuffer.set(this._buffer);\n\t\t\t\t\tbuffer.set(data, this._buffer.length);\n\t\t\t\t\tthis._buffer = null;\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = new Uint8Array(data);\n\t\t\t\t}\n\t\t\t\tlet processed = this._processZLibHeader(buffer, 0, buffer.length);\n\t\t\t\tif (processed === 0) {\n\t\t\t\t\tthis._buffer = buffer;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._verifyHeader = true;\n\t\t\t\tif (processed > 0) {\n\t\t\t\t\tdata = buffer.subarray(processed);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._specialInflate.push(data);\n\t\t}\n\n\t\tpublic close() {\n\t\t\tif (this._specialInflate) {\n\t\t\t\tthis._specialInflate.close();\n\t\t\t\tthis._specialInflate = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tenum DeflateState {\n\t\tWRITE = 0,\n\t\tDONE = 1,\n\t\tZLIB_HEADER = 2,\n\t}\n\n\texport class Adler32 {\n\t\tprivate a: number;\n\t\tprivate b: number;\n\n\t\tconstructor() {\n\t\t\tthis.a = 1;\n\t\t\tthis.b = 0;\n\t\t}\n\n\t\tpublic update(data: Uint8Array, start: number, end: number) {\n\t\t\tlet a = this.a;\n\t\t\tlet b = this.b;\n\t\t\tfor (let i = start; i < end; ++i) {\n\t\t\t\ta = (a + (data[i] & 0xff)) % 65521;\n\t\t\t\tb = (b + a) % 65521;\n\t\t\t}\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t}\n\n\t\tpublic getChecksum(): number {\n\t\t\treturn (this.b << 16) | this.a;\n\t\t}\n\t}\n\n\texport class Deflate implements IDataDecoder {\n\t\tpublic onData: (data: Uint8Array) => void;\n\t\tpublic onError: (e: any) => void;\n\n\t\tprivate _writeZlibHeader: boolean;\n\t\tprivate _state: DeflateState;\n\t\tprivate _adler32: Adler32;\n\n\t\tconstructor(writeZlibHeader: boolean) {\n\t\t\tthis._writeZlibHeader = writeZlibHeader;\n\t\t\tthis._state = writeZlibHeader ? DeflateState.ZLIB_HEADER : DeflateState.WRITE;\n\t\t\tthis._adler32 = writeZlibHeader ? new Adler32() : null;\n\t\t}\n\n\t\tpublic push(data: Uint8Array) {\n\t\t\tif (this._state === DeflateState.ZLIB_HEADER) {\n\t\t\t\tthis.onData(new Uint8Array([0x78, 0x9C]));\n\t\t\t\tthis._state = DeflateState.WRITE;\n\t\t\t}\n\t\t\t// simple non-compressing algorithm for now\n\t\t\tlet len = data.length;\n\t\t\tlet outputSize = len + Math.ceil(len / 0xFFFF) * 5;\n\t\t\tlet output = new Uint8Array(outputSize);\n\t\t\tlet outputPos = 0;\n\t\t\tlet pos = 0;\n\t\t\twhile (len > 0xFFFF) {\n\t\t\t\toutput.set(new Uint8Array([\n\t\t\t\t\t0x00,\n\t\t\t\t\t0xFF, 0xFF,\n\t\t\t\t\t0x00, 0x00\n\t\t\t\t]), outputPos);\n\t\t\t\toutputPos += 5;\n\t\t\t\toutput.set(data.subarray(pos, pos + 0xFFFF), outputPos);\n\t\t\t\tpos += 0xFFFF;\n\t\t\t\toutputPos += 0xFFFF;\n\t\t\t\tlen -= 0xFFFF;\n\t\t\t}\n\n\t\t\toutput.set(new Uint8Array([\n\t\t\t\t0x00,\n\t\t\t\t(len & 0xff), ((len >> 8) & 0xff),\n\t\t\t\t((~len) & 0xff), (((~len) >> 8) & 0xff)\n\t\t\t]), outputPos);\n\t\t\toutputPos += 5;\n\t\t\toutput.set(data.subarray(pos, len), outputPos);\n\n\t\t\tthis.onData(output);\n\n\t\t\tif (this._adler32) {\n\t\t\t\tthis._adler32.update(data, 0, len);\n\t\t\t}\n\t\t}\n\n\t\tpublic close() {\n\t\t\tthis._state = DeflateState.DONE;\n\t\t\tthis.onData(new Uint8Array([\n\t\t\t\t0x01,\n\t\t\t\t0x00, 0x00,\n\t\t\t\t0xFF, 0xFF\n\t\t\t]));\n\t\t\tif (this._adler32) {\n\t\t\t\tlet checksum = this._adler32.getChecksum();\n\t\t\t\tthis.onData(new Uint8Array([\n\t\t\t\t\tchecksum & 0xff, (checksum >> 8) & 0xff,\n\t\t\t\t\t(checksum >> 16) & 0xff, (checksum >>> 24) & 0xff\n\t\t\t\t]));\n\t\t\t}\n\t\t}\n\t}\n}\n","/*\n * Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code derived from:\n/* LzmaSpec.c -- LZMA Reference Decoder\n 2013-07-28 : Igor Pavlov : Public domain */\n\nmodule Shumway.ArrayUtilities {\n\n\tclass InputStream {\n\t\tavailable: number;\n\t\tpos: number;\n\t\tbuffer: Uint8Array;\n\n\t\tconstructor() {\n\t\t\tthis.available = 0;\n\t\t\tthis.pos = 0;\n\t\t\tthis.buffer = new Uint8Array(2000);\n\t\t}\n\n\t\tappend(data: Uint8Array) {\n\t\t\tlet length = this.pos + this.available;\n\t\t\tlet needLength = length + data.length;\n\t\t\tif (needLength > this.buffer.length) {\n\t\t\t\tlet newLength = this.buffer.length * 2;\n\t\t\t\twhile (newLength < needLength) {\n\t\t\t\t\tnewLength *= 2;\n\t\t\t\t}\n\t\t\t\tlet newBuffer = new Uint8Array(newLength);\n\t\t\t\tnewBuffer.set(this.buffer);\n\t\t\t\tthis.buffer = newBuffer;\n\t\t\t}\n\t\t\tthis.buffer.set(data, length);\n\t\t\tthis.available += data.length;\n\t\t}\n\n\t\tcompact(): void {\n\t\t\tif (this.available === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.buffer.set(this.buffer.subarray(this.pos, this.pos + this.available), 0);\n\t\t\tthis.pos = 0;\n\t\t}\n\n\t\treadByte(): number {\n\t\t\tif (this.available <= 0) {\n\t\t\t\tthrow new Error(\"Unexpected end of file\");\n\t\t\t}\n\t\t\tthis.available--;\n\t\t\treturn this.buffer[this.pos++];\n\t\t}\n\t}\n\n\tclass OutputStream {\n\t\tonData: (data: Uint8Array) => void;\n\t\tprocessed: number;\n\n\t\tconstructor(onData: (data: Uint8Array) => void) {\n\t\t\tthis.onData = onData;\n\t\t\tthis.processed = 0;\n\t\t}\n\n\t\twriteBytes(data: Uint8Array) {\n\t\t\tthis.onData.call(null, data);\n\t\t\tthis.processed += data.length;\n\t\t}\n\t}\n\n\tclass OutWindow {\n\t\toutStream: OutputStream;\n\t\tbuf: Uint8Array;\n\t\tpos: number;\n\t\tsize: number;\n\t\tisFull: boolean;\n\t\twritePos: number;\n\t\ttotalPos: number;\n\n\t\tconstructor(outStream: OutputStream) {\n\t\t\tthis.outStream = outStream;\n\t\t\tthis.buf = null;\n\t\t\tthis.pos = 0;\n\t\t\tthis.size = 0;\n\t\t\tthis.isFull = false;\n\t\t\tthis.writePos = 0;\n\n\t\t\tthis.totalPos = 0;\n\t\t}\n\n\t\tcreate(dictSize: number): void {\n\t\t\tthis.buf = new Uint8Array(dictSize);\n\t\t\tthis.pos = 0;\n\t\t\tthis.size = dictSize;\n\t\t\tthis.isFull = false;\n\t\t\tthis.writePos = 0;\n\t\t\tthis.totalPos = 0;\n\t\t}\n\n\t\tputByte(b: number): void {\n\t\t\tthis.totalPos++;\n\t\t\tthis.buf[this.pos++] = b;\n\t\t\tif (this.pos === this.size) {\n\t\t\t\tthis.flush();\n\t\t\t\tthis.pos = 0;\n\t\t\t\tthis.isFull = true;\n\t\t\t}\n\t\t}\n\n\t\tgetByte(dist: number): number {\n\t\t\treturn this.buf[dist <= this.pos ? this.pos - dist : this.size - dist + this.pos];\n\t\t}\n\n\t\tflush(): void {\n\t\t\tif (this.writePos < this.pos) {\n\t\t\t\tthis.outStream.writeBytes(this.buf.subarray(this.writePos, this.pos));\n\t\t\t\tthis.writePos = this.pos === this.size ? 0 : this.pos;\n\t\t\t}\n\t\t}\n\n\t\tcopyMatch(dist: number, len: number): void {\n\t\t\tlet pos = this.pos;\n\t\t\tlet size = this.size;\n\t\t\tlet buffer = this.buf;\n\t\t\tlet getPos = dist <= pos ? pos - dist : size - dist + pos;\n\t\t\tlet left = len;\n\t\t\twhile (left > 0) {\n\t\t\t\tlet chunk = Math.min(Math.min(left, size - pos), size - getPos);\n\t\t\t\tfor (let i = 0; i < chunk; i++) {\n\t\t\t\t\tlet b = buffer[getPos++];\n\t\t\t\t\tbuffer[pos++] = b;\n\t\t\t\t}\n\t\t\t\tif (pos === size) {\n\t\t\t\t\tthis.pos = pos;\n\t\t\t\t\tthis.flush();\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tthis.isFull = true;\n\t\t\t\t}\n\t\t\t\tif (getPos === size) {\n\t\t\t\t\tgetPos = 0;\n\t\t\t\t}\n\t\t\t\tleft -= chunk;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t\tthis.totalPos += len;\n\t\t}\n\n\t\tcheckDistance(dist: number): boolean {\n\t\t\treturn dist <= this.pos || this.isFull;\n\t\t}\n\n\t\tisEmpty(): boolean {\n\t\t\treturn this.pos === 0 && !this.isFull;\n\t\t}\n\t}\n\n\tlet kNumBitModelTotalBits = 11;\n\tlet kNumMoveBits = 5;\n\n\tlet PROB_INIT_VAL = ((1 << kNumBitModelTotalBits) >> 1);\n\n\tfunction createProbsArray(length: number): Uint16Array {\n\t\tlet p = new Uint16Array(length);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tp[i] = PROB_INIT_VAL;\n\t\t}\n\t\treturn p;\n\t}\n\n\tlet kTopValue = 1 << 24;\n\n\tclass RangeDecoder {\n\t\tinStream: InputStream;\n\t\trange: number;\n\t\tcode: number;\n\t\tcorrupted: boolean;\n\n\t\tconstructor(inStream: InputStream) {\n\t\t\tthis.inStream = inStream;\n\t\t\tthis.range = 0;\n\t\t\tthis.code = 0;\n\t\t\tthis.corrupted = false;\n\t\t}\n\n\t\tinit(): void {\n\t\t\tif (this.inStream.readByte() !== 0) {\n\t\t\t\tthis.corrupted = true;\n\t\t\t}\n\n\t\t\tthis.range = 0xFFFFFFFF | 0;\n\t\t\tlet code = 0;\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tcode = (code << 8) | this.inStream.readByte();\n\t\t\t}\n\n\t\t\tif (code === this.range) {\n\t\t\t\tthis.corrupted = true;\n\t\t\t}\n\t\t\tthis.code = code;\n\t\t}\n\n\t\tisFinishedOK(): boolean {\n\t\t\treturn this.code === 0;\n\t\t}\n\n\t\tdecodeDirectBits(numBits: number): number {\n\t\t\tlet res = 0;\n\t\t\tlet range = this.range;\n\t\t\tlet code = this.code;\n\t\t\tdo {\n\t\t\t\trange = (range >>> 1) | 0;\n\t\t\t\tcode = (code - range) | 0;\n\t\t\t\tlet t = code >> 31; // if high bit set -1, otherwise 0\n\t\t\t\tcode = (code + (range & t)) | 0;\n\n\t\t\t\tif (code === range) {\n\t\t\t\t\tthis.corrupted = true;\n\t\t\t\t}\n\n\t\t\t\tif (range >= 0 && range < kTopValue) {\n\t\t\t\t\trange = range << 8;\n\t\t\t\t\tcode = (code << 8) | this.inStream.readByte();\n\t\t\t\t}\n\n\t\t\t\tres = ((res << 1) + t + 1) | 0;\n\t\t\t} while (--numBits);\n\t\t\tthis.range = range;\n\t\t\tthis.code = code;\n\t\t\treturn res;\n\t\t}\n\n\t\tdecodeBit(prob: Uint16Array, index: number): number {\n\t\t\tlet range = this.range;\n\t\t\tlet code = this.code;\n\t\t\tlet v = prob[index];\n\t\t\tlet bound = (range >>> kNumBitModelTotalBits) * v; // keep unsigned\n\t\t\tlet symbol;\n\t\t\tif ((code >>> 0) < bound) {\n\t\t\t\tv = (v + (((1 << kNumBitModelTotalBits) - v) >> kNumMoveBits)) | 0;\n\t\t\t\trange = bound | 0;\n\t\t\t\tsymbol = 0;\n\t\t\t} else {\n\t\t\t\tv = (v - (v >> kNumMoveBits)) | 0;\n\t\t\t\tcode = (code - bound) | 0;\n\t\t\t\trange = (range - bound) | 0;\n\t\t\t\tsymbol = 1;\n\t\t\t}\n\t\t\tprob[index] = v & 0xFFFF;\n\n\t\t\tif (range >= 0 && range < kTopValue) {\n\t\t\t\trange = range << 8;\n\t\t\t\tcode = (code << 8) | this.inStream.readByte();\n\t\t\t}\n\t\t\tthis.range = range;\n\t\t\tthis.code = code;\n\n\t\t\treturn symbol;\n\t\t}\n\t}\n\n\tfunction bitTreeReverseDecode(probs: Uint16Array, offset: number,\n\t                              numBits: number, rc: RangeDecoder): number {\n\t\tlet m = 1;\n\t\tlet symbol = 0;\n\t\tfor (let i = 0; i < numBits; i++) {\n\t\t\tlet bit = rc.decodeBit(probs, m + offset);\n\t\t\tm = (m << 1) + bit;\n\t\t\tsymbol |= bit << i;\n\t\t}\n\t\treturn symbol;\n\t}\n\n\tclass BitTreeDecoder {\n\t\tnumBits: number;\n\t\tprobs: Uint16Array;\n\n\t\tconstructor(numBits: number) {\n\t\t\tthis.numBits = numBits;\n\t\t\tthis.probs = createProbsArray(1 << numBits);\n\t\t}\n\n\t\tdecode(rc: RangeDecoder) {\n\t\t\tlet m = 1;\n\t\t\tfor (let i = 0; i < this.numBits; i++) {\n\t\t\t\tm = (m << 1) + rc.decodeBit(this.probs, m);\n\t\t\t}\n\t\t\treturn m - (1 << this.numBits);\n\t\t}\n\n\t\treverseDecode(rc: RangeDecoder) {\n\t\t\treturn bitTreeReverseDecode(this.probs, 0, this.numBits, rc);\n\t\t}\n\t}\n\n\tfunction createBitTreeDecoderArray(numBits: number, length: number): BitTreeDecoder[] {\n\t\tlet p: BitTreeDecoder[] = [];\n\t\tp.length = length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tp[i] = new BitTreeDecoder(numBits);\n\t\t}\n\t\treturn p;\n\t}\n\n\tlet kNumPosBitsMax = 4;\n\n\tlet kNumStates = 12;\n\tlet kNumLenToPosStates = 4;\n\tlet kNumAlignBits = 4;\n\tlet kStartPosModelIndex = 4;\n\tlet kEndPosModelIndex = 14;\n\tlet kNumFullDistances = 1 << (kEndPosModelIndex >> 1);\n\tlet kMatchMinLen = 2;\n\n\tclass LenDecoder {\n\t\tchoice: Uint16Array;\n\t\tlowCoder: BitTreeDecoder[];\n\t\tmidCoder: BitTreeDecoder[];\n\t\thighCoder: BitTreeDecoder;\n\n\t\tconstructor() {\n\t\t\tthis.choice = createProbsArray(2);\n\t\t\tthis.lowCoder = createBitTreeDecoderArray(3, 1 << kNumPosBitsMax);\n\t\t\tthis.midCoder = createBitTreeDecoderArray(3, 1 << kNumPosBitsMax);\n\t\t\tthis.highCoder = new BitTreeDecoder(8);\n\t\t}\n\n\t\tdecode(rc: RangeDecoder, posState: number): number {\n\t\t\tif (rc.decodeBit(this.choice, 0) === 0) {\n\t\t\t\treturn this.lowCoder[posState].decode(rc);\n\t\t\t}\n\t\t\tif (rc.decodeBit(this.choice, 1) === 0) {\n\t\t\t\treturn 8 + this.midCoder[posState].decode(rc);\n\t\t\t}\n\t\t\treturn 16 + this.highCoder.decode(rc);\n\t\t}\n\t}\n\n\tfunction updateState_Literal(state: number): number {\n\t\tif (state < 4) {\n\t\t\treturn 0;\n\t\t} else if (state < 10) {\n\t\t\treturn state - 3;\n\t\t} else {\n\t\t\treturn state - 6;\n\t\t}\n\t}\n\n\tfunction updateState_Match(state: number): number {\n\t\treturn state < 7 ? 7 : 10;\n\t}\n\n\tfunction updateState_Rep(state: number): number {\n\t\treturn state < 7 ? 8 : 11;\n\t}\n\n\tfunction updateState_ShortRep(state: number): number {\n\t\treturn state < 7 ? 9 : 11;\n\t}\n\n\tlet LZMA_DIC_MIN = 1 << 12;\n\n\tlet MAX_DECODE_BITS_CALLS = 48;\n\n\tclass LzmaDecoderInternal {\n\t\trangeDec: RangeDecoder;\n\t\toutWindow: OutWindow;\n\t\tmarkerIsMandatory: boolean;\n\t\tlc: number;\n\t\tpb: number;\n\t\tlp: number;\n\t\tdictSize: number;\n\t\tdictSizeInProperties: number;\n\t\tunpackSize: number;\n\t\tleftToUnpack: number;\n\t\treps: Int32Array;\n\t\tstate: number;\n\n\t\tconstructor(inStream: InputStream, outStream: OutputStream) {\n\t\t\tthis.rangeDec = new RangeDecoder(inStream);\n\t\t\tthis.outWindow = new OutWindow(outStream);\n\n\t\t\tthis.markerIsMandatory = false;\n\t\t\tthis.lc = 0;\n\t\t\tthis.pb = 0;\n\t\t\tthis.lp = 0;\n\t\t\tthis.dictSize = 0;\n\t\t\tthis.dictSizeInProperties = 0;\n\t\t\tthis.unpackSize = undefined;\n\t\t\tthis.leftToUnpack = undefined;\n\n\t\t\tthis.reps = new Int32Array(4);\n\t\t\tthis.state = 0;\n\t\t}\n\n\t\tdecodeProperties(properties: Uint8Array) {\n\t\t\tlet d = properties[0];\n\t\t\tif (d >= (9 * 5 * 5)) {\n\t\t\t\tthrow new Error(\"Incorrect LZMA properties\");\n\t\t\t}\n\t\t\tthis.lc = d % 9;\n\t\t\td = (d / 9) | 0;\n\t\t\tthis.pb = (d / 5) | 0;\n\t\t\tthis.lp = d % 5;\n\t\t\tthis.dictSizeInProperties = 0;\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tthis.dictSizeInProperties |= properties[i + 1] << (8 * i);\n\t\t\t}\n\t\t\tthis.dictSize = this.dictSizeInProperties;\n\t\t\tif (this.dictSize < LZMA_DIC_MIN) {\n\t\t\t\tthis.dictSize = LZMA_DIC_MIN;\n\t\t\t}\n\t\t}\n\n\t\tcreate(): void {\n\t\t\tthis.outWindow.create(this.dictSize);\n\n\t\t\tthis.init();\n\t\t\tthis.rangeDec.init();\n\n\t\t\tthis.reps[0] = 0;\n\t\t\tthis.reps[1] = 0;\n\t\t\tthis.reps[2] = 0;\n\t\t\tthis.reps[3] = 0;\n\t\t\tthis.state = 0;\n\t\t\tthis.leftToUnpack = this.unpackSize;\n\t\t}\n\n\t\tdecodeLiteral(state: number, rep0: number): number {\n\t\t\tlet outWindow = this.outWindow;\n\t\t\tlet rangeDec = this.rangeDec;\n\n\t\t\tlet prevByte = 0;\n\t\t\tif (!outWindow.isEmpty()) {\n\t\t\t\tprevByte = outWindow.getByte(1);\n\t\t\t}\n\n\t\t\tlet symbol = 1;\n\t\t\tlet litState = ((outWindow.totalPos & ((1 << this.lp) - 1)) << this.lc) + (prevByte >> (8 - this.lc));\n\t\t\tlet probsIndex = 0x300 * litState;\n\n\t\t\tif (state >= 7) {\n\t\t\t\tlet matchByte = outWindow.getByte(rep0 + 1);\n\t\t\t\tdo {\n\t\t\t\t\tlet matchBit = (matchByte >> 7) & 1;\n\t\t\t\t\tmatchByte <<= 1;\n\t\t\t\t\tlet bit = rangeDec.decodeBit(this.litProbs, probsIndex + (((1 + matchBit) << 8) + symbol));\n\t\t\t\t\tsymbol = (symbol << 1) | bit;\n\t\t\t\t\tif (matchBit !== bit) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} while (symbol < 0x100);\n\t\t\t}\n\t\t\twhile (symbol < 0x100) {\n\t\t\t\tsymbol =\n\t\t\t\t\t(symbol << 1) | rangeDec.decodeBit(this.litProbs, probsIndex + symbol);\n\t\t\t}\n\t\t\treturn (symbol - 0x100) & 0xFF;\n\t\t}\n\n\t\tdecodeDistance(len: number) {\n\t\t\tlet lenState = len;\n\t\t\tif (lenState > kNumLenToPosStates - 1) {\n\t\t\t\tlenState = kNumLenToPosStates - 1;\n\t\t\t}\n\t\t\tlet rangeDec = this.rangeDec;\n\t\t\tlet posSlot = this.posSlotDecoder[lenState].decode(rangeDec);\n\t\t\tif (posSlot < 4) {\n\t\t\t\treturn posSlot;\n\t\t\t}\n\t\t\tlet numDirectBits = (posSlot >> 1) - 1;\n\t\t\tlet dist = (2 | (posSlot & 1)) << numDirectBits;\n\t\t\tif (posSlot < kEndPosModelIndex) {\n\t\t\t\tdist =\n\t\t\t\t\t(dist + bitTreeReverseDecode(this.posDecoders, dist - posSlot, numDirectBits, rangeDec)) | 0;\n\t\t\t} else {\n\t\t\t\tdist =\n\t\t\t\t\t(dist + (rangeDec.decodeDirectBits(numDirectBits - kNumAlignBits) << kNumAlignBits)) | 0;\n\t\t\t\tdist = (dist + this.alignDecoder.reverseDecode(rangeDec)) | 0;\n\t\t\t}\n\t\t\treturn dist;\n\t\t}\n\n\t\tlitProbs: Uint16Array;\n\t\tposSlotDecoder: BitTreeDecoder[];\n\t\talignDecoder: BitTreeDecoder;\n\t\tposDecoders: Uint16Array;\n\t\tisMatch: Uint16Array;\n\t\tisRep: Uint16Array;\n\t\tisRepG0: Uint16Array;\n\t\tisRepG1: Uint16Array;\n\t\tisRepG2: Uint16Array;\n\t\tisRep0Long: Uint16Array;\n\t\tlenDecoder: LenDecoder;\n\t\trepLenDecoder: LenDecoder;\n\n\t\tinit() {\n\t\t\tthis.litProbs = createProbsArray(0x300 << (this.lc + this.lp));\n\n\t\t\tthis.posSlotDecoder = createBitTreeDecoderArray(6, kNumLenToPosStates);\n\t\t\tthis.alignDecoder = new BitTreeDecoder(kNumAlignBits);\n\t\t\tthis.posDecoders =\n\t\t\t\tcreateProbsArray(1 + kNumFullDistances - kEndPosModelIndex);\n\n\t\t\tthis.isMatch = createProbsArray(kNumStates << kNumPosBitsMax);\n\t\t\tthis.isRep = createProbsArray(kNumStates);\n\t\t\tthis.isRepG0 = createProbsArray(kNumStates);\n\t\t\tthis.isRepG1 = createProbsArray(kNumStates);\n\t\t\tthis.isRepG2 = createProbsArray(kNumStates);\n\t\t\tthis.isRep0Long = createProbsArray(kNumStates << kNumPosBitsMax);\n\n\t\t\tthis.lenDecoder = new LenDecoder();\n\t\t\tthis.repLenDecoder = new LenDecoder();\n\t\t}\n\n\t\tdecode(notFinal: boolean): number {\n\t\t\tlet rangeDec = this.rangeDec;\n\t\t\tlet outWindow = this.outWindow;\n\t\t\tlet pb = this.pb;\n\t\t\tlet dictSize = this.dictSize;\n\t\t\tlet markerIsMandatory = this.markerIsMandatory;\n\t\t\tlet leftToUnpack = this.leftToUnpack;\n\n\t\t\tlet isMatch = this.isMatch;\n\t\t\tlet isRep = this.isRep;\n\t\t\tlet isRepG0 = this.isRepG0;\n\t\t\tlet isRepG1 = this.isRepG1;\n\t\t\tlet isRepG2 = this.isRepG2;\n\t\t\tlet isRep0Long = this.isRep0Long;\n\t\t\tlet lenDecoder = this.lenDecoder;\n\t\t\tlet repLenDecoder = this.repLenDecoder;\n\n\t\t\tlet rep0 = this.reps[0];\n\t\t\tlet rep1 = this.reps[1];\n\t\t\tlet rep2 = this.reps[2];\n\t\t\tlet rep3 = this.reps[3];\n\t\t\tlet state = this.state;\n\n\t\t\twhile (true) {\n\t\t\t\t// Based on worse case scenario one byte consumed per decodeBit calls,\n\t\t\t\t// reserving keeping some amount of bytes in the input stream for\n\t\t\t\t// non-final data blocks.\n\t\t\t\tif (notFinal && rangeDec.inStream.available < MAX_DECODE_BITS_CALLS) {\n\t\t\t\t\tthis.outWindow.flush();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (leftToUnpack === 0 && !markerIsMandatory) {\n\t\t\t\t\tthis.outWindow.flush();\n\t\t\t\t\tif (rangeDec.isFinishedOK()) {\n\t\t\t\t\t\treturn LZMA_RES_FINISHED_WITHOUT_MARKER;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet posState = outWindow.totalPos & ((1 << pb) - 1);\n\n\t\t\t\tif (rangeDec.decodeBit(isMatch, (state << kNumPosBitsMax) + posState) === 0) {\n\t\t\t\t\tif (leftToUnpack === 0) {\n\t\t\t\t\t\treturn LZMA_RES_ERROR;\n\t\t\t\t\t}\n\t\t\t\t\toutWindow.putByte(this.decodeLiteral(state, rep0));\n\t\t\t\t\tstate = updateState_Literal(state);\n\t\t\t\t\tleftToUnpack--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet len;\n\t\t\t\tif (rangeDec.decodeBit(isRep, state) !== 0) {\n\t\t\t\t\tif (leftToUnpack === 0) {\n\t\t\t\t\t\treturn LZMA_RES_ERROR;\n\t\t\t\t\t}\n\t\t\t\t\tif (outWindow.isEmpty()) {\n\t\t\t\t\t\treturn LZMA_RES_ERROR;\n\t\t\t\t\t}\n\t\t\t\t\tif (rangeDec.decodeBit(isRepG0, state) === 0) {\n\t\t\t\t\t\tif (rangeDec.decodeBit(isRep0Long, (state << kNumPosBitsMax) + posState) === 0) {\n\t\t\t\t\t\t\tstate = updateState_ShortRep(state);\n\t\t\t\t\t\t\toutWindow.putByte(outWindow.getByte(rep0 + 1));\n\t\t\t\t\t\t\tleftToUnpack--;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet dist;\n\t\t\t\t\t\tif (rangeDec.decodeBit(isRepG1, state) === 0) {\n\t\t\t\t\t\t\tdist = rep1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (rangeDec.decodeBit(isRepG2, state) === 0) {\n\t\t\t\t\t\t\t\tdist = rep2;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdist = rep3;\n\t\t\t\t\t\t\t\trep3 = rep2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trep2 = rep1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trep1 = rep0;\n\t\t\t\t\t\trep0 = dist;\n\t\t\t\t\t}\n\t\t\t\t\tlen = repLenDecoder.decode(rangeDec, posState);\n\t\t\t\t\tstate = updateState_Rep(state);\n\t\t\t\t} else {\n\t\t\t\t\trep3 = rep2;\n\t\t\t\t\trep2 = rep1;\n\t\t\t\t\trep1 = rep0;\n\t\t\t\t\tlen = lenDecoder.decode(rangeDec, posState);\n\t\t\t\t\tstate = updateState_Match(state);\n\t\t\t\t\trep0 = this.decodeDistance(len);\n\t\t\t\t\tif (rep0 === -1) {\n\t\t\t\t\t\tthis.outWindow.flush();\n\t\t\t\t\t\treturn rangeDec.isFinishedOK() ?\n\t\t\t\t\t\t\tLZMA_RES_FINISHED_WITH_MARKER :\n\t\t\t\t\t\t\tLZMA_RES_ERROR;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (leftToUnpack === 0) {\n\t\t\t\t\t\treturn LZMA_RES_ERROR;\n\t\t\t\t\t}\n\t\t\t\t\tif (rep0 >= dictSize || !outWindow.checkDistance(rep0)) {\n\t\t\t\t\t\treturn LZMA_RES_ERROR;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlen += kMatchMinLen;\n\t\t\t\tlet isError = false;\n\t\t\t\tif (leftToUnpack !== undefined && leftToUnpack < len) {\n\t\t\t\t\tlen = leftToUnpack;\n\t\t\t\t\tisError = true;\n\t\t\t\t}\n\t\t\t\toutWindow.copyMatch(rep0 + 1, len);\n\t\t\t\tleftToUnpack -= len;\n\t\t\t\tif (isError) {\n\t\t\t\t\treturn LZMA_RES_ERROR;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.state = state;\n\t\t\tthis.reps[0] = rep0;\n\t\t\tthis.reps[1] = rep1;\n\t\t\tthis.reps[2] = rep2;\n\t\t\tthis.reps[3] = rep3;\n\t\t\tthis.leftToUnpack = leftToUnpack;\n\t\t\treturn LZMA_RES_NOT_COMPLETE;\n\t\t}\n\n\t\tflushOutput(): void {\n\t\t\tthis.outWindow.flush();\n\t\t}\n\t}\n\n\tlet LZMA_RES_ERROR = 0;\n\tlet LZMA_RES_FINISHED_WITH_MARKER = 1;\n\tlet LZMA_RES_FINISHED_WITHOUT_MARKER = 2;\n\tlet LZMA_RES_NOT_COMPLETE = 3;\n\n\tlet SWF_LZMA_HEADER_LENGTH = 17;\n\tlet STANDARD_LZMA_HEADER_LENGTH = 13;\n\tlet EXTRA_LZMA_BYTES_NEEDED = 5;\n\n\tenum LzmaDecoderState {\n\t\tWAIT_FOR_LZMA_HEADER = 0,\n\t\tWAIT_FOR_SWF_HEADER = 1,\n\t\tPROCESS_DATA = 2,\n\t\tCLOSED = 3,\n\t\tERROR = 4\n\t}\n\n\texport class LzmaDecoder implements IDataDecoder {\n\t\tpublic onData: (data: Uint8Array) => void;\n\t\tpublic onError: (e: any) => void;\n\t\tprivate _state: LzmaDecoderState;\n\t\tbuffer: Uint8Array;\n\t\tprivate _inStream: InputStream;\n\t\tprivate _outStream: OutputStream;\n\t\tprivate _decoder: LzmaDecoderInternal;\n\n\t\tconstructor(swfHeader: boolean = false) {\n\t\t\tthis._state = swfHeader ? LzmaDecoderState.WAIT_FOR_SWF_HEADER :\n\t\t\t\tLzmaDecoderState.WAIT_FOR_LZMA_HEADER;\n\t\t\tthis.buffer = null;\n\t\t}\n\n\t\tpublic push(data: Uint8Array) {\n\t\t\tif (this._state < LzmaDecoderState.PROCESS_DATA) {\n\t\t\t\tlet buffered = this.buffer ? this.buffer.length : 0;\n\t\t\t\tlet headerBytesExpected =\n\t\t\t\t\t(this._state === LzmaDecoderState.WAIT_FOR_SWF_HEADER ?\n\t\t\t\t\t\tSWF_LZMA_HEADER_LENGTH : STANDARD_LZMA_HEADER_LENGTH) +\n\t\t\t\t\tEXTRA_LZMA_BYTES_NEEDED;\n\t\t\t\tif (buffered + data.length < headerBytesExpected) {\n\t\t\t\t\tlet newBuffer = new Uint8Array(buffered + data.length);\n\t\t\t\t\tif (buffered > 0) {\n\t\t\t\t\t\tnewBuffer.set(this.buffer);\n\t\t\t\t\t}\n\t\t\t\t\tnewBuffer.set(data, buffered);\n\t\t\t\t\tthis.buffer = newBuffer;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet header = new Uint8Array(headerBytesExpected);\n\t\t\t\tif (buffered > 0) {\n\t\t\t\t\theader.set(this.buffer);\n\t\t\t\t}\n\t\t\t\theader.set(data.subarray(0, headerBytesExpected - buffered), buffered);\n\n\t\t\t\tthis._inStream = new InputStream();\n\t\t\t\tthis._inStream.append(header.subarray(headerBytesExpected - EXTRA_LZMA_BYTES_NEEDED));\n\n\t\t\t\tthis._outStream = new OutputStream(function (data: any) {\n\t\t\t\t\tthis.onData.call(null, data);\n\t\t\t\t}.bind(this));\n\n\t\t\t\tthis._decoder = new LzmaDecoderInternal(this._inStream, this._outStream);\n\t\t\t\t// See http://helpx.adobe.com/flash-player/kb/exception-thrown-you-decompress-lzma-compressed.html\n\t\t\t\tif (this._state === LzmaDecoderState.WAIT_FOR_SWF_HEADER) {\n\t\t\t\t\tthis._decoder.decodeProperties(header.subarray(12, 17));\n\t\t\t\t\tthis._decoder.markerIsMandatory = false;\n\t\t\t\t\tthis._decoder.unpackSize = ((header[4] | (header[5] << 8) |\n\t\t\t\t\t\t(header[6] << 16) | (header[7] << 24)) >>> 0) - 8;\n\t\t\t\t} else {\n\t\t\t\t\tthis._decoder.decodeProperties(header.subarray(0, 5));\n\t\t\t\t\tlet unpackSize = 0;\n\t\t\t\t\tlet unpackSizeDefined = false;\n\t\t\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\t\t\tlet b = header[5 + i];\n\t\t\t\t\t\tif (b !== 0xFF) {\n\t\t\t\t\t\t\tunpackSizeDefined = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tunpackSize |= b << (8 * i);\n\t\t\t\t\t}\n\t\t\t\t\tthis._decoder.markerIsMandatory = !unpackSizeDefined;\n\t\t\t\t\tthis._decoder.unpackSize = unpackSizeDefined ? unpackSize : undefined;\n\t\t\t\t}\n\t\t\t\tthis._decoder.create();\n\n\t\t\t\tdata = data.subarray(headerBytesExpected);\n\t\t\t\tthis._state = LzmaDecoderState.PROCESS_DATA;\n\t\t\t} else if (this._state !== LzmaDecoderState.PROCESS_DATA) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis._inStream.append(data);\n\t\t\t\tlet res = this._decoder.decode(true);\n\t\t\t\tthis._inStream.compact();\n\n\t\t\t\tif (res !== LZMA_RES_NOT_COMPLETE) {\n\t\t\t\t\tthis._checkError(res);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis._decoder.flushOutput();\n\t\t\t\tthis._decoder = null;\n\t\t\t\tthis._error(e);\n\t\t\t}\n\t\t}\n\n\t\tpublic close() {\n\t\t\tif (this._state !== LzmaDecoderState.PROCESS_DATA) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._state = LzmaDecoderState.CLOSED;\n\t\t\ttry {\n\t\t\t\tlet res = this._decoder.decode(false);\n\t\t\t\tthis._checkError(res);\n\t\t\t} catch (e) {\n\t\t\t\tthis._decoder.flushOutput();\n\t\t\t\tthis._error(e);\n\t\t\t}\n\t\t\tthis._decoder = null;\n\t\t}\n\n\t\tprivate _error(error: any) {\n\t\t\t// Stopping processing any data if an error occurs.\n\t\t\tthis._state = LzmaDecoderState.ERROR;\n\t\t\tif (this.onError) {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\t\t}\n\n\t\tprivate _checkError(res: any) {\n\t\t\tlet error;\n\t\t\tif (res === LZMA_RES_ERROR) {\n\t\t\t\terror = \"LZMA decoding error\";\n\t\t\t} else if (res === LZMA_RES_NOT_COMPLETE) {\n\t\t\t\terror = \"Decoding is not complete\";\n\t\t\t} else if (res === LZMA_RES_FINISHED_WITH_MARKER) {\n\t\t\t\tif (this._decoder.unpackSize !== undefined &&\n\t\t\t\t\tthis._decoder.unpackSize !== this._outStream.processed) {\n\t\t\t\t\terror = \"Finished with end marker before than specified size\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\terror = \"Internal LZMA Error\";\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\tthis._error(error);\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path='references.ts' />\nmodule Shumway.ArrayUtilities {\n\timport notImplemented = Shumway.Debug.notImplemented;\n\timport assert = Shumway.Debug.assert;\n\n\timport utf8decode = Shumway.StringUtilities.utf8decode;\n\timport utf8encode = Shumway.StringUtilities.utf8encode;\n\timport clamp = Shumway.NumberUtilities.clamp;\n\timport swap16 = Shumway.IntegerUtilities.swap16;\n\timport swap32 = Shumway.IntegerUtilities.swap32;\n\timport floatToInt32 = Shumway.IntegerUtilities.floatToInt32;\n\timport int32ToFloat = Shumway.IntegerUtilities.int32ToFloat;\n\n\tfunction axCoerceString(x: any): string {\n\t\tif (typeof x === \"string\") {\n\t\t\treturn x;\n\t\t} else if (x == undefined) {\n\t\t\treturn null;\n\t\t}\n\t\treturn x + '';\n\t}\n\n\texport interface IDataInput {\n\t\treadBytes: (bytes: DataBuffer, offset?: number /*uint*/, length?: number /*uint*/) => void;\n\t\treadBoolean: () => boolean;\n\t\treadByte: () => number\n\t\t/*int*/\n\t\t;\n\t\treadUnsignedByte: () => number\n\t\t/*uint*/\n\t\t;\n\t\treadShort: () => number\n\t\t/*int*/\n\t\t;\n\t\treadUnsignedShort: () => number\n\t\t/*uint*/\n\t\t;\n\t\treadInt: () => number\n\t\t/*int*/\n\t\t;\n\t\treadUnsignedInt: () => number\n\t\t/*uint*/\n\t\t;\n\t\treadFloat: () => number;\n\t\treadDouble: () => number;\n\t\treadMultiByte: (length: number /*uint*/, charSet: string) => string;\n\t\treadUTF: () => string;\n\t\treadUTFBytes: (length: number /*uint*/) => string;\n\t\tbytesAvailable: number\n\t\t/*uint*/\n\t\t;\n\t\tobjectEncoding: number\n\t\t/*uint*/\n\t\t;\n\t\tendian: string;\n\t}\n\n\texport interface IDataOutput {\n\t\twriteBytes: (bytes: DataBuffer, offset?: number /*uint*/, length?: number /*uint*/) => void;\n\t\twriteBoolean: (value: boolean) => void;\n\t\twriteByte: (value: number /*int*/) => void;\n\t\twriteShort: (value: number /*int*/) => void;\n\t\twriteInt: (value: number /*int*/) => void;\n\t\twriteUnsignedInt: (value: number /*uint*/) => void;\n\t\twriteFloat: (value: number) => void;\n\t\twriteDouble: (value: number) => void;\n\t\twriteMultiByte: (value: string, charSet: string) => void;\n\t\twriteUTF: (value: string) => void;\n\t\twriteUTFBytes: (value: string) => void;\n\t\tobjectEncoding: number\n\t\t/*uint*/\n\t\t;\n\t\tendian: string;\n\t}\n\n\texport class PlainObjectDataBuffer {\n\t\tconstructor(public buffer: ArrayBuffer, public length: number, public littleEndian: boolean) {\n\t\t}\n\t}\n\n\tlet bitMasks = new Uint32Array(33);\n\tfor (let i = 1, mask = 0; i <= 32; i++) {\n\t\tbitMasks[i] = mask = (mask << 1) | 1;\n\t}\n\n\tenum TypedArrayViewFlags {\n\t\tU8 = 1,\n\t\tI32 = 2,\n\t\tF32 = 4\n\t}\n\n\texport class DataBuffer implements IDataInput, IDataOutput {\n\t\tprivate static _nativeLittleEndian = new Int8Array(new Int32Array([1]).buffer)[0] === 1;\n\n\t\t/* The initial size of the backing, in bytes. Doubled every OOM. */\n\t\tprivate static INITIAL_SIZE = 128;\n\n\t\tprivate _buffer: ArrayBuffer;\n\t\tprivate _length: number;\n\t\tprivate _position: number;\n\t\tprivate _littleEndian: boolean;\n\t\tprivate _objectEncoding: number;\n\t\tprivate _u8: Uint8Array;\n\t\tprivate _i32: Int32Array;\n\t\tprivate _f32: Float32Array;\n\n\t\tprivate _bitBuffer: number;\n\t\tprivate _bitLength: number;\n\n\t\tprivate static _arrayBufferPool = new ArrayBufferPool();\n\n\t\tconstructor(initialSize: number = DataBuffer.INITIAL_SIZE) {\n\t\t\t// If we're constructing a child class of DataBuffer (or ByteArray), buffer initialization\n\t\t\t// has already happened at this point.\n\t\t\tif (this._buffer) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._buffer = new ArrayBuffer(initialSize);\n\t\t\tthis._length = 0;\n\t\t\tthis._position = 0;\n\t\t\tthis._resetViews();\n\t\t\tthis._littleEndian = DataBuffer._nativeLittleEndian;\n\t\t\tthis._bitBuffer = 0;\n\t\t\tthis._bitLength = 0;\n\t\t}\n\n\t\tstatic FromArrayBuffer(buffer: ArrayBuffer, length: number = -1): DataBuffer {\n\t\t\tlet dataBuffer: DataBuffer = Object.create(DataBuffer.prototype);\n\t\t\tdataBuffer._buffer = buffer;\n\t\t\tdataBuffer._length = length === -1 ? buffer.byteLength : length;\n\t\t\tdataBuffer._position = 0;\n\t\t\tdataBuffer._resetViews();\n\t\t\tdataBuffer._littleEndian = DataBuffer._nativeLittleEndian;\n\t\t\tdataBuffer._bitBuffer = 0;\n\t\t\tdataBuffer._bitLength = 0;\n\t\t\treturn dataBuffer;\n\t\t}\n\n\t\tstatic FromPlainObject(source: PlainObjectDataBuffer): DataBuffer {\n\t\t\tlet dataBuffer = DataBuffer.FromArrayBuffer(source.buffer, source.length);\n\t\t\tdataBuffer._littleEndian = source.littleEndian;\n\t\t\treturn dataBuffer;\n\t\t}\n\n\t\ttoPlainObject(): PlainObjectDataBuffer {\n\t\t\treturn new PlainObjectDataBuffer(this._buffer, this._length, this._littleEndian);\n\t\t}\n\n\t\t/**\n\t\t * Clone the DataBuffer in a way that guarantees the underlying ArrayBuffer to be copied\n\t\t * into an instance of the current global's ArrayBuffer.\n\t\t *\n\t\t * Important if the underlying buffer comes from a different global, in which case accessing\n\t\t * its elements is excruiciatingly slow.\n\t\t */\n\t\tclone(): DataBuffer {\n\t\t\tlet clone = DataBuffer.FromArrayBuffer(new Uint8Array(this._u8).buffer, this._length);\n\t\t\tclone._position = this._position;\n\t\t\tclone._littleEndian = this._littleEndian;\n\t\t\tclone._bitBuffer = this._bitBuffer;\n\t\t\tclone._bitLength = this._bitLength;\n\t\t\treturn clone;\n\t\t}\n\n\t\t/**\n\t\t * By default, we only have a byte view. All other views are |null|.\n\t\t */\n\t\tprivate _resetViews() {\n\t\t\tthis._u8 = new Uint8Array(this._buffer);\n\t\t\tthis._i32 = null;\n\t\t\tthis._f32 = null;\n\t\t}\n\n\t\t/**\n\t\t * We don't want to eagerly allocate views if we won't ever need them. You must call this method\n\t\t * before using a view of a certain type to make sure it's available. Once a view is allocated,\n\t\t * it is not re-allocated unless the view becomes |null| as a result of a call to |resetViews|.\n\t\t */\n\t\tprivate _requestViews(flags: TypedArrayViewFlags) {\n\t\t\tif ((this._buffer.byteLength & 0x3) === 0) {\n\t\t\t\tif (this._i32 === null && flags & TypedArrayViewFlags.I32) {\n\t\t\t\t\tthis._i32 = new Int32Array(this._buffer);\n\t\t\t\t}\n\t\t\t\tif (this._f32 === null && flags & TypedArrayViewFlags.F32) {\n\t\t\t\t\tthis._f32 = new Float32Array(this._buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgetBytes(): Uint8Array {\n\t\t\treturn new Uint8Array(this._buffer, 0, this._length);\n\t\t}\n\n\t\tprivate _ensureCapacity(length: number) {\n\t\t\tlet currentBuffer = this._buffer;\n\t\t\tif (currentBuffer.byteLength >= length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet newLength = Math.max(currentBuffer.byteLength, 1);\n\t\t\twhile (newLength < length) {\n\t\t\t\tnewLength *= 2;\n\t\t\t}\n\t\t\tif (newLength > 0xFFFFFFFF) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('RangeError', Errors.ParamRangeError);\n\t\t\t}\n\t\t\tlet newBuffer = DataBuffer._arrayBufferPool.acquire(newLength);\n\t\t\tlet curentView = this._u8;\n\t\t\tthis._buffer = newBuffer;\n\t\t\tthis._resetViews();\n\t\t\tthis._u8.set(curentView);\n\t\t\tlet u8 = this._u8;\n\t\t\t// Zero out the rest of the buffer, since the arrayBufferPool doesn't\n\t\t\t// always give us a empty buffer.\n\t\t\tfor (let i = curentView.length; i < u8.length; i++) {\n\t\t\t\tu8[i] = 0;\n\t\t\t}\n\t\t\tDataBuffer._arrayBufferPool.release(currentBuffer);\n\t\t}\n\n\t\tclear() {\n\t\t\tthis._length = 0;\n\t\t\tthis._position = 0;\n\t\t}\n\n\t\treadBoolean(): boolean {\n\t\t\treturn this.readUnsignedByte() !== 0;\n\t\t}\n\n\t\treadByte(): number /*int*/ {\n\t\t\treturn this.readUnsignedByte() << 24 >> 24;\n\t\t}\n\n\t\treadUnsignedByte(): number /*uint*/ {\n\t\t\tif (this._position + 1 > this._length) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t}\n\t\t\treturn this._u8[this._position++];\n\t\t}\n\n\t\treadBytes(bytes: DataBuffer, offset?: number /*uint*/, length?: number /*uint*/): void {\n\t\t\tlet position = this._position;\n\t\t\toffset = offset >>> 0;\n\t\t\tlength = length >>> 0;\n\t\t\tif (length === 0) {\n\t\t\t\tlength = this._length - position;\n\t\t\t}\n\t\t\tif (position + length > this._length) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t}\n\t\t\tif (bytes.length < offset + length) {\n\t\t\t\tbytes._ensureCapacity(offset + length);\n\t\t\t\tbytes.length = offset + length;\n\t\t\t}\n\t\t\tbytes._u8.set(new Uint8Array(this._buffer, position, length), offset);\n\t\t\tthis._position += length;\n\t\t}\n\n\t\treadShort(): number /*int*/ {\n\t\t\treturn this.readUnsignedShort() << 16 >> 16;\n\t\t}\n\n\t\treadUnsignedShort(): number /*uint*/ {\n\t\t\tlet u8 = this._u8;\n\t\t\tlet position = this._position;\n\t\t\tif (position + 2 > this._length) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t}\n\t\t\tlet a = u8[position + 0];\n\t\t\tlet b = u8[position + 1];\n\t\t\tthis._position = position + 2;\n\t\t\treturn this._littleEndian ? (b << 8) | a : (a << 8) | b;\n\t\t}\n\n\t\treadInt(): number /*int*/ {\n\t\t\tlet u8 = this._u8;\n\t\t\tlet position = this._position;\n\t\t\tif (position + 4 > this._length) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t}\n\t\t\tlet a = u8[position + 0];\n\t\t\tlet b = u8[position + 1];\n\t\t\tlet c = u8[position + 2];\n\t\t\tlet d = u8[position + 3];\n\t\t\tthis._position = position + 4;\n\t\t\treturn this._littleEndian ?\n\t\t\t\t(d << 24) | (c << 16) | (b << 8) | a :\n\t\t\t\t(a << 24) | (b << 16) | (c << 8) | d;\n\t\t}\n\n\t\treadUnsignedInt(): number /*uint*/ {\n\t\t\treturn this.readInt() >>> 0;\n\t\t}\n\n\t\treadFloat(): number {\n\t\t\tlet position = this._position;\n\t\t\tif (position + 4 > this._length) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t}\n\t\t\tthis._position = position + 4;\n\t\t\tthis._requestViews(TypedArrayViewFlags.F32);\n\t\t\tif (this._littleEndian && (position & 0x3) === 0 && this._f32) {\n\t\t\t\treturn this._f32[position >> 2];\n\t\t\t} else {\n\t\t\t\tlet u8 = this._u8;\n\t\t\t\tlet t8 = IntegerUtilities.u8;\n\t\t\t\tif (this._littleEndian) {\n\t\t\t\t\tt8[0] = u8[position + 0];\n\t\t\t\t\tt8[1] = u8[position + 1];\n\t\t\t\t\tt8[2] = u8[position + 2];\n\t\t\t\t\tt8[3] = u8[position + 3];\n\t\t\t\t} else {\n\t\t\t\t\tt8[3] = u8[position + 0];\n\t\t\t\t\tt8[2] = u8[position + 1];\n\t\t\t\t\tt8[1] = u8[position + 2];\n\t\t\t\t\tt8[0] = u8[position + 3];\n\t\t\t\t}\n\t\t\t\treturn IntegerUtilities.f32[0];\n\t\t\t}\n\t\t}\n\n\t\treadDouble(): number {\n\t\t\tlet u8 = this._u8;\n\t\t\tlet position = this._position;\n\t\t\tif (position + 8 > this._length) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t}\n\t\t\tlet t8 = IntegerUtilities.u8;\n\t\t\tif (this._littleEndian) {\n\t\t\t\tt8[0] = u8[position + 0];\n\t\t\t\tt8[1] = u8[position + 1];\n\t\t\t\tt8[2] = u8[position + 2];\n\t\t\t\tt8[3] = u8[position + 3];\n\t\t\t\tt8[4] = u8[position + 4];\n\t\t\t\tt8[5] = u8[position + 5];\n\t\t\t\tt8[6] = u8[position + 6];\n\t\t\t\tt8[7] = u8[position + 7];\n\t\t\t} else {\n\t\t\t\tt8[0] = u8[position + 7];\n\t\t\t\tt8[1] = u8[position + 6];\n\t\t\t\tt8[2] = u8[position + 5];\n\t\t\t\tt8[3] = u8[position + 4];\n\t\t\t\tt8[4] = u8[position + 3];\n\t\t\t\tt8[5] = u8[position + 2];\n\t\t\t\tt8[6] = u8[position + 1];\n\t\t\t\tt8[7] = u8[position + 0];\n\t\t\t}\n\t\t\tthis._position = position + 8;\n\t\t\treturn IntegerUtilities.f64[0];\n\t\t}\n\n\t\twriteBoolean(value: boolean): void {\n\t\t\tthis.writeByte(!!value ? 1 : 0);\n\t\t}\n\n\t\twriteByte(value: number /*int*/): void {\n\t\t\tlet length = this._position + 1;\n\t\t\tthis._ensureCapacity(length);\n\t\t\tthis._u8[this._position++] = value;\n\t\t\tif (length > this._length) {\n\t\t\t\tthis._length = length;\n\t\t\t}\n\t\t}\n\n\t\twriteUnsignedByte(value: number /*uint*/): void {\n\t\t\tlet length = this._position + 1;\n\t\t\tthis._ensureCapacity(length);\n\t\t\tthis._u8[this._position++] = value;\n\t\t\tif (length > this._length) {\n\t\t\t\tthis._length = length;\n\t\t\t}\n\t\t}\n\n\t\twriteRawBytes(bytes: Uint8Array): void {\n\t\t\tlet length = this._position + bytes.length;\n\t\t\tthis._ensureCapacity(length);\n\t\t\tthis._u8.set(bytes, this._position);\n\t\t\tthis._position = length;\n\t\t\tif (length > this._length) {\n\t\t\t\tthis._length = length;\n\t\t\t}\n\t\t}\n\n\t\twriteBytes(bytes: DataBuffer, offset?: number /*uint*/, length?: number /*uint*/): void {\n\t\t\tif (isNullOrUndefined(bytes)) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('TypeError', Errors.NullPointerError, 'bytes');\n\t\t\t}\n\t\t\toffset = offset >>> 0;\n\t\t\tlength = length >>> 0;\n\t\t\tif (arguments.length < 2) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\t\t\tif (arguments.length < 3) {\n\t\t\t\tlength = 0;\n\t\t\t}\n\t\t\tif (offset !== clamp(offset, 0, bytes.length) ||\n\t\t\t\toffset + length !== clamp(offset + length, 0, bytes.length)) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('RangeError', Errors.ParamRangeError);\n\t\t\t}\n\t\t\tif (length === 0) {\n\t\t\t\tlength = bytes.length - offset;\n\t\t\t}\n\t\t\tthis.writeRawBytes(new Int8Array(bytes._buffer, offset, length));\n\t\t}\n\n\t\twriteShort(value: number /*int*/): void {\n\t\t\tthis.writeUnsignedShort(value);\n\t\t}\n\n\t\twriteUnsignedShort(value: number /*uint*/): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 2);\n\t\t\tlet u8 = this._u8;\n\t\t\tif (this._littleEndian) {\n\t\t\t\tu8[position + 0] = value;\n\t\t\t\tu8[position + 1] = value >> 8;\n\t\t\t} else {\n\t\t\t\tu8[position + 0] = value >> 8;\n\t\t\t\tu8[position + 1] = value;\n\t\t\t}\n\t\t\tposition += 2;\n\t\t\tthis._position = position;\n\t\t\tif (position > this._length) {\n\t\t\t\tthis._length = position;\n\t\t\t}\n\t\t}\n\n\t\twriteInt(value: number /*int*/): void {\n\t\t\tthis.writeUnsignedInt(value);\n\t\t}\n\n\t\twrite2Ints(a: number, b: number): void {\n\t\t\tthis.write2UnsignedInts(a, b);\n\t\t}\n\n\t\twrite4Ints(a: number, b: number, c: number, d: number): void {\n\t\t\tthis.write4UnsignedInts(a, b, c, d);\n\t\t}\n\n\t\twriteUnsignedInt(value: number /*uint*/): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 4);\n\t\t\tthis._requestViews(TypedArrayViewFlags.I32);\n\t\t\tif (this._littleEndian === DataBuffer._nativeLittleEndian && (position & 0x3) === 0 && this._i32) {\n\t\t\t\tthis._i32[position >> 2] = value;\n\t\t\t} else {\n\t\t\t\tlet u8 = this._u8;\n\t\t\t\tif (this._littleEndian) {\n\t\t\t\t\tu8[position + 0] = value;\n\t\t\t\t\tu8[position + 1] = value >> 8;\n\t\t\t\t\tu8[position + 2] = value >> 16;\n\t\t\t\t\tu8[position + 3] = value >> 24;\n\t\t\t\t} else {\n\t\t\t\t\tu8[position + 0] = value >> 24;\n\t\t\t\t\tu8[position + 1] = value >> 16;\n\t\t\t\t\tu8[position + 2] = value >> 8;\n\t\t\t\t\tu8[position + 3] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tposition += 4;\n\t\t\tthis._position = position;\n\t\t\tif (position > this._length) {\n\t\t\t\tthis._length = position;\n\t\t\t}\n\t\t}\n\n\t\twrite2UnsignedInts(a: number, b: number): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 8);\n\t\t\tthis._requestViews(TypedArrayViewFlags.I32);\n\t\t\tif (this._littleEndian === DataBuffer._nativeLittleEndian && (position & 0x3) === 0 && this._i32) {\n\t\t\t\tthis._i32[(position >> 2) + 0] = a;\n\t\t\t\tthis._i32[(position >> 2) + 1] = b;\n\t\t\t\tposition += 8;\n\t\t\t\tthis._position = position;\n\t\t\t\tif (position > this._length) {\n\t\t\t\t\tthis._length = position;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeUnsignedInt(a);\n\t\t\t\tthis.writeUnsignedInt(b);\n\t\t\t}\n\t\t}\n\n\t\twrite4UnsignedInts(a: number, b: number, c: number, d: number): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 16);\n\t\t\tthis._requestViews(TypedArrayViewFlags.I32);\n\t\t\tif (this._littleEndian === DataBuffer._nativeLittleEndian && (position & 0x3) === 0 && this._i32) {\n\t\t\t\tthis._i32[(position >> 2) + 0] = a;\n\t\t\t\tthis._i32[(position >> 2) + 1] = b;\n\t\t\t\tthis._i32[(position >> 2) + 2] = c;\n\t\t\t\tthis._i32[(position >> 2) + 3] = d;\n\t\t\t\tposition += 16;\n\t\t\t\tthis._position = position;\n\t\t\t\tif (position > this._length) {\n\t\t\t\t\tthis._length = position;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeUnsignedInt(a);\n\t\t\t\tthis.writeUnsignedInt(b);\n\t\t\t\tthis.writeUnsignedInt(c);\n\t\t\t\tthis.writeUnsignedInt(d);\n\t\t\t}\n\t\t}\n\n\t\twriteFloat(value: number): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 4);\n\t\t\tthis._requestViews(TypedArrayViewFlags.F32);\n\t\t\tif (this._littleEndian === DataBuffer._nativeLittleEndian && (position & 0x3) === 0 && this._f32) {\n\t\t\t\tthis._f32[position >> 2] = value;\n\t\t\t} else {\n\t\t\t\tlet u8 = this._u8;\n\t\t\t\tIntegerUtilities.f32[0] = value;\n\t\t\t\tlet t8 = IntegerUtilities.u8;\n\t\t\t\tif (this._littleEndian) {\n\t\t\t\t\tu8[position + 0] = t8[0];\n\t\t\t\t\tu8[position + 1] = t8[1];\n\t\t\t\t\tu8[position + 2] = t8[2];\n\t\t\t\t\tu8[position + 3] = t8[3];\n\t\t\t\t} else {\n\t\t\t\t\tu8[position + 0] = t8[3];\n\t\t\t\t\tu8[position + 1] = t8[2];\n\t\t\t\t\tu8[position + 2] = t8[1];\n\t\t\t\t\tu8[position + 3] = t8[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tposition += 4;\n\t\t\tthis._position = position;\n\t\t\tif (position > this._length) {\n\t\t\t\tthis._length = position;\n\t\t\t}\n\t\t}\n\n\t\twrite2Floats(a: number, b: number): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 8);\n\t\t\tthis._requestViews(TypedArrayViewFlags.F32);\n\t\t\tif (this._littleEndian === DataBuffer._nativeLittleEndian && (position & 0x3) === 0 && this._f32) {\n\t\t\t\tthis._f32[(position >> 2) + 0] = a;\n\t\t\t\tthis._f32[(position >> 2) + 1] = b;\n\t\t\t\tposition += 8;\n\t\t\t\tthis._position = position;\n\t\t\t\tif (position > this._length) {\n\t\t\t\t\tthis._length = position;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeFloat(a);\n\t\t\t\tthis.writeFloat(b);\n\t\t\t}\n\t\t}\n\n\t\twrite6Floats(a: number, b: number, c: number, d: number, e: number, f: number): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 24);\n\t\t\tthis._requestViews(TypedArrayViewFlags.F32);\n\t\t\tif (this._littleEndian === DataBuffer._nativeLittleEndian && (position & 0x3) === 0 && this._f32) {\n\t\t\t\tthis._f32[(position >> 2) + 0] = a;\n\t\t\t\tthis._f32[(position >> 2) + 1] = b;\n\t\t\t\tthis._f32[(position >> 2) + 2] = c;\n\t\t\t\tthis._f32[(position >> 2) + 3] = d;\n\t\t\t\tthis._f32[(position >> 2) + 4] = e;\n\t\t\t\tthis._f32[(position >> 2) + 5] = f;\n\t\t\t\tposition += 24;\n\t\t\t\tthis._position = position;\n\t\t\t\tif (position > this._length) {\n\t\t\t\t\tthis._length = position;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.writeFloat(a);\n\t\t\t\tthis.writeFloat(b);\n\t\t\t\tthis.writeFloat(c);\n\t\t\t\tthis.writeFloat(d);\n\t\t\t\tthis.writeFloat(e);\n\t\t\t\tthis.writeFloat(f);\n\t\t\t}\n\t\t}\n\n\t\twriteDouble(value: number): void {\n\t\t\tlet position = this._position;\n\t\t\tthis._ensureCapacity(position + 8);\n\t\t\tlet u8 = this._u8;\n\t\t\tIntegerUtilities.f64[0] = value;\n\t\t\tlet t8 = IntegerUtilities.u8;\n\t\t\tif (this._littleEndian) {\n\t\t\t\tu8[position + 0] = t8[0];\n\t\t\t\tu8[position + 1] = t8[1];\n\t\t\t\tu8[position + 2] = t8[2];\n\t\t\t\tu8[position + 3] = t8[3];\n\t\t\t\tu8[position + 4] = t8[4];\n\t\t\t\tu8[position + 5] = t8[5];\n\t\t\t\tu8[position + 6] = t8[6];\n\t\t\t\tu8[position + 7] = t8[7];\n\t\t\t} else {\n\t\t\t\tu8[position + 0] = t8[7];\n\t\t\t\tu8[position + 1] = t8[6];\n\t\t\t\tu8[position + 2] = t8[5];\n\t\t\t\tu8[position + 3] = t8[4];\n\t\t\t\tu8[position + 4] = t8[3];\n\t\t\t\tu8[position + 5] = t8[2];\n\t\t\t\tu8[position + 6] = t8[1];\n\t\t\t\tu8[position + 7] = t8[0];\n\t\t\t}\n\t\t\tposition += 8;\n\t\t\tthis._position = position;\n\t\t\tif (position > this._length) {\n\t\t\t\tthis._length = position;\n\t\t\t}\n\t\t}\n\n\t\treadRawBytes(): Int8Array {\n\t\t\treturn new Int8Array(this._buffer, 0, this._length);\n\t\t}\n\n\t\twriteUTF(value: string): void {\n\t\t\tvalue = axCoerceString(value);\n\t\t\tlet bytes = utf8decode(value);\n\t\t\tthis.writeShort(bytes.length);\n\t\t\tthis.writeRawBytes(bytes);\n\t\t}\n\n\t\twriteUTFBytes(value: string): void {\n\t\t\tvalue = axCoerceString(value);\n\t\t\tlet bytes = utf8decode(value);\n\t\t\tthis.writeRawBytes(bytes);\n\t\t}\n\n\t\treadUTF(): string {\n\t\t\treturn this.readUTFBytes(this.readShort());\n\t\t}\n\n\t\treadUTFBytes(length: number /*uint*/): string {\n\t\t\tlength = length >>> 0;\n\t\t\tlet pos = this._position;\n\t\t\tif (pos + length > this._length) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t}\n\t\t\tthis._position += length;\n\t\t\treturn utf8encode(new Int8Array(this._buffer, pos, length));\n\t\t}\n\n\t\tget length(): number /*uint*/ {\n\t\t\treturn this._length;\n\t\t}\n\n\t\tset length(value: number /*uint*/) {\n\t\t\tvalue = value >>> 0;\n\t\t\tlet capacity = this._buffer.byteLength;\n\t\t\t/* XXX: Do we need to zero the difference if length <= cap? */\n\t\t\tif (value > capacity) {\n\t\t\t\tthis._ensureCapacity(value);\n\t\t\t}\n\t\t\tthis._length = value;\n\t\t\tthis._position = clamp(this._position, 0, this._length);\n\t\t}\n\n\t\tget bytesAvailable(): number /*uint*/ {\n\t\t\treturn this._length - this._position;\n\t\t}\n\n\t\tget position(): number /*uint*/ {\n\t\t\treturn this._position;\n\t\t}\n\n\t\tget buffer(): ArrayBuffer {\n\t\t\treturn this._buffer;\n\t\t}\n\n\t\tget bytes(): Uint8Array {\n\t\t\treturn this._u8;\n\t\t}\n\n\t\tget ints(): Int32Array {\n\t\t\tthis._requestViews(TypedArrayViewFlags.I32);\n\t\t\treturn this._i32;\n\t\t}\n\n\t\tset position(position: number /*uint*/) {\n\t\t\tthis._position = position >>> 0;\n\t\t}\n\n\t\tget objectEncoding(): number /*uint*/ {\n\t\t\treturn this._objectEncoding;\n\t\t}\n\n\t\tset objectEncoding(version: number /*uint*/) {\n\t\t\tversion = version >>> 0;\n\t\t\tthis._objectEncoding = version;\n\t\t}\n\n\t\tget endian(): string {\n\t\t\treturn this._littleEndian ? \"littleEndian\" : \"bigEndian\";\n\t\t}\n\n\t\tset endian(type: string) {\n\t\t\ttype = axCoerceString(type);\n\t\t\tif (type === \"auto\") {\n\t\t\t\tthis._littleEndian = DataBuffer._nativeLittleEndian;\n\t\t\t} else {\n\t\t\t\tthis._littleEndian = type === \"littleEndian\";\n\t\t\t}\n\t\t}\n\n\t\ttoString(): string {\n\t\t\treturn utf8encode(new Int8Array(this._buffer, 0, this._length));\n\t\t}\n\n\t\ttoBlob(type: string): Blob {\n\t\t\treturn new Blob([new Int8Array(this._buffer, this._position, this._length)], {type: type});\n\t\t}\n\n\t\twriteMultiByte(value: string, charSet: string): void {\n\t\t\tvalue = axCoerceString(value);\n\t\t\tcharSet = axCoerceString(charSet);\n\t\t\trelease || release || notImplemented(\"packageInternal flash.utils.ObjectOutput::writeMultiByte\");\n\t\t\treturn;\n\t\t}\n\n\t\treadMultiByte(length: number /*uint*/, charSet: string): string {\n\t\t\tlength = length >>> 0;\n\t\t\tcharSet = axCoerceString(charSet);\n\t\t\trelease || release || notImplemented(\"packageInternal flash.utils.ObjectInput::readMultiByte\");\n\t\t\treturn \"\";\n\t\t}\n\n\t\tgetValue(name: number): any {\n\t\t\tname = name | 0;\n\t\t\tif (name >= this._length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn this._u8[name];\n\t\t}\n\n\t\tsetValue(name: number, value: any) {\n\t\t\tname = name | 0;\n\t\t\tlet length = name + 1;\n\t\t\tthis._ensureCapacity(length);\n\t\t\tthis._u8[name] = value;\n\t\t\tif (length > this._length) {\n\t\t\t\tthis._length = length;\n\t\t\t}\n\t\t}\n\n\t\treadFixed(): number {\n\t\t\treturn this.readInt() / 65536;\n\t\t}\n\n\t\treadFixed8(): number {\n\t\t\treturn this.readShort() / 256;\n\t\t}\n\n\t\treadFloat16(): number {\n\t\t\tlet uint16 = this.readUnsignedShort();\n\t\t\tlet sign = uint16 >> 15 ? -1 : 1;\n\t\t\tlet exponent = (uint16 & 0x7c00) >> 10;\n\t\t\tlet fraction = uint16 & 0x03ff;\n\t\t\tif (!exponent) {\n\t\t\t\treturn sign * Math.pow(2, -14) * (fraction / 1024);\n\t\t\t}\n\t\t\tif (exponent === 0x1f) {\n\t\t\t\treturn fraction ? NaN : sign * Infinity;\n\t\t\t}\n\t\t\treturn sign * Math.pow(2, exponent - 15) * (1 + (fraction / 1024));\n\t\t}\n\n\t\treadEncodedU32(): number {\n\t\t\tlet value = this.readUnsignedByte();\n\t\t\tif (!(value & 0x080)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvalue = (value & 0x7f) | this.readUnsignedByte() << 7;\n\t\t\tif (!(value & 0x4000)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvalue = (value & 0x3fff) | this.readUnsignedByte() << 14;\n\t\t\tif (!(value & 0x200000)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvalue = (value & 0x1FFFFF) | this.readUnsignedByte() << 21;\n\t\t\tif (!(value & 0x10000000)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn (value & 0xFFFFFFF) | (this.readUnsignedByte() << 28);\n\t\t}\n\n\t\treadBits(size: number): number {\n\t\t\treturn (this.readUnsignedBits(size) << (32 - size)) >> (32 - size);\n\t\t}\n\n\t\treadUnsignedBits(size: number): number {\n\t\t\tlet buffer = this._bitBuffer;\n\t\t\tlet length = this._bitLength;\n\t\t\twhile (size > length) {\n\t\t\t\tbuffer = (buffer << 8) | this.readUnsignedByte();\n\t\t\t\tlength += 8;\n\t\t\t}\n\t\t\tlength -= size;\n\t\t\tlet value = (buffer >>> length) & bitMasks[size];\n\t\t\tthis._bitBuffer = buffer;\n\t\t\tthis._bitLength = length;\n\t\t\treturn value;\n\t\t}\n\n\t\treadFixedBits(size: number): number {\n\t\t\treturn this.readBits(size) / 65536;\n\t\t}\n\n\t\treadString(length?: number): string {\n\t\t\tlet position = this._position;\n\t\t\tif (length) {\n\t\t\t\tif (position + length > this._length) {\n\t\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t\t(<any>this).sec.throwError('flash.errors.EOFError', Errors.EOFError);\n\t\t\t\t}\n\t\t\t\tthis._position += length;\n\t\t\t} else {\n\t\t\t\tlength = 0;\n\t\t\t\tfor (let i = position; i < this._length && this._u8[i]; i++) {\n\t\t\t\t\tlength++;\n\t\t\t\t}\n\t\t\t\tthis._position += length + 1;\n\t\t\t}\n\t\t\treturn utf8encode(new Int8Array(this._buffer, position, length));\n\t\t}\n\n\t\talign() {\n\t\t\tthis._bitBuffer = 0;\n\t\t\tthis._bitLength = 0;\n\t\t}\n\n\t\tdeflate() {\n\t\t\tthis.compress('deflate');\n\t\t}\n\n\t\tinflate() {\n\t\t\tthis.uncompress('deflate');\n\t\t}\n\n\t\tcompress(algorithm: string): void {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\talgorithm = 'zlib';\n\t\t\t} else {\n\t\t\t\talgorithm = axCoerceString(algorithm);\n\t\t\t}\n\n\t\t\tlet deflate: Deflate;\n\t\t\tswitch (algorithm) {\n\t\t\t\tcase 'zlib':\n\t\t\t\t\tdeflate = new Deflate(true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'deflate':\n\t\t\t\t\tdeflate = new Deflate(false);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet output = new DataBuffer();\n\t\t\tdeflate.onData = output.writeRawBytes.bind(output);\n\t\t\tdeflate.push(this._u8.subarray(0, this._length));\n\t\t\tdeflate.close();\n\n\t\t\tthis._ensureCapacity(output._u8.length);\n\t\t\tthis._u8.set(output._u8);\n\t\t\tthis.length = output.length;\n\t\t\tthis._position = 0;\n\t\t}\n\n\t\tuncompress(algorithm: string): void {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\talgorithm = 'zlib';\n\t\t\t} else {\n\t\t\t\talgorithm = axCoerceString(algorithm);\n\t\t\t}\n\n\t\t\tlet inflate: IDataDecoder;\n\t\t\tswitch (algorithm) {\n\t\t\t\tcase 'zlib':\n\t\t\t\t\tinflate = Inflate.create(true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'deflate':\n\t\t\t\t\tinflate = Inflate.create(false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lzma':\n\t\t\t\t\tinflate = new LzmaDecoder(false);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet output = new DataBuffer();\n\t\t\tlet error;\n\t\t\tinflate.onData = output.writeRawBytes.bind(output);\n\t\t\tinflate.onError = (e) => error = e;\n\t\t\tinflate.push(this._u8.subarray(0, this._length));\n\t\t\tif (error) {\n\t\t\t\trelease || assert((<any>this).sec);\n\t\t\t\t(<any>this).sec.throwError('IOError', Errors.CompressedDataError);\n\t\t\t}\n\t\t\tinflate.close();\n\n\t\t\tthis._ensureCapacity(output._u8.length);\n\t\t\tthis._u8.set(output._u8);\n\t\t\tthis.length = output.length;\n\t\t\tthis._position = 0;\n\t\t}\n\n\t}\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Serialization format for shape data:\n * (canonical, update this instead of anything else!)\n *\n * Shape data is serialized into a set of three buffers:\n * - `commands`: a Uint8Array for commands\n *  - valid values: [1-11] (i.e. one of the PathCommand enum values)\n * - `coordinates`: an Int32Array for path coordinates*\n *                  OR uint8 thickness iff the current command is PathCommand.LineStyleSolid\n *  - valid values: the full range of 32bit numbers, representing x,y coordinates in twips\n * - `styles`: a DataBuffer for style definitions\n *  - valid values: structs for the various style definitions as described below\n *\n * (*: with one exception: to make various things faster, stroke widths are stored in the\n * coordinates buffer, too.)\n *\n * All entries always contain all fields, default values aren't omitted.\n *\n * the various commands write the following sets of values into the various buffers:\n *\n * moveTo:\n * commands:      PathCommand.MoveTo\n * coordinates:   target x coordinate, in twips\n *                target y coordinate, in twips\n * styles:        n/a\n *\n * lineTo:\n * commands:      PathCommand.LineTo\n * coordinates:   target x coordinate, in twips\n *                target y coordinate, in twips\n * styles:        n/a\n *\n * curveTo:\n * commands:      PathCommand.CurveTo\n * coordinates:   control point x coordinate, in twips\n *                control point y coordinate, in twips\n *                target x coordinate, in twips\n *                target y coordinate, in twips\n * styles:        n/a\n *\n * cubicCurveTo:\n * commands:      PathCommand.CubicCurveTo\n * coordinates:   control point 1 x coordinate, in twips\n *                control point 1 y coordinate, in twips\n *                control point 2 x coordinate, in twips\n *                control point 2 y coordinate, in twips\n *                target x coordinate, in twips\n *                target y coordinate, in twips\n * styles:        n/a\n *\n * beginFill:\n * commands:      PathCommand.BeginSolidFill\n * coordinates:   n/a\n * styles:        uint32 - RGBA color\n *\n * beginGradientFill:\n * commands:      PathCommand.BeginGradientFill\n * coordinates:   n/a\n * Note: the style fields are ordered this way to optimize performance in the rendering backend\n * Note: the style record has a variable length depending on the number of color stops\n * styles:        uint8  - GradientType.{LINEAR,RADIAL}\n *                fix8   - focalPoint [-128.0xff,127.0xff]\n *                matrix - transform (see Matrix#writeExternal for details)\n *                uint8  - colorStops (Number of color stop records that follow)\n *                list of uint8,uint32 pairs:\n *                    uint8  - ratio [0-0xff]\n *                    uint32 - RGBA color\n *                uint8  - SpreadMethod.{PAD,REFLECT,REPEAT}\n *                uint8  - InterpolationMethod.{RGB,LINEAR_RGB}\n *\n * beginBitmapFill:\n * commands:      PathCommand.BeginBitmapFill\n * coordinates:   n/a\n * styles:        uint32 - Index of the bitmapData object in the Graphics object's `textures`\n *                         array\n *                matrix - transform (see Matrix#writeExternal for details)\n *                bool   - repeat\n *                bool   - smooth\n *\n * lineStyle:\n * commands:      PathCommand.LineStyleSolid\n * coordinates:   uint32 - thickness (!)\n * style:         uint32 - RGBA color\n *                bool   - pixelHinting\n *                uint8  - LineScaleMode, [0-3] see LineScaleMode.fromNumber for meaning\n *                uint8  - CapsStyle, [0-2] see CapsStyle.fromNumber for meaning\n *                uint8  - JointStyle, [0-2] see JointStyle.fromNumber for meaning\n *                uint8  - miterLimit\n *\n * lineGradientStyle:\n * commands:      PathCommand.LineStyleGradient\n * coordinates:   n/a\n * Note: the style fields are ordered this way to optimize performance in the rendering backend\n * Note: the style record has a variable length depending on the number of color stops\n * styles:        uint8  - GradientType.{LINEAR,RADIAL}\n *                int8   - focalPoint [-128,127]\n *                matrix - transform (see Matrix#writeExternal for details)\n *                uint8  - colorStops (Number of color stop records that follow)\n *                list of uint8,uint32 pairs:\n *                    uint8  - ratio [0-0xff]\n *                    uint32 - RGBA color\n *                uint8  - SpreadMethod.{PAD,REFLECT,REPEAT}\n *                uint8  - InterpolationMethod.{RGB,LINEAR_RGB}\n *\n * lineBitmapStyle:\n * commands:      PathCommand.LineBitmapStyle\n * coordinates:   n/a\n * styles:        uint32 - Index of the bitmapData object in the Graphics object's `textures`\n *                         array\n *                matrix - transform (see Matrix#writeExternal for details)\n *                bool   - repeat\n *                bool   - smooth\n *\n * lineEnd:\n * Note: emitted for invalid `lineStyle` calls\n * commands:      PathCommand.LineEnd\n * coordinates:   n/a\n * styles:        n/a\n *\n */\n\n///<reference path='references.ts' />\nmodule Shumway {\n\timport DataBuffer = Shumway.ArrayUtilities.DataBuffer;\n\timport ensureTypedArrayCapacity = Shumway.ArrayUtilities.ensureTypedArrayCapacity;\n\n\timport assert = Shumway.Debug.assert;\n\n\t/**\n\t * Used for (de-)serializing Graphics path data in defineShape, flash.display.Graphics\n\t * and the renderer.\n\t */\n\texport const enum PathCommand {\n\t\tBeginSolidFill = 1,\n\t\tBeginGradientFill = 2,\n\t\tBeginBitmapFill = 3,\n\t\tEndFill = 4,\n\t\tLineStyleSolid = 5,\n\t\tLineStyleGradient = 6,\n\t\tLineStyleBitmap = 7,\n\t\tLineEnd = 8,\n\t\tMoveTo = 9,\n\t\tLineTo = 10,\n\t\tCurveTo = 11,\n\t\tCubicCurveTo = 12,\n\t}\n\n\texport const enum GradientType {\n\t\tLinear = 0x10,\n\t\tRadial = 0x12\n\t}\n\n\texport const enum GradientSpreadMethod {\n\t\tPad = 0,\n\t\tReflect = 1,\n\t\tRepeat = 2\n\t}\n\n\texport const enum GradientInterpolationMethod {\n\t\tRGB = 0,\n\t\tLinearRGB = 1\n\t}\n\n\texport const enum LineScaleMode {\n\t\tNone = 0,\n\t\tNormal = 1,\n\t\tVertical = 2,\n\t\tHorizontal = 3\n\t}\n\n\texport interface ShapeMatrix {\n\t\ta: number;\n\t\tb: number;\n\t\tc: number;\n\t\td: number;\n\t\ttx: number;\n\t\tty: number;\n\t}\n\n\texport class PlainObjectShapeData {\n\t\tconstructor(public commands: Uint8Array, public commandsPosition: number,\n\t\t            public coordinates: Int32Array, public morphCoordinates: Int32Array,\n\t\t            public coordinatesPosition: number,\n\t\t            public styles: ArrayBuffer, public stylesLength: number,\n\t\t            public morphStyles: ArrayBuffer, public morphStylesLength: number,\n\t\t            public hasFills: boolean, public hasLines: boolean) {\n\t\t}\n\t}\n\n\tenum DefaultSize {\n\t\tCommands = 32,\n\t\tCoordinates = 128,\n\t\tStyles = 16\n\t}\n\n\texport class ShapeData {\n\n\t\tcommands: Uint8Array;\n\t\tcommandsPosition: number;\n\t\tcoordinates: Int32Array;\n\t\t// Note: creation and capacity-ensurance have to happen from the outside for this field.\n\t\tmorphCoordinates: Int32Array;\n\t\tcoordinatesPosition: number;\n\t\tstyles: DataBuffer;\n\t\tmorphStyles: DataBuffer;\n\t\thasFills: boolean;\n\t\thasLines: boolean;\n\n\t\tconstructor(initialize: boolean = true) {\n\t\t\tif (initialize) {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t}\n\n\t\tstatic FromPlainObject(source: PlainObjectShapeData): ShapeData {\n\t\t\tlet data = new ShapeData(false);\n\t\t\tdata.commands = source.commands;\n\t\t\tdata.coordinates = source.coordinates;\n\t\t\tdata.morphCoordinates = source.morphCoordinates;\n\t\t\tdata.commandsPosition = source.commandsPosition;\n\t\t\tdata.coordinatesPosition = source.coordinatesPosition;\n\t\t\tdata.styles = DataBuffer.FromArrayBuffer(source.styles, source.stylesLength);\n\t\t\tdata.styles.endian = 'auto';\n\t\t\tif (source.morphStyles) {\n\t\t\t\tdata.morphStyles = DataBuffer.FromArrayBuffer(\n\t\t\t\t\tsource.morphStyles, source.morphStylesLength);\n\t\t\t\tdata.morphStyles.endian = 'auto';\n\t\t\t}\n\t\t\tdata.hasFills = source.hasFills;\n\t\t\tdata.hasLines = source.hasLines;\n\t\t\treturn data;\n\t\t}\n\n\t\tmoveTo(x: number, y: number): void {\n\t\t\tthis.ensurePathCapacities(1, 2);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.MoveTo;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = x;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = y;\n\t\t}\n\n\t\tlineTo(x: number, y: number): void {\n\t\t\tthis.ensurePathCapacities(1, 2);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.LineTo;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = x;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = y;\n\t\t}\n\n\t\tcurveTo(controlX: number, controlY: number, anchorX: number, anchorY: number): void {\n\t\t\tthis.ensurePathCapacities(1, 4);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.CurveTo;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = controlX;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = controlY;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = anchorX;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = anchorY;\n\t\t}\n\n\t\tcubicCurveTo(controlX1: number, controlY1: number, controlX2: number, controlY2: number,\n\t\t             anchorX: number, anchorY: number): void {\n\t\t\tthis.ensurePathCapacities(1, 6);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.CubicCurveTo;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = controlX1;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = controlY1;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = controlX2;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = controlY2;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = anchorX;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = anchorY;\n\t\t}\n\n\t\tbeginFill(color: number): void {\n\t\t\tthis.ensurePathCapacities(1, 0);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.BeginSolidFill;\n\t\t\tthis.styles.writeUnsignedInt(color);\n\t\t\tthis.hasFills = true;\n\t\t}\n\n\t\twriteMorphFill(color: number) {\n\t\t\tthis.morphStyles.writeUnsignedInt(color);\n\t\t}\n\n\t\tendFill() {\n\t\t\tthis.ensurePathCapacities(1, 0);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.EndFill;\n\t\t}\n\n\t\tendLine() {\n\t\t\tthis.ensurePathCapacities(1, 0);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.LineEnd;\n\t\t}\n\n\t\tlineStyle(thickness: number, color: number, pixelHinting: boolean,\n\t\t          scaleMode: LineScaleMode, caps: number, joints: number, miterLimit: number): void {\n\t\t\trelease || assert(thickness === (thickness | 0), thickness >= 0 && thickness <= 0xff * 20);\n\t\t\tthis.ensurePathCapacities(2, 0);\n\t\t\tthis.commands[this.commandsPosition++] = PathCommand.LineStyleSolid;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = thickness;\n\t\t\tlet styles: DataBuffer = this.styles;\n\t\t\tstyles.writeUnsignedInt(color);\n\t\t\tstyles.writeBoolean(pixelHinting);\n\t\t\tstyles.writeUnsignedByte(scaleMode);\n\t\t\tstyles.writeUnsignedByte(caps);\n\t\t\tstyles.writeUnsignedByte(joints);\n\t\t\tstyles.writeUnsignedByte(miterLimit);\n\t\t\tthis.hasLines = true;\n\t\t}\n\n\t\twriteMorphLineStyle(thickness: number, color: number) {\n\t\t\tthis.morphCoordinates[this.coordinatesPosition - 1] = thickness;\n\t\t\tthis.morphStyles.writeUnsignedInt(color);\n\t\t}\n\n\t\t/**\n\t\t * Bitmaps are specified the same for fills and strokes, so we only need to serialize them\n\t\t * once. The Parameter `pathCommand` is treated as the actual command to serialize, and must\n\t\t * be one of BeginBitmapFill and LineStyleBitmap.\n\t\t */\n\t\tbeginBitmap(pathCommand: PathCommand, bitmapId: number, matrix: ShapeMatrix,\n\t\t            repeat: boolean, smooth: boolean): void {\n\t\t\trelease || assert(pathCommand === PathCommand.BeginBitmapFill ||\n\t\t\t\tpathCommand === PathCommand.LineStyleBitmap);\n\t\t\tthis.ensurePathCapacities(1, 0);\n\t\t\tthis.commands[this.commandsPosition++] = pathCommand;\n\t\t\tlet styles: DataBuffer = this.styles;\n\t\t\tstyles.writeUnsignedInt(bitmapId);\n\t\t\tthis._writeStyleMatrix(matrix, false);\n\t\t\tstyles.writeBoolean(repeat);\n\t\t\tstyles.writeBoolean(smooth);\n\t\t\tthis.hasFills = true;\n\t\t}\n\n\t\twriteMorphBitmap(matrix: ShapeMatrix) {\n\t\t\tthis._writeStyleMatrix(matrix, true);\n\t\t}\n\n\t\t/**\n\t\t * Gradients are specified the same for fills and strokes, so we only need to serialize them\n\t\t * once. The Parameter `pathCommand` is treated as the actual command to serialize, and must\n\t\t * be one of BeginGradientFill and LineStyleGradient.\n\t\t */\n\t\tbeginGradient(pathCommand: PathCommand, colors: number[], ratios: number[],\n\t\t              gradientType: number, matrix: ShapeMatrix,\n\t\t              spread: number, interpolation: number, focalPointRatio: number) {\n\t\t\trelease || assert(pathCommand === PathCommand.BeginGradientFill ||\n\t\t\t\tpathCommand === PathCommand.LineStyleGradient);\n\n\t\t\tthis.ensurePathCapacities(1, 0);\n\t\t\tthis.commands[this.commandsPosition++] = pathCommand;\n\t\t\tlet styles: DataBuffer = this.styles;\n\t\t\tstyles.writeUnsignedByte(gradientType);\n\t\t\trelease || assert(focalPointRatio === (focalPointRatio | 0));\n\t\t\tstyles.writeShort(focalPointRatio);\n\t\t\tthis._writeStyleMatrix(matrix, false);\n\t\t\tlet colorStops = colors.length;\n\t\t\tstyles.writeByte(colorStops);\n\t\t\tfor (let i = 0; i < colorStops; i++) {\n\t\t\t\t// Ratio must be valid, otherwise we'd have bailed above.\n\t\t\t\tstyles.writeUnsignedByte(ratios[i]);\n\t\t\t\t// Colors are coerced to uint32, with the highest byte stripped.\n\t\t\t\tstyles.writeUnsignedInt(colors[i]);\n\t\t\t}\n\t\t\tstyles.writeUnsignedByte(spread);\n\t\t\tstyles.writeUnsignedByte(interpolation);\n\t\t\tthis.hasFills = true;\n\t\t}\n\n\t\twriteMorphGradient(colors: number[], ratios: number[], matrix: ShapeMatrix) {\n\t\t\tthis._writeStyleMatrix(matrix, true);\n\t\t\tlet styles: DataBuffer = this.morphStyles;\n\t\t\tfor (let i = 0; i < colors.length; i++) {\n\t\t\t\t// Ratio must be valid, otherwise we'd have bailed above.\n\t\t\t\tstyles.writeUnsignedByte(ratios[i]);\n\t\t\t\t// Colors are coerced to uint32, with the highest byte stripped.\n\t\t\t\tstyles.writeUnsignedInt(colors[i]);\n\t\t\t}\n\t\t}\n\n\t\twriteCommandAndCoordinates(command: PathCommand, x: number, y: number) {\n\t\t\tthis.ensurePathCapacities(1, 2);\n\t\t\tthis.commands[this.commandsPosition++] = command;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = x;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = y;\n\t\t}\n\n\t\twriteCoordinates(x: number, y: number) {\n\t\t\tthis.ensurePathCapacities(0, 2);\n\t\t\tthis.coordinates[this.coordinatesPosition++] = x;\n\t\t\tthis.coordinates[this.coordinatesPosition++] = y;\n\t\t}\n\n\t\twriteMorphCoordinates(x: number, y: number) {\n\t\t\tthis.morphCoordinates = ensureTypedArrayCapacity(this.morphCoordinates,\n\t\t\t\tthis.coordinatesPosition);\n\t\t\tthis.morphCoordinates[this.coordinatesPosition - 2] = x;\n\t\t\tthis.morphCoordinates[this.coordinatesPosition - 1] = y;\n\t\t}\n\n\t\tclear() {\n\t\t\tthis.commandsPosition = this.coordinatesPosition = 0;\n\t\t\tthis.commands = new Uint8Array(DefaultSize.Commands);\n\t\t\tthis.coordinates = new Int32Array(DefaultSize.Coordinates);\n\t\t\tthis.styles = new DataBuffer(DefaultSize.Styles);\n\t\t\tthis.styles.endian = 'auto';\n\t\t\tthis.hasFills = this.hasLines = false;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\treturn this.commandsPosition === 0;\n\t\t}\n\n\t\tclone(): ShapeData {\n\t\t\tlet copy = new ShapeData(false);\n\t\t\tcopy.commands = new Uint8Array(this.commands);\n\t\t\tcopy.commandsPosition = this.commandsPosition;\n\t\t\tcopy.coordinates = new Int32Array(this.coordinates);\n\t\t\tcopy.coordinatesPosition = this.coordinatesPosition;\n\t\t\tcopy.styles = new DataBuffer(this.styles.length);\n\t\t\tcopy.styles.writeRawBytes(this.styles.bytes.subarray(0, this.styles.length));\n\t\t\tif (this.morphStyles) {\n\t\t\t\tcopy.morphStyles = new DataBuffer(this.morphStyles.length);\n\t\t\t\tcopy.morphStyles.writeRawBytes(\n\t\t\t\t\tthis.morphStyles.bytes.subarray(0, this.morphStyles.length));\n\t\t\t}\n\t\t\tcopy.hasFills = this.hasFills;\n\t\t\tcopy.hasLines = this.hasLines;\n\t\t\treturn copy;\n\t\t}\n\n\t\ttoPlainObject(): PlainObjectShapeData {\n\t\t\treturn new PlainObjectShapeData(this.commands, this.commandsPosition,\n\t\t\t\tthis.coordinates, this.morphCoordinates,\n\t\t\t\tthis.coordinatesPosition,\n\t\t\t\tthis.styles.buffer, this.styles.length,\n\t\t\t\tthis.morphStyles && this.morphStyles.buffer,\n\t\t\t\tthis.morphStyles ? this.morphStyles.length : 0,\n\t\t\t\tthis.hasFills, this.hasLines);\n\t\t}\n\n\t\tpublic get buffers(): ArrayBuffer[] {\n\t\t\tlet buffers = [this.commands.buffer, this.coordinates.buffer, this.styles.buffer];\n\t\t\tif (this.morphCoordinates) {\n\t\t\t\tbuffers.push(this.morphCoordinates.buffer);\n\t\t\t}\n\t\t\tif (this.morphStyles) {\n\t\t\t\tbuffers.push(this.morphStyles.buffer);\n\t\t\t}\n\t\t\treturn buffers;\n\t\t}\n\n\t\tprivate _writeStyleMatrix(matrix: ShapeMatrix, isMorph: boolean) {\n\t\t\tlet styles: DataBuffer = isMorph ? this.morphStyles : this.styles;\n\t\t\tstyles.write6Floats(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t\t}\n\n\t\tprivate ensurePathCapacities(numCommands: number, numCoordinates: number) {\n\t\t\t// ensureTypedArrayCapacity will hopefully be inlined, in which case the field writes\n\t\t\t// will be optimized out.\n\t\t\tthis.commands = ensureTypedArrayCapacity(this.commands, this.commandsPosition + numCommands);\n\t\t\tthis.coordinates = ensureTypedArrayCapacity(this.coordinates,\n\t\t\t\tthis.coordinatesPosition + numCoordinates);\n\t\t}\n\t}\n}\n","/*\n * Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"),\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway.SWF.Parser {\n\texport const enum SwfTagCode {\n\t\tCODE_END = 0,\n\t\tCODE_SHOW_FRAME = 1,\n\t\tCODE_DEFINE_SHAPE = 2,\n\t\tCODE_FREE_CHARACTER = 3,\n\t\tCODE_PLACE_OBJECT = 4,\n\t\tCODE_REMOVE_OBJECT = 5,\n\t\tCODE_DEFINE_BITS = 6,\n\t\tCODE_DEFINE_BUTTON = 7,\n\t\tCODE_JPEG_TABLES = 8,\n\t\tCODE_SET_BACKGROUND_COLOR = 9,\n\t\tCODE_DEFINE_FONT = 10,\n\t\tCODE_DEFINE_TEXT = 11,\n\t\tCODE_DO_ACTION = 12,\n\t\tCODE_DEFINE_FONT_INFO = 13,\n\t\tCODE_DEFINE_SOUND = 14,\n\t\tCODE_START_SOUND = 15,\n\t\tCODE_STOP_SOUND = 16,\n\t\tCODE_DEFINE_BUTTON_SOUND = 17,\n\t\tCODE_SOUND_STREAM_HEAD = 18,\n\t\tCODE_SOUND_STREAM_BLOCK = 19,\n\t\tCODE_DEFINE_BITS_LOSSLESS = 20,\n\t\tCODE_DEFINE_BITS_JPEG2 = 21,\n\t\tCODE_DEFINE_SHAPE2 = 22,\n\t\tCODE_DEFINE_BUTTON_CXFORM = 23,\n\t\tCODE_PROTECT = 24,\n\t\tCODE_PATHS_ARE_POSTSCRIPT = 25,\n\t\tCODE_PLACE_OBJECT2 = 26,\n\t\t// INVALID                             = 27,\n\t\tCODE_REMOVE_OBJECT2 = 28,\n\t\tCODE_SYNC_FRAME = 29,\n\t\t// INVALID                             = 30,\n\t\tCODE_FREE_ALL = 31,\n\t\tCODE_DEFINE_SHAPE3 = 32,\n\t\tCODE_DEFINE_TEXT2 = 33,\n\t\tCODE_DEFINE_BUTTON2 = 34,\n\t\tCODE_DEFINE_BITS_JPEG3 = 35,\n\t\tCODE_DEFINE_BITS_LOSSLESS2 = 36,\n\t\tCODE_DEFINE_EDIT_TEXT = 37,\n\t\tCODE_DEFINE_VIDEO = 38,\n\t\tCODE_DEFINE_SPRITE = 39,\n\t\tCODE_NAME_CHARACTER = 40,\n\t\tCODE_PRODUCT_INFO = 41,\n\t\tCODE_DEFINE_TEXT_FORMAT = 42,\n\t\tCODE_FRAME_LABEL = 43,\n\t\tCODE_DEFINE_BEHAVIOUR = 44,\n\t\tCODE_SOUND_STREAM_HEAD2 = 45,\n\t\tCODE_DEFINE_MORPH_SHAPE = 46,\n\t\tCODE_GENERATE_FRAME = 47,\n\t\tCODE_DEFINE_FONT2 = 48,\n\t\tCODE_GEN_COMMAND = 49,\n\t\tCODE_DEFINE_COMMAND_OBJECT = 50,\n\t\tCODE_CHARACTER_SET = 51,\n\t\tCODE_EXTERNAL_FONT = 52,\n\t\tCODE_DEFINE_FUNCTION = 53,\n\t\tCODE_PLACE_FUNCTION = 54,\n\t\tCODE_GEN_TAG_OBJECTS = 55,\n\t\tCODE_EXPORT_ASSETS = 56,\n\t\tCODE_IMPORT_ASSETS = 57,\n\t\tCODE_ENABLE_DEBUGGER = 58,\n\t\tCODE_DO_INIT_ACTION = 59,\n\t\tCODE_DEFINE_VIDEO_STREAM = 60,\n\t\tCODE_VIDEO_FRAME = 61,\n\t\tCODE_DEFINE_FONT_INFO2 = 62,\n\t\tCODE_DEBUG_ID = 63,\n\t\tCODE_ENABLE_DEBUGGER2 = 64,\n\t\tCODE_SCRIPT_LIMITS = 65,\n\t\tCODE_SET_TAB_INDEX = 66,\n\t\t// CODE_DEFINE_SHAPE4                  = 67,\n\t\t// INVALID                             = 68,\n\t\tCODE_FILE_ATTRIBUTES = 69,\n\t\tCODE_PLACE_OBJECT3 = 70,\n\t\tCODE_IMPORT_ASSETS2 = 71,\n\t\tCODE_DO_ABC_DEFINE = 72,\n\t\tCODE_DEFINE_FONT_ALIGN_ZONES = 73,\n\t\tCODE_CSM_TEXT_SETTINGS = 74,\n\t\tCODE_DEFINE_FONT3 = 75,\n\t\tCODE_SYMBOL_CLASS = 76,\n\t\tCODE_METADATA = 77,\n\t\tCODE_DEFINE_SCALING_GRID = 78,\n\t\t// INVALID                             = 79,\n\t\t// INVALID                             = 80,\n\t\t// INVALID                             = 81,\n\t\tCODE_DO_ABC = 82,\n\t\tCODE_DEFINE_SHAPE4 = 83,\n\t\tCODE_DEFINE_MORPH_SHAPE2 = 84,\n\t\t// INVALID                             = 85,\n\t\tCODE_DEFINE_SCENE_AND_FRAME_LABEL_DATA = 86,\n\t\tCODE_DEFINE_BINARY_DATA = 87,\n\t\tCODE_DEFINE_FONT_NAME = 88,\n\t\tCODE_START_SOUND2 = 89,\n\t\tCODE_DEFINE_BITS_JPEG4 = 90,\n\t\tCODE_DEFINE_FONT4 = 91,\n\t\tCODE_TELEMETRY = 93\n\t}\n\n\tlet SwfTagCodeNames = [\"CODE_END\", \"CODE_SHOW_FRAME\", \"CODE_DEFINE_SHAPE\", \"CODE_FREE_CHARACTER\", \"CODE_PLACE_OBJECT\", \"CODE_REMOVE_OBJECT\", \"CODE_DEFINE_BITS\", \"CODE_DEFINE_BUTTON\", \"CODE_JPEG_TABLES\", \"CODE_SET_BACKGROUND_COLOR\", \"CODE_DEFINE_FONT\", \"CODE_DEFINE_TEXT\", \"CODE_DO_ACTION\", \"CODE_DEFINE_FONT_INFO\", \"CODE_DEFINE_SOUND\", \"CODE_START_SOUND\", \"CODE_STOP_SOUND\", \"CODE_DEFINE_BUTTON_SOUND\", \"CODE_SOUND_STREAM_HEAD\", \"CODE_SOUND_STREAM_BLOCK\", \"CODE_DEFINE_BITS_LOSSLESS\", \"CODE_DEFINE_BITS_JPEG2\", \"CODE_DEFINE_SHAPE2\", \"CODE_DEFINE_BUTTON_CXFORM\", \"CODE_PROTECT\", \"CODE_PATHS_ARE_POSTSCRIPT\", \"CODE_PLACE_OBJECT2\", \"INVALID\", \"CODE_REMOVE_OBJECT2\", \"CODE_SYNC_FRAME\", \"INVALID\", \"CODE_FREE_ALL\", \"CODE_DEFINE_SHAPE3\", \"CODE_DEFINE_TEXT2\", \"CODE_DEFINE_BUTTON2\", \"CODE_DEFINE_BITS_JPEG3\", \"CODE_DEFINE_BITS_LOSSLESS2\", \"CODE_DEFINE_EDIT_TEXT\", \"CODE_DEFINE_VIDEO\", \"CODE_DEFINE_SPRITE\", \"CODE_NAME_CHARACTER\", \"CODE_PRODUCT_INFO\", \"CODE_DEFINE_TEXT_FORMAT\", \"CODE_FRAME_LABEL\", \"CODE_DEFINE_BEHAVIOUR\", \"CODE_SOUND_STREAM_HEAD2\", \"CODE_DEFINE_MORPH_SHAPE\", \"CODE_GENERATE_FRAME\", \"CODE_DEFINE_FONT2\", \"CODE_GEN_COMMAND\", \"CODE_DEFINE_COMMAND_OBJECT\", \"CODE_CHARACTER_SET\", \"CODE_EXTERNAL_FONT\", \"CODE_DEFINE_FUNCTION\", \"CODE_PLACE_FUNCTION\", \"CODE_GEN_TAG_OBJECTS\", \"CODE_EXPORT_ASSETS\", \"CODE_IMPORT_ASSETS\", \"CODE_ENABLE_DEBUGGER\", \"CODE_DO_INIT_ACTION\", \"CODE_DEFINE_VIDEO_STREAM\", \"CODE_VIDEO_FRAME\", \"CODE_DEFINE_FONT_INFO2\", \"CODE_DEBUG_ID\", \"CODE_ENABLE_DEBUGGER2\", \"CODE_SCRIPT_LIMITS\", \"CODE_SET_TAB_INDEX\", \"CODE_DEFINE_SHAPE4\", \"INVALID\", \"CODE_FILE_ATTRIBUTES\", \"CODE_PLACE_OBJECT3\", \"CODE_IMPORT_ASSETS2\", \"CODE_DO_ABC_DEFINE\", \"CODE_DEFINE_FONT_ALIGN_ZONES\", \"CODE_CSM_TEXT_SETTINGS\", \"CODE_DEFINE_FONT3\", \"CODE_SYMBOL_CLASS\", \"CODE_METADATA\", \"CODE_DEFINE_SCALING_GRID\", \"INVALID\", \"INVALID\", \"INVALID\", \"CODE_DO_ABC\", \"CODE_DEFINE_SHAPE4\", \"CODE_DEFINE_MORPH_SHAPE2\", \"INVALID\", \"CODE_DEFINE_SCENE_AND_FRAME_LABEL_DATA\", \"CODE_DEFINE_BINARY_DATA\", \"CODE_DEFINE_FONT_NAME\", \"CODE_START_SOUND2\", \"CODE_DEFINE_BITS_JPEG4\", \"CODE_DEFINE_FONT4\", \"CODE_TELEMETRY\"];\n\n\texport function getSwfTagCodeName(tagCode: SwfTagCode) {\n\t\treturn release ? \"SwfTagCode: \" + tagCode : SwfTagCodeNames[tagCode];\n\t}\n\n\texport enum DefinitionTags {\n\t\tCODE_DEFINE_SHAPE = 2,\n\t\tCODE_DEFINE_BITS = 6,\n\t\tCODE_DEFINE_BUTTON = 7,\n\t\tCODE_DEFINE_FONT = 10,\n\t\tCODE_DEFINE_TEXT = 11,\n\t\tCODE_DEFINE_SOUND = 14,\n\t\tCODE_DEFINE_BITS_LOSSLESS = 20,\n\t\tCODE_DEFINE_BITS_JPEG2 = 21,\n\t\tCODE_DEFINE_SHAPE2 = 22,\n\t\tCODE_DEFINE_SHAPE3 = 32,\n\t\tCODE_DEFINE_TEXT2 = 33,\n\t\tCODE_DEFINE_BUTTON2 = 34,\n\t\tCODE_DEFINE_BITS_JPEG3 = 35,\n\t\tCODE_DEFINE_BITS_LOSSLESS2 = 36,\n\t\tCODE_DEFINE_EDIT_TEXT = 37,\n\t\tCODE_DEFINE_SPRITE = 39,\n\t\tCODE_DEFINE_MORPH_SHAPE = 46,\n\t\tCODE_DEFINE_FONT2 = 48,\n\t\tCODE_DEFINE_VIDEO_STREAM = 60,\n\t\tCODE_DEFINE_FONT3 = 75,\n\t\tCODE_DEFINE_SHAPE4 = 83,\n\t\tCODE_DEFINE_MORPH_SHAPE2 = 84,\n\t\tCODE_DEFINE_BINARY_DATA = 87,\n\t\tCODE_DEFINE_BITS_JPEG4 = 90,\n\t\tCODE_DEFINE_FONT4 = 91\n\t}\n\n\texport enum ImageDefinitionTags {\n\t\tCODE_DEFINE_BITS = 6,\n\t\tCODE_DEFINE_BITS_JPEG2 = 21,\n\t\tCODE_DEFINE_BITS_JPEG3 = 35,\n\t\tCODE_DEFINE_BITS_JPEG4 = 90\n\t}\n\n\texport enum FontDefinitionTags {\n\t\tCODE_DEFINE_FONT = 10,\n\t\tCODE_DEFINE_FONT2 = 48,\n\t\tCODE_DEFINE_FONT3 = 75,\n\t\tCODE_DEFINE_FONT4 = 91\n\t}\n\n\texport enum ControlTags {\n\t\tCODE_PLACE_OBJECT = 4,\n\t\tCODE_PLACE_OBJECT2 = 26,\n\t\tCODE_PLACE_OBJECT3 = 70,\n\t\tCODE_REMOVE_OBJECT = 5,\n\t\tCODE_REMOVE_OBJECT2 = 28,\n\t\tCODE_START_SOUND = 15,\n\t\tCODE_START_SOUND2 = 89,\n\t\tCODE_VIDEO_FRAME = 61\n\t}\n\n\texport interface Bbox {\n\t\txMin: number;\n\t\txMax: number;\n\t\tyMin: number;\n\t\tyMax: number;\n\t}\n\n\texport interface Matrix {\n\t\ta: number;\n\t\tb: number;\n\t\tc: number;\n\t\td: number;\n\t\ttx: number;\n\t\tty: number;\n\t}\n\n\texport interface ColorTransform {\n\t\tredMultiplier: number;\n\t\tgreenMultiplier: number;\n\t\tblueMultiplier: number;\n\t\talphaMultiplier: number;\n\t\tredOffset: number;\n\t\tgreenOffset: number;\n\t\tblueOffset: number;\n\t\talphaOffset: number;\n\t}\n\n\texport interface SwfTag {\n\t\tcode: number;\n\t}\n\n\texport interface DefinitionTag extends SwfTag {\n\t\tid: number;\n\t}\n\n\texport interface DisplayListTag extends SwfTag {\n\t\tdepth: number;\n\t}\n\n\texport interface PlaceObjectTag extends DisplayListTag {\n\t\tactionBlocksPrecedence?: number;\n\t\tsymbolId?: number;\n\t\tflags: number;\n\t\tmatrix?: Matrix;\n\t\tcxform?: ColorTransform;\n\t\tclassName?: string;\n\t\tratio?: number;\n\t\tname?: string;\n\t\tclipDepth?: number;\n\t\tfilters?: any[];\n\t\tblendMode?: number;\n\t\tbmpCache?: number;\n\t\tvisibility?: boolean;\n\t\tbackgroundColor?: number;\n\t\tevents?: ClipEvents[];\n\t}\n\n\texport const enum PlaceObjectFlags {\n\t\tMove = 0x0001,\n\t\tHasCharacter = 0x0002,\n\t\tHasMatrix = 0x0004,\n\t\tHasColorTransform = 0x0008,\n\t\tHasRatio = 0x0010,\n\t\tHasName = 0x0020,\n\t\tHasClipDepth = 0x0040,\n\t\tHasClipActions = 0x0080,\n\t\tHasFilterList = 0x0100,\n\t\tHasBlendMode = 0x0200,\n\t\tHasCacheAsBitmap = 0x0400,\n\t\tHasClassName = 0x0800,\n\t\tHasImage = 0x1000,\n\t\tHasVisible = 0x2000,\n\t\tOpaqueBackground = 0x4000,\n\t\tReserved = 0x8000\n\t}\n\n\texport const enum AVM1ClipEvents {\n\t\tLoad = 0x00001,\n\t\tEnterFrame = 0x00002,\n\t\tUnload = 0x00004,\n\t\tMouseMove = 0x00008,\n\t\tMouseDown = 0x00010,\n\t\tMouseUp = 0x00020,\n\t\tKeyDown = 0x00040,\n\t\tKeyUp = 0x00080,\n\t\tData = 0x00100,\n\t\tInitialize = 0x00200,\n\t\tPress = 0x00400,\n\t\tRelease = 0x00800,\n\t\tReleaseOutside = 0x01000,\n\t\tRollOver = 0x02000,\n\t\tRollOut = 0x04000,\n\t\tDragOver = 0x08000,\n\t\tDragOut = 0x10000,\n\t\tKeyPress = 0x20000,\n\t\tConstruct = 0x40000\n\t}\n\n\texport interface ClipEvents {\n\t\tflags: number;\n\t\tkeyCode?: number;\n\t\tactionsBlock: Uint8Array;\n\t}\n\n\texport interface Filter {\n\t\ttype: number;\n\t}\n\n\texport interface GlowFilter extends Filter {\n\t\tcolors: number[];\n\t\tratios?: number[];\n\t\tblurX: number;\n\t\tblurY: number;\n\t\tangle?: number;\n\t\tdistance?: number;\n\t\tstrength: number;\n\t\tinner: boolean;\n\t\tknockout: boolean;\n\t\tcompositeSource: boolean;\n\t\tonTop?: boolean;\n\t\tquality: number;\n\t}\n\n\texport interface BlurFilter extends Filter {\n\t\tblurX: number;\n\t\tblurY: number;\n\t\tquality: number;\n\t}\n\n\texport interface ConvolutionFilter extends Filter {\n\t\tmatrixX: number;\n\t\tmatrixY: number;\n\t\tdivisor: number;\n\t\tbias: number;\n\t\tmatrix: number[];\n\t\tcolor: number;\n\t\tclamp: boolean;\n\t\tpreserveAlpha: boolean;\n\t}\n\n\texport interface ColorMatrixFilter extends Filter {\n\t\tmatrix: number[];\n\t}\n\n\texport interface RemoveObjectTag extends DisplayListTag {\n\t\tdepth: number;\n\t\tsymbolId?: number;\n\t}\n\n\texport interface ImageTag extends DefinitionTag {\n\t\tdeblock?: number;\n\t\timgData: Uint8Array;\n\t\talphaData?: Uint8Array;\n\t\tmimeType: string;\n\t\tjpegTables?: { data: Uint8Array };\n\t}\n\n\texport interface ButtonTag extends DefinitionTag {\n\t\tcharacters?: ButtonCharacter[];\n\t\tactionsData?: Uint8Array;\n\t\ttrackAsMenu?: boolean;\n\t\tbuttonActions?: ButtonCondAction[];\n\t}\n\n\texport interface ButtonCharacter {\n\t\tflags: number;\n\t\tsymbolId?: number;\n\t\tdepth?: number;\n\t\tmatrix?: Matrix;\n\t\tcxform?: ColorTransform;\n\t\tfilters?: Filter[];\n\t\tblendMode?: number;\n\t\tbuttonActions?: ButtonCondAction[];\n\t}\n\n\texport const enum ButtonCharacterFlags {\n\t\tStateUp = 0x01,\n\t\tStateOver = 0x02,\n\t\tStateDown = 0x04,\n\t\tStateHitTest = 0x08,\n\t\tHasFilterList = 0x10,\n\t\tHasBlendMode = 0x20\n\t}\n\n\texport interface ButtonCondAction {\n\t\tkeyCode: number;\n\t\tstateTransitionFlags: number;\n\t\tactionsData: Uint8Array;\n\t}\n\n\texport interface BinaryDataTag extends DefinitionTag {\n\t\tdata: Uint8Array;\n\t}\n\n\texport interface FontTag extends DefinitionTag {\n\t\tflags: number;\n\t\tlanguage?: number;\n\t\tname?: string;\n\t\tcopyright?: string;\n\t\tresolution?: number;\n\t\toffsets?: number[];\n\t\tmapOffset?: number;\n\t\tglyphs?: Glyph[];\n\t\tcodes?: number[];\n\t\tascent?: number;\n\t\tdescent?: number;\n\t\tleading?: number;\n\t\tadvance?: number[];\n\t\tbbox?: Bbox[];\n\t\tkerning?: Kerning[];\n\t\tdata?: Uint8Array;\n\t}\n\n\texport const enum FontFlags {\n\t\tBold = 0x01,\n\t\tItalic = 0x02,\n\t\tWideOrHasFontData = 0x04,\n\t\tWideOffset = 0x08,\n\t\tAnsi = 0x10,\n\t\tSmallText = 0x20,\n\t\tShiftJis = 0x40,\n\t\tHasLayout = 0x80\n\t}\n\n\texport type Glyph = ShapeRecord[];\n\n\texport interface StaticTextTag extends DefinitionTag {\n\t\tbbox: Bbox;\n\t\tmatrix: Matrix;\n\t\trecords: TextRecord[];\n\t}\n\n\texport interface TextRecord {\n\t\tflags: number;\n\t\tfontId?: number;\n\t\tcolor?: number;\n\t\tmoveX?: number;\n\t\tmoveY?: number;\n\t\tfontHeight?: number;\n\t\tglyphCount?: number;\n\t\tentries?: TextEntry[];\n\t}\n\n\texport const enum TextRecordFlags {\n\t\tHasMoveX = 0x01,\n\t\tHasMoveY = 0x02,\n\t\tHasColor = 0x04,\n\t\tHasFont = 0x08\n\t}\n\n\texport interface TextEntry {\n\t\tglyphIndex: number;\n\t\tadvance: number;\n\t}\n\n\texport interface SoundTag extends DefinitionTag {\n\t\tsoundFormat: number;\n\t\tsoundRate: number;\n\t\tsoundSize: number;\n\t\tsoundType: number;\n\t\tsamplesCount: number;\n\t\tsoundData: Uint8Array;\n\t}\n\n\texport interface StartSoundTag extends SwfTag {\n\t\tsoundId?: number;\n\t\tsoundClassName?: string;\n\t\tsoundInfo: SoundInfo;\n\t}\n\n\texport interface SoundInfo {\n\t\tflags: number;\n\t\tinPoint?: number;\n\t\toutPoint?: number;\n\t\tloopCount?: number;\n\t\tenvelopes?: SoundEnvelope[];\n\t}\n\n\texport const enum SoundInfoFlags {\n\t\tHasInPoint = 0x01,\n\t\tHasOutPoint = 0x02,\n\t\tHasLoops = 0x04,\n\t\tHasEnvelope = 0x08,\n\t\tNoMultiple = 0x10,\n\t\tStop = 0x20\n\t}\n\n\texport interface SoundEnvelope {\n\t\tpos44: number;\n\t\tvolumeLeft: number;\n\t\tvolumeRight: number;\n\t}\n\n\texport interface SoundStreamHeadTag {\n\t\tplaybackRate: number;\n\t\tplaybackSize: number;\n\t\tplaybackType: number;\n\t\tstreamCompression: number;\n\t\tstreamRate: number;\n\t\tstreamSize: number;\n\t\tstreamType: number;\n\t\tsamplesCount: number;\n\t\tlatencySeek?: number;\n\t}\n\n\texport interface BitmapTag extends DefinitionTag {\n\t\tformat: number;\n\t\twidth: number;\n\t\theight: number;\n\t\thasAlpha: boolean;\n\t\t// Number of color table entries - 1, not size in bytes.\n\t\tcolorTableSize?: number;\n\t\tbmpData: Uint8Array;\n\t}\n\n\texport interface TextTag extends DefinitionTag {\n\t\tbbox: Bbox;\n\t\tflags: number;\n\t\tfontId?: number;\n\t\tfontClass?: string;\n\t\tfontHeight?: number;\n\t\tcolor?: number;\n\t\tmaxLength?: number;\n\t\talign?: number;\n\t\tleftMargin?: number;\n\t\trightMargin?: number;\n\t\tindent?: number;\n\t\tleading?: number;\n\t\tvariableName: string;\n\t\tinitialText?: string;\n\t}\n\n\texport const enum TextFlags {\n\t\tHasFont = 0x0001,\n\t\tHasMaxLength = 0x0002,\n\t\tHasColor = 0x0004,\n\t\tReadOnly = 0x0008,\n\t\tPassword = 0x0010,\n\t\tMultiline = 0x0020,\n\t\tWordWrap = 0x0040,\n\t\tHasText = 0x0080,\n\t\tUseOutlines = 0x0100,\n\t\tHtml = 0x0200,\n\t\tWasStatic = 0x0400,\n\t\tBorder = 0x0800,\n\t\tNoSelect = 0x1000,\n\t\tHasLayout = 0x2000,\n\t\tAutoSize = 0x4000,\n\t\tHasFontClass = 0x8000\n\t}\n\n\texport interface Kerning {\n\t\tcode1: number;\n\t\tcode2: number;\n\t\tadjustment: number;\n\t}\n\n\texport interface ScalingGridTag extends SwfTag {\n\t\tsymbolId: number;\n\t\tsplitter: Bbox;\n\t}\n\n\texport interface SceneTag extends SwfTag {\n\t\tscenes: Scene[];\n\t\tlabels: Label[];\n\t}\n\n\texport interface Scene {\n\t\toffset: number;\n\t\tname: string;\n\t}\n\n\texport interface Label {\n\t\tframe: number;\n\t\tname: string;\n\t}\n\n\texport interface ShapeTag extends DefinitionTag {\n\t\tlineBounds: Bbox;\n\t\tlineBoundsMorph?: Bbox;\n\t\tfillBounds?: Bbox;\n\t\tfillBoundsMorph?: Bbox;\n\t\tflags: number;\n\t\tfillStyles: FillStyle[];\n\t\tlineStyles: LineStyle[];\n\t\trecords: ShapeRecord[];\n\t\trecordsMorph?: ShapeRecord[];\n\t}\n\n\texport const enum ShapeFlags {\n\t\tUsesScalingStrokes = 0x01,\n\t\tUsesNonScalingStrokes = 0x02,\n\t\tUsesFillWindingRule = 0x04,\n\t\tIsMorph = 0x08\n\t}\n\n\texport interface FillStyle {\n\t\ttype: number;\n\t}\n\n\texport interface SolidFill extends FillStyle {\n\t\tcolor: number;\n\t\tcolorMorph?: number;\n\t}\n\n\texport interface GradientFill extends FillStyle {\n\t\tmatrix: Matrix;\n\t\tmatrixMorph?: Matrix;\n\t\tspreadMode?: number;\n\t\tinterpolationMode?: number;\n\t\trecords: GradientRecord[];\n\t\tfocalPoint?: number;\n\t\tfocalPointMorph?: number;\n\t}\n\n\texport interface GradientRecord {\n\t\tratio: number;\n\t\tcolor: number;\n\t\tratioMorph?: number;\n\t\tcolorMorph?: number;\n\t}\n\n\texport interface BitmapFill extends FillStyle {\n\t\tbitmapId: number;\n\t\tcondition: boolean;\n\t\tmatrix: Matrix;\n\t\tmatrixMorph?: Matrix;\n\t}\n\n\texport interface LineStyle {\n\t\twidth: number;\n\t\twidthMorph?: number;\n\t\tstartCapsStyle?: number;\n\t\tjointStyle?: number;\n\t\thasFill?: number;\n\t\tnoHscale?: boolean;\n\t\tnoVscale?: boolean;\n\t\tpixelHinting?: boolean;\n\t\tnoClose?: boolean;\n\t\tendCapsStyle?: number;\n\t\tmiterLimitFactor?: number;\n\t\tfillStyle?: FillStyle;\n\t\tcolor?: number;\n\t\tcolorMorph?: number;\n\t}\n\n\texport interface ShapeRecord {\n\t\ttype: number;\n\t\tflags: number;\n\t\tdeltaX?: number;\n\t\tdeltaY?: number;\n\t\tcontrolDeltaX?: number;\n\t\tcontrolDeltaY?: number;\n\t\tanchorDeltaX?: number;\n\t\tanchorDeltaY?: number;\n\t\tmoveX?: number;\n\t\tmoveY?: number;\n\t\tfillStyle0?: number;\n\t\tfillStyle1?: number;\n\t\tlineStyle?: number;\n\t\tfillStyles?: FillStyle[];\n\t\tlineStyles?: LineStyle[];\n\t\tlineBits?: number;\n\t\tfillBits?: number;\n\t}\n\n\texport const enum ShapeRecordFlags {\n\t\tMove = 0x01,\n\t\tHasFillStyle0 = 0x02,\n\t\tHasFillStyle1 = 0x04,\n\t\tHasLineStyle = 0x08,\n\t\tHasNewStyles = 0x10,\n\t\tIsStraight = 0x20,\n\t\tIsGeneral = 0x40,\n\t\tIsVertical = 0x80\n\t}\n\n\texport interface VideoStreamTag extends DefinitionTag {\n\t\tnumFrames: number;\n\t\twidth: number;\n\t\theight: number;\n\t\tdeblocking: number;\n\t\tsmoothing: boolean;\n\t\tcodecId: number;\n\t}\n\n\texport interface VideoFrameTag extends SwfTag {\n\t\tstreamId: number;\n\t\tframeNum: number;\n\t\tvideoData: Uint8Array;\n\t}\n}\n","/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway {\n\tdeclare let XMLHttpRequest: any;\n\timport unexpected = Shumway.Debug.unexpected;\n\n\texport interface BinaryFileReaderProgressInfo {\n\t\tloaded: number;\n\t\ttotal: number;\n\t}\n\n\texport class BinaryFileReader {\n\t\turl: string;\n\t\tmethod: string;\n\t\tmimeType: string;\n\t\tdata: any;\n\t\txhr: XMLHttpRequest;\n\n\t\tconstructor(url: string, method?: string, mimeType?: string, data?: any) {\n\t\t\tthis.url = url;\n\t\t\tthis.method = method;\n\t\t\tthis.mimeType = mimeType;\n\t\t\tthis.data = data;\n\t\t}\n\n\t\treadAll(progress: (response: any, loaded: number, total: number) => void,\n\t\t        complete: (response: any, error?: any) => void) {\n\t\t\tlet url = this.url;\n\t\t\tlet xhr = this.xhr = new XMLHttpRequest({mozSystem: true});\n\t\t\tlet async = true;\n\t\t\txhr.open(this.method || \"GET\", this.url, async);\n\t\t\txhr.responseType = \"arraybuffer\";\n\t\t\tif (progress) {\n\t\t\t\txhr.onprogress = function (event: any) {\n\t\t\t\t\tprogress(xhr.response, event.loaded, event.total);\n\t\t\t\t};\n\t\t\t}\n\t\t\txhr.onreadystatechange = function (event: any) {\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\tif (xhr.status !== 200 && xhr.status !== 0 || xhr.response === null) {\n\t\t\t\t\t\tunexpected(\"Path: \" + url + \" not found.\");\n\t\t\t\t\t\tcomplete(null, xhr.statusText);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcomplete(xhr.response);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (this.mimeType) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", this.mimeType);\n\t\t\t}\n\t\t\txhr.send(this.data || null);\n\t\t}\n\n\t\treadChunked(chunkSize: number /* int */,\n\t\t            ondata: (data: Uint8Array, progress: BinaryFileReaderProgressInfo) => void,\n\t\t            onerror: (err: any) => void,\n\t\t            onopen?: () => void,\n\t\t            oncomplete?: () => void,\n\t\t            onhttpstatus?: (location: string, status: string, responseHeaders: any) => void) {\n\t\t\tif (chunkSize <= 0) {\n\t\t\t\tthis.readAsync(ondata, onerror, onopen, oncomplete, onhttpstatus);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet position = 0;\n\t\t\tlet buffer = new Uint8Array(chunkSize);\n\t\t\tlet read = 0, total: number;\n\t\t\tthis.readAsync(\n\t\t\t\tfunction (data: Uint8Array, progress: BinaryFileReaderProgressInfo) {\n\t\t\t\t\ttotal = progress.total;\n\t\t\t\t\tlet left = data.length, offset = 0;\n\t\t\t\t\twhile (position + left >= chunkSize) {\n\t\t\t\t\t\tlet tailSize = chunkSize - position;\n\t\t\t\t\t\tbuffer.set(data.subarray(offset, offset + tailSize), position);\n\t\t\t\t\t\toffset += tailSize;\n\t\t\t\t\t\tleft -= tailSize;\n\t\t\t\t\t\tread += chunkSize;\n\t\t\t\t\t\tondata(buffer, {loaded: read, total: total});\n\t\t\t\t\t\tposition = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbuffer.set(data.subarray(offset), position);\n\t\t\t\t\tposition += left;\n\t\t\t\t},\n\t\t\t\tonerror,\n\t\t\t\tonopen,\n\t\t\t\tfunction () {\n\t\t\t\t\tif (position > 0) {\n\t\t\t\t\t\tread += position;\n\t\t\t\t\t\tondata(buffer.subarray(0, position), {loaded: read, total: total});\n\t\t\t\t\t\tposition = 0;\n\t\t\t\t\t}\n\t\t\t\t\toncomplete && oncomplete();\n\t\t\t\t},\n\t\t\t\tonhttpstatus);\n\t\t}\n\n\t\treadAsync(ondata: (data: Uint8Array, progress: BinaryFileReaderProgressInfo) => void,\n\t\t          onerror: (err: any) => void,\n\t\t          onopen?: () => void,\n\t\t          oncomplete?: () => void,\n\t\t          onhttpstatus?: (location: string, status: string, responseHeaders: any) => void) {\n\t\t\tlet xhr = this.xhr = new XMLHttpRequest({mozSystem: true});\n\t\t\tlet url = this.url;\n\t\t\tlet loaded = 0;\n\t\t\tlet total = 0;\n\t\t\txhr.open(this.method || \"GET\", url, true);\n\t\t\txhr.responseType = 'moz-chunked-arraybuffer';\n\t\t\tlet isNotProgressive = xhr.responseType !== 'moz-chunked-arraybuffer';\n\t\t\tif (isNotProgressive) {\n\t\t\t\txhr.responseType = 'arraybuffer';\n\t\t\t}\n\t\t\txhr.onprogress = function (e: any) {\n\t\t\t\tif (isNotProgressive) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tloaded = e.loaded;\n\t\t\t\ttotal = e.total;\n\t\t\t\tlet bytes = new Uint8Array(xhr.response);\n\t\t\t\t// The event's `loaded` and `total` properties are sometimes lower than the actual\n\t\t\t\t// number of loaded bytes. In that case, increase them to that value.\n\t\t\t\tloaded = Math.max(loaded, bytes.byteLength);\n\t\t\t\ttotal = Math.max(total, bytes.byteLength);\n\t\t\t\tondata(bytes, {loaded: loaded, total: total});\n\t\t\t};\n\t\t\txhr.onreadystatechange = function (event: any) {\n\t\t\t\tif (xhr.readyState === 2 && onhttpstatus) {\n\t\t\t\t\tonhttpstatus(url, xhr.status, xhr.getAllResponseHeaders());\n\t\t\t\t}\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\t// Failed loads can be detected through either the status code or the fact that nothing\n\t\t\t\t\t// has been loaded.\n\t\t\t\t\t// Note: Just checking that `xhr.response` is set doesn't work, as Firefox enables\n\t\t\t\t\t// chunked loading, and in that mode `response` is only set in the `onprogress` handler.\n\t\t\t\t\tif (xhr.status !== 200 && xhr.status !== 0 ||\n\t\t\t\t\t\txhr.response === null && (total === 0 || loaded !== total)) {\n\t\t\t\t\t\tonerror(xhr.statusText);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (isNotProgressive) {\n\t\t\t\t\t\tlet buffer = xhr.response;\n\t\t\t\t\t\tondata(new Uint8Array(buffer), {loaded: buffer.byteLength, total: buffer.byteLength});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.onload = function () {\n\t\t\t\tif (oncomplete) {\n\t\t\t\t\toncomplete();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (this.mimeType) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", this.mimeType);\n\t\t\t}\n\t\t\txhr.send(this.data || null);\n\t\t\tif (onopen) {\n\t\t\t\tonopen();\n\t\t\t}\n\t\t}\n\n\t\tabort() {\n\t\t\tif (this.xhr) {\n\t\t\t\tthis.xhr.abort();\n\t\t\t\tthis.xhr = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n","/*\n * Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway {\n\t// Produces similar output as flashlog.txt It can be produced by the\n\t// debug builds of Flash Player.\n\t// See https://github.com/mozilla/shumway/wiki/Trace-Output-with-Flash-Player-Debugger\n\texport class FlashLog {\n\t\tpublic isAS3TraceOn: boolean = true;\n\n\t\tprivate _startTime: number;\n\n\t\tpublic constructor() {\n\t\t\tthis._startTime = Date.now();\n\t\t}\n\n\t\tpublic get currentTimestamp(): number {\n\t\t\treturn Date.now() - this._startTime;\n\t\t}\n\n\t\t_writeLine(line: string): void {\n\t\t\tDebug.abstractMethod('FlashLog._writeLine');\n\t\t}\n\n\t\tpublic writeAS3Trace(msg: string): void {\n\t\t\tif (this.isAS3TraceOn) {\n\t\t\t\tthis._writeLine(this.currentTimestamp + ' AVMINF: ' + msg);\n\t\t\t}\n\t\t}\n\t}\n\n\texport let flashlog: FlashLog = null;\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule Shumway.Remoting {\n\timport DataBuffer = Shumway.ArrayUtilities.DataBuffer;\n\n\texport interface IRemotable {\n\t\t_id: number;\n\t}\n\n\t/**\n\t * Remoting phases.\n\t */\n\texport const enum RemotingPhase {\n\t\t/**\n\t\t * Objects are serialized. During this phase all reachable remotable objects (all objects\n\t\t * reachable from a root set) that are dirty are remoted. This includes all dirty object\n\t\t * properties except for dirty references.\n\t\t */\n\t\tObjects,\n\n\t\t/**\n\t\t * Object references are serialized. All objects that are referred to have already been\n\t\t * remoted at this point.\n\t\t */\n\t\tReferences\n\t}\n\n\texport const enum MessageBits {\n\t\tHasMatrix = 0x0001,\n\t\tHasBounds = 0x0002,\n\t\tHasChildren = 0x0004,\n\t\tHasColorTransform = 0x0008,\n\t\tHasClipRect = 0x0010,\n\t\tHasMiscellaneousProperties = 0x0020,\n\t\tHasMask = 0x0040,\n\t\tHasClip = 0x0080\n\t}\n\n\texport const enum IDMask {\n\t\tNone = 0x00000000,\n\t\tAsset = 0x08000000\n\t}\n\n\t/**\n\t * Serialization Format. All commands start with a message tag.\n\t */\n\texport const enum MessageTag {\n\t\tEOF = 0,\n\n\t\t/**\n\t\t * id                   int32,\n\t\t * hasBits              int32,\n\t\t * matrix               Matrix,\n\t\t * colorMatrix          ColorMatrix,\n\t\t * mask                 int32,\n\t\t * misc\n\t\t *   blendMode          int32,\n\t\t *   visible            int32\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tUpdateFrame = 100,\n\t\tUpdateGraphics = 101,\n\t\tUpdateBitmapData = 102,\n\t\tUpdateTextContent = 103,\n\t\tUpdateStage = 104,\n\t\tUpdateNetStream = 105,\n\t\tRequestBitmapData = 106,\n\t\tUpdateCurrentMouseTarget = 107,\n\n\t\tDrawToBitmap = 200,\n\n\t\tMouseEvent = 300,\n\t\tKeyboardEvent = 301,\n\t\tFocusEvent = 302\n\t}\n\n\texport enum FilterType {\n\t\tBlur,\n\t\tDropShadow,\n\t\tColorMatrix\n\t}\n\n\t/**\n\t * Dictates how color transforms are encoded. The majority of color transforms are\n\t * either identity or only modify the alpha multiplier, so we can encode these more\n\t * efficiently.\n\t */\n\texport const enum ColorTransformEncoding {\n\t\t/**\n\t\t * Identity, no need to serialize all the fields.\n\t\t */\n\t\tIdentity = 0,\n\n\t\t/**\n\t\t * Identity w/ AlphaMultiplier, only the alpha multiplier is serialized.\n\t\t */\n\t\tAlphaMultiplierOnly = 1,\n\n\t\t/**\n\t\t * Offsets w/ AlphaMultiplier.\n\t\t */\n\t\tAlphaMultiplierWithOffsets = 2,\n\n\t\t/**\n\t\t * All fields are serialized.\n\t\t */\n\t\tAll = 3\n\t}\n\n\t/**\n\t * Dictates how matrices are encoded.\n\t */\n\texport const enum MatrixEncoding {\n\t\t/**\n\t\t * Translation only.\n\t\t */\n\t\tTranslationOnly = 0,\n\n\t\t/**\n\t\t * Scale and translation only.\n\t\t */\n\t\tScaleAndTranslationOnly = 1,\n\n\t\t/**\n\t\t * Uniform scale in the x and y direction and translation only.\n\t\t */\n\t\tUniformScaleAndTranslationOnly = 2,\n\n\t\t/**\n\t\t * All fields are serialized.\n\t\t */\n\t\tAll = 3\n\t}\n\n\texport const enum VideoPlaybackEvent {\n\t\tInitialized = 0,\n\t\tMetadata = 1,\n\t\tPlayStart = 2,\n\t\tPlayStop = 3,\n\t\tBufferEmpty = 4,\n\t\tBufferFull = 5,\n\t\tPause = 6,\n\t\tUnpause = 7,\n\t\tSeeking = 8,\n\t\tSeeked = 9,\n\t\tProgress = 10,\n\t\tError = 11,\n\t}\n\n\texport const enum VideoControlEvent {\n\t\tInit = 1,\n\t\tPause = 2,\n\t\tSeek = 3,\n\t\tGetTime = 4,\n\t\tGetBufferLength = 5,\n\t\tSetSoundLevels = 6,\n\t\tGetBytesLoaded = 7,\n\t\tGetBytesTotal = 8,\n\t\tEnsurePlaying = 9,\n\t}\n\n\texport const enum StageScaleMode {\n\t\tShowAll = 0,\n\t\tExactFit = 1,\n\t\tNoBorder = 2,\n\t\tNoScale = 4\n\t}\n\n\texport const enum StageAlignFlags {\n\t\tNone = 0,\n\t\tTop = 1,\n\t\tBottom = 2,\n\t\tLeft = 4,\n\t\tRight = 8,\n\n\t\tTopLeft = Top | Left,\n\t\tBottomLeft = Bottom | Left,\n\t\tBottomRight = Bottom | Right,\n\t\tTopRight = Top | Right\n\t}\n\n\texport let MouseEventNames: string[] = [\n\t\t'click',\n\t\t'dblclick',\n\t\t'mousedown',\n\t\t'mousemove',\n\t\t'mouseup',\n\t\t'mouseover',\n\t\t'mouseout'\n\t];\n\n\texport let KeyboardEventNames: string[] = [\n\t\t'keydown',\n\t\t'keypress',\n\t\t'keyup'\n\t];\n\n\texport const enum KeyboardEventFlags {\n\t\tCtrlKey = 0x0001,\n\t\tAltKey = 0x0002,\n\t\tShiftKey = 0x0004\n\t}\n\n\texport const enum FocusEventType {\n\t\tDocumentHidden,\n\t\tDocumentVisible,\n\t\tWindowBlur,\n\t\tWindowFocus\n\t}\n\n\texport interface DisplayParameters {\n\t\tstageWidth: number;\n\t\tstageHeight: number;\n\t\tpixelRatio: number;\n\t\tscreenWidth: number;\n\t\tscreenHeight: number;\n\t}\n\n\texport interface IGFXServiceObserver {\n\t\tdisplayParameters(displayParameters: DisplayParameters): void;\n\n\t\tfocusEvent(data: any): void;\n\n\t\tkeyboardEvent(data: any): void;\n\n\t\tmouseEvent(data: any): void;\n\n\t\tvideoEvent(id: number, eventType: VideoPlaybackEvent, data: any): void;\n\t}\n\n\texport interface IGFXService {\n\t\taddObserver(observer: IGFXServiceObserver): void;\n\n\t\tremoveObserver(observer: IGFXServiceObserver): void;\n\n\t\tupdate(updates: DataBuffer, assets: Array<DataBuffer>): void;\n\n\t\tupdateAndGet(updates: DataBuffer, assets: Array<DataBuffer>): any;\n\n\t\tframe(): void;\n\n\t\tvideoControl(id: number, eventType: VideoControlEvent, data: any): any;\n\n\t\tregisterFont(syncId: number, data: Uint8Array): Promise<any>;\n\n\t\tregisterImage(syncId: number, symbolId: number, imageType: ImageType,\n\t\t              data: Uint8Array, alphaData: Uint8Array): Promise<any>;\n\n\t\tfscommand(command: string, args: string): void;\n\t}\n\n\t/**\n\t * Messaging peer for sending data synchronously and asynchronously. Currently\n\t * used by GFX and Player iframes.\n\t */\n\texport interface ITransportPeer {\n\t\tonAsyncMessage: (msg: any) => void;\n\t\tonSyncMessage: (msg: any) => any;\n\n\t\tpostAsyncMessage(msg: any, transfers?: any[]): void;\n\n\t\tsendSyncMessage(msg: any, transfers?: any[]): any;\n\t}\n\n\t/**\n\t * Implementation of ITransportPeer that uses standard DOM postMessage and\n\t * events to exchange data between messaging peers.\n\t */\n\texport class WindowTransportPeer implements ITransportPeer {\n\t\tset onAsyncMessage(callback: (msg: any) => void) {\n\t\t\tthis.window.addEventListener('message', function (e) {\n\t\t\t\tPromise.resolve(e.data).then(function (msg) { // delay\n\t\t\t\t\tcallback(msg);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tset onSyncMessage(callback: (msg: any) => any) {\n\t\t\tthis.window.addEventListener('syncmessage', function (e) {\n\t\t\t\tlet wrappedMessage = (<any>e).detail;\n\t\t\t\twrappedMessage.result = callback(wrappedMessage.msg);\n\t\t\t});\n\t\t}\n\n\t\tconstructor(public window: Window, public target: Window) {\n\t\t\t//\n\t\t}\n\n\t\tpostAsyncMessage(msg: any, transfers?: any[]): void {\n\t\t\tthis.target.postMessage(msg, '*', transfers);\n\t\t}\n\n\t\tsendSyncMessage(msg: any, transfers?: any[]): any {\n\t\t\tlet event = this.target.document.createEvent('CustomEvent');\n\t\t\tlet wrappedMessage = {\n\t\t\t\tmsg: msg,\n\t\t\t\tresult: undefined as any\n\t\t\t};\n\t\t\tevent.initCustomEvent('syncmessage', false, false, wrappedMessage);\n\t\t\tthis.target.dispatchEvent(event);\n\t\t\treturn wrappedMessage.result;\n\t\t}\n\t}\n\n\t/**\n\t * Implementation of ITransportPeer that uses ShumwayCom API to exchange data\n\t * between messaging peers.\n\t */\n\texport class ShumwayComTransportPeer implements ITransportPeer {\n\t\tset onAsyncMessage(callback: (msg: any) => void) {\n\t\t\tShumwayCom.setAsyncMessageCallback(callback);\n\t\t}\n\n\t\tset onSyncMessage(callback: (msg: any) => any) {\n\t\t\tShumwayCom.setSyncMessageCallback(callback);\n\t\t}\n\n\t\tpostAsyncMessage(msg: any, transfers?: any[]): void {\n\t\t\tShumwayCom.postAsyncMessage(msg);\n\t\t}\n\n\t\tsendSyncMessage(msg: any, transfers?: any[]): any {\n\t\t\treturn ShumwayCom.sendSyncMessage(msg);\n\t\t}\n\t}\n}\n","/*\n * Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet ShumwayEnvironment = {\n\tDEBUG: 'test',\n\tDEVELOPMENT: 'dev',\n\tRELEASE: 'release',\n\tTEST: 'test'\n};\n\ndeclare let ShumwayCom: {\n\tenvironment: string // ShumwayEnvironment;\n\n\tcreateSpecialInflate?: () => SpecialInflate;\n\tcreateRtmpSocket?: (options: { host: string; port: number; ssl: boolean }) => RtmpSocket;\n\tcreateRtmpXHR?: () => RtmpXHR;\n\n\tcreateSpecialStorage: () => SpecialStorage;\n\tgetWeakMapKeys: (weakMap: any) => Array<any>;\n\tfallback: () => void;\n\treportIssue: (details?: string) => void;\n\treportTelemetry: (data: any) => void;\n\tenableDebug: () => void;\n\tgetPluginParams: () => any;\n\tgetSettings: () => any;\n\tsetClipboard: (data: string) => void;\n\tsetFullscreen: (enabled: boolean) => void;\n\texternalCom: (args: any) => any;\n\tloadFile: (args: any) => void;\n\tabortLoad: (sessionId: number) => void;\n\tloadSystemResource: (id: number) => void;\n\tnavigateTo: (args: any) => void;\n\tsetupComBridge: (playerWindow: any) => void;\n\tsendSyncMessage: (data: any) => any;\n\tpostAsyncMessage: (data: any) => void;\n\n\tsetLoadFileCallback: (callback: (data: any) => void) => void;\n\tsetExternalCallback: (callback: (call: any) => any) => void;\n\tsetSystemResourceCallback: (callback: (id: number, data: any) => void) => void;\n\tsetSyncMessageCallback: (callback: (data: any) => any) => void;\n\tsetAsyncMessageCallback: (callback: (data: any) => void) => void;\n\n\tgetLocalConnectionService: () => LocalConnectionService;\n\n\tprocessFrame?: () => void;\n\tprocessFSCommand?: (command: string, args: any) => void;\n\tprint?: (msg: string) => void;\n};\n\ninterface SpecialStorage {\n\tgetItem(key: string): string;\n\n\tsetItem(key: string, value: string): void;\n\n\tremoveItem(key: string): void;\n}\n\ninterface SpecialInflate {\n\tsetDataCallback(callback: (data: Uint8Array) => void): void;\n\n\tpush(data: Uint8Array): void;\n\n\tclose(): void;\n}\n\ninterface LocalConnectionService {\n\tcreateLocalConnection: (connectionName: string,\n\t                        callback: (methodName: string, argsBuffer: ArrayBuffer) => any) => Shumway.LocalConnectionConnectResult;\n\thasLocalConnection: (connectionName: string) => boolean;\n\tcloseLocalConnection: (connectionName: string) => Shumway.LocalConnectionCloseResult;\n\tsendLocalConnectionMessage: (connectionName: string, methodName: string,\n\t                             argsBuffer: ArrayBuffer, sender: Shumway.ILocalConnectionSender,\n\t                             senderDomain: string, senderIsSecure: boolean) => void;\n\tallowDomainsForLocalConnection: (connectionName: string, domains: string[],\n\t                                 secure: boolean) => void;\n}\n\ninterface RtmpSocket {\n\tsetOpenCallback(callback: () => void): void;\n\n\tsetDataCallback(callback: (e: { data: ArrayBuffer }) => void): void;\n\n\tsetDrainCallback(callback: () => void): void;\n\n\tsetErrorCallback(callback: (e: any) => void): void;\n\n\tsetCloseCallback(callback: () => void): void;\n\n\tsend(buffer: ArrayBuffer, offset: number, count: number): boolean;\n\n\tclose(): void;\n}\n\ninterface RtmpXHR {\n\tstatus: number;\n\tresponse: any;\n\tresponseType: string;\n\n\tsetLoadCallback(callback: () => void): void;\n\n\tsetErrorCallback(callback: () => void): void;\n\n\topen(method: string, path: string, async?: boolean): void;\n\n\tsetRequestHeader(header: string, value: string): void;\n\n\tsend(data?: any): void;\n}\n","/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n///<reference path='utilities.ts' />\n///<reference path='options.ts' />\n///<reference path='settings.ts'/>\n///<reference path='metrics.ts' />\n///<reference path='deflate.ts' />\n///<reference path='lzma.ts' />\n///<reference path='dataBuffer.ts' />\n///<reference path='ShapeData.ts' />\n///<reference path='SWFTags.ts' />\n///<reference path='binaryFileReader.ts' />\n///<reference path='flashlog.ts' />\n///<reference path='remoting.ts' />\n///<reference path='external.ts' />\n\nlet throwError: (className: string, error: any, replacement1?: any,\n                 replacement2?: any, replacement3?: any, replacement4?: any) => void;\nlet Errors: any;\n"]}