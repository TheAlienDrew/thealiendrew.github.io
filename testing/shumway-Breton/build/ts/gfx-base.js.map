{"version":3,"file":"gfx-base.js","sourceRoot":"","sources":["../../src/gfx-base/module.ts","../../src/gfx-base/utilities.ts","../../src/gfx-base/settings.ts","../../src/gfx-base/geometry.ts","../../src/gfx-base/regionAllocator.ts","../../src/gfx-base/nodes.ts","../../src/gfx-base/renderables/renderables.ts","../../src/gfx-base/filters.ts","../../src/gfx-base/references.ts"],"names":[],"mappings":"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AI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEvB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7D,CAAC,CAAC,CAAC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","sourcesContent":["/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface CanvasRenderingContext2D {\n\tfilter: string;\n\tglobalColorMatrix: Shumway.GFX.ColorMatrix;\n\n\tflashStroke(path: Path2D, lineScaleMode: Shumway.LineScaleMode): void;\n}\n\ninterface CanvasGradient {\n\t_template: any;\n}\n\nmodule Shumway.GFX {\n\timport assert = Shumway.Debug.assert;\n\timport clamp = Shumway.NumberUtilities.clamp;\n\n\texport const enum TraceLevel {\n\t\tNone,\n\t\tBrief,\n\t\tVerbose,\n\t}\n\n\tlet counter = Shumway.Metrics.Counter.instance;\n\texport let frameCounter = new Shumway.Metrics.Counter(true);\n\n\texport let traceLevel = TraceLevel.Verbose;\n\texport let writer: IndentingWriter = null;\n\n\texport function frameCount(name: any) {\n\t\tcounter.count(name);\n\t\tframeCounter.count(name);\n\t}\n\n\texport let timelineBuffer = Shumway.Tools ? new Shumway.Tools.Profiler.TimelineBuffer(\"GFX\") : null;\n\n\texport function enterTimeline(name: string, data?: any) {\n\t\tprofile && timelineBuffer && timelineBuffer.enter(name, data);\n\t}\n\n\texport function leaveTimeline(name?: string, data?: any) {\n\t\tprofile && timelineBuffer && timelineBuffer.leave(name, data);\n\t}\n\n\tlet nativeAddColorStop: any = null;\n\tlet nativeCreateLinearGradient: any = null;\n\tlet nativeCreateRadialGradient: any = null;\n\n\t/**\n\t * Transforms a fill or stroke style by the given color matrix.\n\t */\n\tfunction transformStyle(context: CanvasRenderingContext2D, style: any, colorMatrix: Shumway.GFX.ColorMatrix): string {\n\t\tif (!polyfillColorTransform || !colorMatrix) {\n\t\t\treturn style;\n\t\t}\n\t\tif (typeof style === \"string\") {\n\t\t\t// Parse CSS color styles and transform them.\n\t\t\tlet rgba = Shumway.ColorUtilities.cssStyleToRGBA(style);\n\t\t\treturn Shumway.ColorUtilities.rgbaToCSSStyle(colorMatrix.transformRGBA(rgba));\n\t\t} else if (style instanceof CanvasGradient) {\n\t\t\tif (style._template) {\n\t\t\t\t// If gradient style has a template, construct a new gradient style from it whith\n\t\t\t\t// its color stops transformed.\n\t\t\t\treturn style._template.createCanvasGradient(context, colorMatrix);\n\t\t\t}\n\t\t}\n\t\treturn style; // \"#ff69b4\"\n\t}\n\n\t/**\n\t * Whether to polyfill color transforms. This adds a |globalColorMatrix| property on |CanvasRenderingContext2D|\n\t * that is used to transform all stroke and fill styles before a drawing operation happens.\n\t */\n\tlet polyfillColorTransform = true;\n\n\t/**\n\t * Gradients are opaque objects and their properties cannot be inspected. Here we hijack gradient style constructors\n\t * and attach \"template\" objects on gradients so that we can keep track of their position attributes and color stops.\n\t * Using these \"template\" objects, we can clone and transform gradients.\n\t */\n\tif (polyfillColorTransform && typeof CanvasRenderingContext2D !== 'undefined') {\n\t\tnativeAddColorStop = CanvasGradient.prototype.addColorStop;\n\t\tnativeCreateLinearGradient = CanvasRenderingContext2D.prototype.createLinearGradient;\n\t\tnativeCreateRadialGradient = CanvasRenderingContext2D.prototype.createRadialGradient;\n\n\t\tCanvasRenderingContext2D.prototype.createLinearGradient = function (x0: number, y0: number, x1: number, y1: number) {\n\t\t\tlet gradient = new CanvasLinearGradient(x0, y0, x1, y1);\n\t\t\treturn gradient.createCanvasGradient(this, null);\n\t\t};\n\n\t\tCanvasRenderingContext2D.prototype.createRadialGradient = function (x0: number, y0: number, r0: number, x1: number, y1: number, r1: number) {\n\t\t\tlet gradient = new CanvasRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\t\treturn gradient.createCanvasGradient(this, null);\n\t\t};\n\n\t\tCanvasGradient.prototype.addColorStop = function (offset: number, color: string) {\n\t\t\tnativeAddColorStop.call(this, offset, color);\n\t\t\tthis._template.addColorStop(offset, color);\n\t\t}\n\t}\n\n\tclass ColorStop {\n\t\tconstructor(public offset: number, public color: string) {\n\t\t\t// ...\n\t\t}\n\t}\n\n\t/**\n\t * Template for linear gradients.\n\t */\n\tclass CanvasLinearGradient {\n\t\t_transform: SVGMatrix;\n\n\t\tconstructor(public x0: number, public y0: number,\n\t\t            public x1: number, public y1: number) {\n\t\t\t// ...\n\t\t}\n\n\t\tcolorStops: ColorStop [] = [];\n\n\t\taddColorStop(offset: number, color: string) {\n\t\t\tthis.colorStops.push(new ColorStop(offset, color));\n\t\t}\n\n\t\tcreateCanvasGradient(context: CanvasRenderingContext2D, colorMatrix: Shumway.GFX.ColorMatrix): CanvasGradient {\n\t\t\tlet gradient = nativeCreateLinearGradient.call(context, this.x0, this.y0, this.x1, this.y1);\n\t\t\tlet colorStops = this.colorStops;\n\t\t\tfor (let i = 0; i < colorStops.length; i++) {\n\t\t\t\tlet colorStop = colorStops[i];\n\t\t\t\tlet offset = colorStop.offset;\n\t\t\t\tlet color = colorStop.color;\n\t\t\t\tcolor = colorMatrix ? transformStyle(context, color, colorMatrix) : color;\n\t\t\t\tnativeAddColorStop.call(gradient, offset, color);\n\t\t\t}\n\t\t\tgradient._template = this;\n\t\t\tgradient._transform = this._transform;\n\t\t\treturn gradient;\n\t\t}\n\t}\n\n\t/**\n\t * Template for radial gradients.\n\t */\n\tclass CanvasRadialGradient {\n\t\t_transform: SVGMatrix;\n\n\t\tconstructor(public x0: number, public y0: number, public r0: number,\n\t\t            public x1: number, public y1: number, public r1: number) {\n\t\t\t// ...\n\t\t}\n\n\t\tcolorStops: ColorStop [] = [];\n\n\t\taddColorStop(offset: number, color: string) {\n\t\t\tthis.colorStops.push(new ColorStop(offset, color));\n\t\t}\n\n\t\tcreateCanvasGradient(context: CanvasRenderingContext2D, colorMatrix: Shumway.GFX.ColorMatrix): CanvasGradient {\n\t\t\tlet gradient = nativeCreateRadialGradient.call(context, this.x0, this.y0, this.r0, this.x1, this.y1, this.r1);\n\t\t\tlet colorStops = this.colorStops;\n\t\t\tfor (let i = 0; i < colorStops.length; i++) {\n\t\t\t\tlet colorStop = colorStops[i];\n\t\t\t\tlet offset = colorStop.offset;\n\t\t\t\tlet color = colorStop.color;\n\t\t\t\tcolor = colorMatrix ? transformStyle(context, color, colorMatrix) : color;\n\t\t\t\tnativeAddColorStop.call(gradient, offset, color);\n\t\t\t}\n\t\t\tgradient._template = this;\n\t\t\tgradient._transform = this._transform;\n\t\t\treturn gradient;\n\t\t}\n\t}\n\n\tenum PathCommand {\n\t\tClosePath = 1,\n\t\tMoveTo,\n\t\tLineTo,\n\t\tQuadraticCurveTo,\n\t\tBezierCurveTo,\n\t\tArcTo,\n\t\tRect,\n\t\tArc,\n\t\tSave,\n\t\tRestore,\n\t\tTransform\n\t}\n\n\t/**\n\t * Polyfill for missing |Path2D|. An instance of this class keeps a record of all drawing commands\n\t * ever called on it.\n\t */\n\texport class Path {\n\t\tprivate _commands: Uint8Array;\n\t\tprivate _commandPosition: number;\n\t\tprivate _data: Float64Array;\n\t\tprivate _dataPosition: number;\n\n\t\tprivate static _arrayBufferPool = new ArrayBufferPool();\n\n\t\t/**\n\t\t * Takes a |Path2D| instance and a 2d context to replay the recorded drawing commands.\n\t\t */\n\t\tstatic _apply(path: Path, context: CanvasRenderingContext2D) {\n\t\t\tlet commands = path._commands;\n\t\t\tlet d = path._data;\n\t\t\tlet i = 0;\n\t\t\tlet j = 0;\n\t\t\tcontext.beginPath();\n\t\t\tlet commandPosition = path._commandPosition;\n\t\t\twhile (i < commandPosition) {\n\t\t\t\tswitch (commands[i++]) {\n\t\t\t\t\tcase PathCommand.ClosePath:\n\t\t\t\t\t\tcontext.closePath();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.MoveTo:\n\t\t\t\t\t\tcontext.moveTo(d[j++], d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineTo:\n\t\t\t\t\t\tcontext.lineTo(d[j++], d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.QuadraticCurveTo:\n\t\t\t\t\t\tcontext.quadraticCurveTo(d[j++], d[j++], d[j++], d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.BezierCurveTo:\n\t\t\t\t\t\tcontext.bezierCurveTo(d[j++], d[j++], d[j++], d[j++], d[j++], d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.ArcTo:\n\t\t\t\t\t\tcontext.arcTo(d[j++], d[j++], d[j++], d[j++], d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.Rect:\n\t\t\t\t\t\tcontext.rect(d[j++], d[j++], d[j++], d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.Arc:\n\t\t\t\t\t\tcontext.arc(d[j++], d[j++], d[j++], d[j++], d[j++], !!d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.Save:\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.Restore:\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.Transform:\n\t\t\t\t\t\tcontext.transform(d[j++], d[j++], d[j++], d[j++], d[j++], d[j++]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconstructor(arg: any) {\n\t\t\tthis._commands = new Uint8Array(Path._arrayBufferPool.acquire(8), 0, 8);\n\t\t\tthis._commandPosition = 0;\n\n\t\t\tthis._data = new Float64Array(Path._arrayBufferPool.acquire(8 * Float64Array.BYTES_PER_ELEMENT), 0, 8);\n\t\t\tthis._dataPosition = 0;\n\n\t\t\tif (arg instanceof Path) {\n\t\t\t\tthis.addPath(arg);\n\t\t\t}\n\t\t}\n\n\t\tprivate _ensureCommandCapacity(length: number) {\n\t\t\tthis._commands = Path._arrayBufferPool.ensureUint8ArrayLength(this._commands, length);\n\t\t}\n\n\t\tprivate _ensureDataCapacity(length: number) {\n\t\t\tthis._data = Path._arrayBufferPool.ensureFloat64ArrayLength(this._data, length);\n\t\t}\n\n\t\tprivate _writeCommand(command: number) {\n\t\t\tif (this._commandPosition >= this._commands.length) {\n\t\t\t\tthis._ensureCommandCapacity(this._commandPosition + 1);\n\t\t\t}\n\t\t\tthis._commands[this._commandPosition++] = command;\n\t\t}\n\n\t\tprivate _writeData(a: number, b: number, c?: number, d?: number, e?: number, f?: number) {\n\t\t\tlet argc = arguments.length;\n\t\t\trelease || assert(argc <= 6 && (argc % 2 === 0 || argc === 5));\n\t\t\tif (this._dataPosition + argc >= this._data.length) {\n\t\t\t\tthis._ensureDataCapacity(this._dataPosition + argc);\n\t\t\t}\n\t\t\tlet data = this._data;\n\t\t\tlet p = this._dataPosition;\n\t\t\tdata[p] = a;\n\t\t\tdata[p + 1] = b;\n\t\t\tif (argc > 2) {\n\t\t\t\tdata[p + 2] = c;\n\t\t\t\tdata[p + 3] = d;\n\t\t\t\tif (argc > 4) {\n\t\t\t\t\tdata[p + 4] = e;\n\t\t\t\t\tif (argc === 6) {\n\t\t\t\t\t\tdata[p + 5] = f;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._dataPosition += argc;\n\t\t}\n\n\t\tclosePath() {\n\t\t\tthis._writeCommand(PathCommand.ClosePath);\n\t\t}\n\n\t\tmoveTo(x: number, y: number) {\n\t\t\tthis._writeCommand(PathCommand.MoveTo);\n\t\t\tthis._writeData(x, y);\n\t\t}\n\n\t\tlineTo(x: number, y: number) {\n\t\t\tthis._writeCommand(PathCommand.LineTo);\n\t\t\tthis._writeData(x, y);\n\t\t}\n\n\t\tquadraticCurveTo(cpx: number, cpy: number, x: number, y: number) {\n\t\t\tthis._writeCommand(PathCommand.QuadraticCurveTo);\n\t\t\tthis._writeData(cpx, cpy, x, y);\n\t\t}\n\n\t\tbezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number) {\n\t\t\tthis._writeCommand(PathCommand.BezierCurveTo);\n\t\t\tthis._writeData(cp1x, cp1y, cp2x, cp2y, x, y);\n\t\t}\n\n\t\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number) {\n\t\t\tthis._writeCommand(PathCommand.ArcTo);\n\t\t\tthis._writeData(x1, y1, x2, y2, radius);\n\t\t}\n\n\t\trect(x: number, y: number, width: number, height: number) {\n\t\t\tthis._writeCommand(PathCommand.Rect);\n\t\t\tthis._writeData(x, y, width, height);\n\t\t}\n\n\t\tarc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean) {\n\t\t\tthis._writeCommand(PathCommand.Arc);\n\t\t\tthis._writeData(x, y, radius, startAngle, endAngle, +anticlockwise);\n\t\t}\n\n\t\t/**\n\t\t * Copies and transforms all drawing commands stored in |path|.\n\t\t */\n\t\taddPath(path: Path, transformation?: SVGMatrix) {\n\t\t\tif (transformation) {\n\t\t\t\tthis._writeCommand(PathCommand.Save);\n\t\t\t\tthis._writeCommand(PathCommand.Transform);\n\t\t\t\tthis._writeData(\n\t\t\t\t\ttransformation.a,\n\t\t\t\t\ttransformation.b,\n\t\t\t\t\ttransformation.c,\n\t\t\t\t\ttransformation.d,\n\t\t\t\t\ttransformation.e,\n\t\t\t\t\ttransformation.f\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Copy commands.\n\t\t\tlet newCommandPosition = this._commandPosition + path._commandPosition;\n\t\t\tif (newCommandPosition >= this._commands.length) {\n\t\t\t\tthis._ensureCommandCapacity(newCommandPosition);\n\t\t\t}\n\t\t\tlet commands = this._commands;\n\t\t\tlet pathCommands = path._commands;\n\t\t\tfor (let i = this._commandPosition, j = 0; i < newCommandPosition; i++) {\n\t\t\t\tcommands[i] = pathCommands[j++];\n\t\t\t}\n\t\t\tthis._commandPosition = newCommandPosition;\n\n\t\t\t// Copy data.\n\t\t\tlet newDataPosition = this._dataPosition + path._dataPosition;\n\t\t\tif (newDataPosition >= this._data.length) {\n\t\t\t\tthis._ensureDataCapacity(newDataPosition);\n\t\t\t}\n\t\t\tlet data = this._data;\n\t\t\tlet pathData = path._data;\n\t\t\tfor (let i = this._dataPosition, j = 0; i < newDataPosition; i++) {\n\t\t\t\tdata[i] = pathData[j++];\n\t\t\t}\n\t\t\tthis._dataPosition = newDataPosition;\n\n\t\t\tif (transformation) {\n\t\t\t\tthis._writeCommand(PathCommand.Restore);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Polyfill |Path2D| if it is not defined or if its |addPath| method doesn't exist. This means that we\n\t// always need to polyfill this in FF until addPath lands which sucks.\n\tif (typeof CanvasRenderingContext2D !== 'undefined' && (typeof Path2D === 'undefined' || !Path2D.prototype.addPath)) {\n\t\t/**\n\t\t * We override all methods of |CanvasRenderingContext2D| that accept a |Path2D| object as one\n\t\t * of its arguments, so that we can apply all recorded drawing commands before calling the\n\t\t * original function.\n\t\t */\n\t\tlet nativeFill = CanvasRenderingContext2D.prototype.fill;\n\t\tCanvasRenderingContext2D.prototype.fill = <any>(function (path?: any, fillRule?: any) {\n\t\t\tif (arguments.length) {\n\t\t\t\tif (path instanceof Path) {\n\t\t\t\t\tPath._apply(path, this);\n\t\t\t\t} else {\n\t\t\t\t\tfillRule = path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fillRule) {\n\t\t\t\tnativeFill.call(this, fillRule);\n\t\t\t} else {\n\t\t\t\tnativeFill.call(this);\n\t\t\t}\n\t\t});\n\t\tlet nativeStroke = CanvasRenderingContext2D.prototype.stroke;\n\t\tCanvasRenderingContext2D.prototype.stroke = <any>(function (path?: any, fillRule?: any) {\n\t\t\tif (arguments.length) {\n\t\t\t\tif (path instanceof Path) {\n\t\t\t\t\tPath._apply(path, this);\n\t\t\t\t} else {\n\t\t\t\t\tfillRule = path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fillRule) {\n\t\t\t\tnativeStroke.call(this, fillRule);\n\t\t\t} else {\n\t\t\t\tnativeStroke.call(this);\n\t\t\t}\n\t\t});\n\t\tlet nativeClip = CanvasRenderingContext2D.prototype.clip;\n\t\tCanvasRenderingContext2D.prototype.clip = <any>(function (path?: any, fillRule?: any) {\n\t\t\tif (arguments.length) {\n\t\t\t\tif (path instanceof Path) {\n\t\t\t\t\tPath._apply(path, this);\n\t\t\t\t} else {\n\t\t\t\t\tfillRule = path;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fillRule) {\n\t\t\t\tnativeClip.call(this, fillRule);\n\t\t\t} else {\n\t\t\t\tnativeClip.call(this);\n\t\t\t}\n\t\t});\n\n\t\t// Expose our pollyfill to the global object.\n\t\t(window as any)['Path2D'] = Path;\n\t}\n\n\tif (typeof CanvasPattern !== \"undefined\") {\n\t\t/**\n\t\t * Polyfill |setTransform| on |CanvasPattern| and |CanvasGradient|. Firefox implements this for |CanvasPattern|\n\t\t * in Nightly but doesn't for |CanvasGradient| yet.\n\t\t *\n\t\t * This polyfill uses |Path2D|, which is polyfilled above. You can get a native implementaiton of |Path2D| in\n\t\t * Chrome if you enable experimental canvas features in |chrome://flags/|. In Firefox you'll have to wait for\n\t\t * https://bugzilla.mozilla.org/show_bug.cgi?id=985801 to land.\n\t\t */\n\t\tif (Path2D.prototype.addPath) {\n\t\t\tfunction setTransform(matrix: SVGMatrix) {\n\t\t\t\tthis._transform = matrix;\n\t\t\t\tif (this._template) {\n\t\t\t\t\tthis._template._transform = matrix;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!CanvasPattern.prototype.setTransform) {\n\t\t\t\tCanvasPattern.prototype.setTransform = setTransform;\n\t\t\t}\n\t\t\tif (!CanvasGradient.prototype.setTransform) {\n\t\t\t\tCanvasGradient.prototype.setTransform = setTransform;\n\t\t\t}\n\t\t\tlet originalFill = CanvasRenderingContext2D.prototype.fill;\n\t\t\tlet originalStroke = CanvasRenderingContext2D.prototype.stroke;\n\n\t\t\t/**\n\t\t\t * If the current fillStyle is a |CanvasPattern| or |CanvasGradient| that has a SVGMatrix transformed applied to it, we\n\t\t\t * first apply the pattern's transform to the current context and then draw the path with the\n\t\t\t * inverse fillStyle transform applied to it so that it is drawn in the expected original location.\n\t\t\t */\n\t\t\tCanvasRenderingContext2D.prototype.fill = <any>(function fill(path: Path2D, fillRule?: string): void {\n\t\t\t\tlet supportsStyle = this.fillStyle instanceof CanvasPattern || this.fillStyle instanceof CanvasGradient;\n\t\t\t\tlet hasStyleTransformation = !!this.fillStyle._transform;\n\t\t\t\tif (supportsStyle && hasStyleTransformation && path instanceof Path2D) {\n\t\t\t\t\tlet m = this.fillStyle._transform;\n\t\t\t\t\tlet i;\n\t\t\t\t\ttry {\n\t\t\t\t\t\ti = m.inverse();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\ti = m = Geometry.Matrix.createIdentitySVGMatrix();\n\t\t\t\t\t}\n\t\t\t\t\t// Transform the context by the style transform ...\n\t\t\t\t\tthis.transform(m.a, m.b, m.c, m.d, m.e, m.f);\n\t\t\t\t\t// transform the path by the inverse of the style transform ...\n\t\t\t\t\tlet transformedPath = new Path2D();\n\t\t\t\t\ttransformedPath.addPath(path, i);\n\t\t\t\t\t// draw the transformed path, which should render it in its original position but with a transformed style.\n\t\t\t\t\toriginalFill.call(this, transformedPath, fillRule);\n\t\t\t\t\tthis.transform(i.a, i.b, i.c, i.d, i.e, i.f);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (arguments.length === 0) {\n\t\t\t\t\toriginalFill.call(this);\n\t\t\t\t} else if (arguments.length === 1) {\n\t\t\t\t\toriginalFill.call(this, path);\n\t\t\t\t} else if (arguments.length === 2) {\n\t\t\t\t\toriginalFill.call(this, path, fillRule);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Same as for |fill| above.\n\t\t\t */\n\t\t\tCanvasRenderingContext2D.prototype.stroke = <any>(function stroke(path: Path2D): void {\n\t\t\t\tlet supportsStyle = this.strokeStyle instanceof CanvasPattern || this.strokeStyle instanceof CanvasGradient;\n\t\t\t\tlet hasStyleTransformation = !!this.strokeStyle._transform;\n\t\t\t\tif (supportsStyle && hasStyleTransformation && path instanceof Path2D) {\n\t\t\t\t\tlet m = this.strokeStyle._transform;\n\t\t\t\t\tlet i;\n\t\t\t\t\ttry {\n\t\t\t\t\t\ti = m.inverse();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\ti = m = Geometry.Matrix.createIdentitySVGMatrix();\n\t\t\t\t\t}\n\t\t\t\t\t// Transform the context by the style transform ...\n\t\t\t\t\tthis.transform(m.a, m.b, m.c, m.d, m.e, m.f);\n\t\t\t\t\t// transform the path by the inverse of the style transform ...\n\t\t\t\t\tlet transformedPath = new Path2D();\n\t\t\t\t\ttransformedPath.addPath(path, i);\n\t\t\t\t\t// Scale the lineWidth down since it will be scaled up by the current transform.\n\t\t\t\t\tlet oldLineWidth = this.lineWidth;\n\t\t\t\t\tthis.lineWidth *= Math.sqrt((i.a + i.c) * (i.a + i.c) +\n\t\t\t\t\t\t(i.d + i.b) * (i.d + i.b)) * Math.SQRT1_2;\n\t\t\t\t\t// draw the transformed path, which should render it in its original position but with a transformed style.\n\t\t\t\t\toriginalStroke.call(this, transformedPath);\n\t\t\t\t\tthis.transform(i.a, i.b, i.c, i.d, i.e, i.f);\n\t\t\t\t\tthis.lineWidth = oldLineWidth;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (arguments.length === 0) {\n\t\t\t\t\toriginalStroke.call(this);\n\t\t\t\t} else if (arguments.length === 1) {\n\t\t\t\t\toriginalStroke.call(this, path);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tif (typeof CanvasRenderingContext2D !== 'undefined') {\n\t\t(function () {\n\t\t\t/**\n\t\t\t * Flash does not go below this number.\n\t\t\t */\n\t\t\tlet MIN_LINE_WIDTH = 1;\n\n\t\t\t/**\n\t\t\t * Arbitrarily chosen large number.\n\t\t\t */\n\t\t\tlet MAX_LINE_WIDTH = 1024;\n\n\t\t\tlet hasCurrentTransform = 'currentTransform' in CanvasRenderingContext2D.prototype;\n\n\t\t\t/**\n\t\t\t * There's an impedance mismatch between Flash's vector drawing model and that of Canvas2D[1]: Flash applies scaling\n\t\t\t * of stroke widths once by (depending on settings for the shape) using the concatenated horizontal scaling, vertical\n\t\t\t * scaling, or a geometric average of the two. The calculated width is then uniformly applied at every point on the\n\t\t\t * stroke. Canvas2D, OTOH, calculates scaling for each point individually. I.e., horizontal line segments aren't\n\t\t\t * affected by vertical scaling and vice versa, with non-axis-alined line segments being partly affected.\n\t\t\t * Additionally, Flash draws all strokes with at least 1px on-stage width, whereas Canvas draws finer-in-appearance\n\t\t\t * lines by interpolating colors accordingly. To fix both of these, we have to apply any transforms to the geometry\n\t\t\t * only, not the stroke style. That's only possible by building the untransformed geometry in a Path2D and, each time\n\t\t\t * we rasterize, adding that with the current concatenated transform applied to a temporary Path2D, which we then draw\n\t\t\t * in global coordinate space.\n\t\t\t *\n\t\t\t * Implements Flash stroking behavior.\n\t\t\t */\n\t\t\tCanvasRenderingContext2D.prototype.flashStroke = function (path: Path2D, lineScaleMode: LineScaleMode) {\n\t\t\t\tif (!hasCurrentTransform) {\n\t\t\t\t\t// Chrome doesn't have |currentTransform| yet, so fall back on normal stroking.\n\t\t\t\t\t// |currentTransform| is available only if you enable experimental features.\n\t\t\t\t\tthis.stroke(path);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet m = this.currentTransform;\n\t\t\t\tlet transformedPath = new Path2D();\n\t\t\t\t// Transform the path by the current transform ...\n\t\t\t\ttransformedPath.addPath(path, m);\n\t\t\t\tlet oldLineWidth = this.lineWidth;\n\t\t\t\tthis.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\t// We need to scale the |lineWidth| based on the current transform.\n\t\t\t\t// If we scale square 1x1 using this transform, it will fit into a\n\t\t\t\t// rectangular area, that has sides parallel to the x- and y-axis,\n\t\t\t\t// (a + c) x (d + b).\n\t\t\t\tswitch (lineScaleMode) {\n\t\t\t\t\tcase LineScaleMode.None:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase LineScaleMode.Normal:\n\t\t\t\t\t\tlet scale = Math.sqrt((m.a + m.c) * (m.a + m.c) +\n\t\t\t\t\t\t\t(m.d + m.b) * (m.d + m.b)) * Math.SQRT1_2;\n\t\t\t\t\t\tthis.lineWidth = clamp(oldLineWidth * scale, MIN_LINE_WIDTH, MAX_LINE_WIDTH);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase LineScaleMode.Vertical:\n\t\t\t\t\t\tlet scaleHeight = m.d + m.b;\n\t\t\t\t\t\tthis.lineWidth = clamp(oldLineWidth * scaleHeight, MIN_LINE_WIDTH, MAX_LINE_WIDTH);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase LineScaleMode.Horizontal:\n\t\t\t\t\t\tlet scaleWidth = m.a + m.c;\n\t\t\t\t\t\tthis.lineWidth = clamp(oldLineWidth * scaleWidth, MIN_LINE_WIDTH, MAX_LINE_WIDTH);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Stroke and restore the previous matrix.\n\t\t\t\tthis.stroke(transformedPath);\n\t\t\t\tthis.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\n\t\t\t\tthis.lineWidth = oldLineWidth;\n\t\t\t};\n\n\t\t\t// A complete polyfill of currentTransform isn't feasible: we want to only use it if it gives\n\t\t\t// us a meaningful value. That we can only get if the platform gives us any means at all to\n\t\t\t// get that value. Gecko does so in the form of mozCurrentTransform, most engines don't.\n\t\t\t// For Chrome, at least return whatever transform was set using setTransform to ensure\n\t\t\t// clipping works in our 2D backend.\n\t\t\tif (!hasCurrentTransform) {\n\t\t\t\tif ('mozCurrentTransform' in CanvasRenderingContext2D.prototype) {\n\t\t\t\t\tObject.defineProperty(CanvasRenderingContext2D.prototype, 'currentTransform', {\n\t\t\t\t\t\tget: mozPolyfillCurrentTransform\n\t\t\t\t\t});\n\t\t\t\t\thasCurrentTransform = true;\n\t\t\t\t} else {\n\t\t\t\t\tlet nativeSetTransform = CanvasRenderingContext2D.prototype.setTransform;\n\t\t\t\t\tCanvasRenderingContext2D.prototype.setTransform = <any>(function setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void {\n\t\t\t\t\t\tlet transform = this.currentTransform;\n\t\t\t\t\t\ttransform.a = a;\n\t\t\t\t\t\ttransform.b = b;\n\t\t\t\t\t\ttransform.c = c;\n\t\t\t\t\t\ttransform.d = d;\n\t\t\t\t\t\ttransform.e = e;\n\t\t\t\t\t\ttransform.f = f;\n\t\t\t\t\t\tnativeSetTransform.call(this, a, b, c, d, e, f);\n\t\t\t\t\t});\n\t\t\t\t\tObject.defineProperty(CanvasRenderingContext2D.prototype, 'currentTransform', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this._currentTransform || (this._currentTransform = Geometry.Matrix.createIdentitySVGMatrix());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction mozPolyfillCurrentTransform() {\n\t\t\t\trelease || assert(this.mozCurrentTransform);\n\t\t\t\treturn Geometry.Matrix.createSVGMatrixFromArray(this.mozCurrentTransform);\n\t\t\t}\n\t\t})();\n\t}\n\n\t/**\n\t * Polyfill |globalColorMatrix| on |CanvasRenderingContext2D|.\n\t */\n\tif (typeof CanvasRenderingContext2D !== 'undefined' && CanvasRenderingContext2D.prototype.globalColorMatrix === undefined) {\n\t\tlet previousFill = CanvasRenderingContext2D.prototype.fill;\n\t\tlet previousStroke = CanvasRenderingContext2D.prototype.stroke;\n\t\tlet previousFillText = CanvasRenderingContext2D.prototype.fillText;\n\t\tlet previousStrokeText = CanvasRenderingContext2D.prototype.strokeText;\n\n\t\tObject.defineProperty(CanvasRenderingContext2D.prototype, \"globalColorMatrix\", {\n\t\t\tget: function (): ColorMatrix {\n\t\t\t\tif (this._globalColorMatrix) {\n\t\t\t\t\treturn this._globalColorMatrix.clone();\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tset: function (matrix: ColorMatrix) {\n\t\t\t\tif (!matrix) {\n\t\t\t\t\tthis._globalColorMatrix = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this._globalColorMatrix) {\n\t\t\t\t\tthis._globalColorMatrix.set(matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis._globalColorMatrix = matrix.clone();\n\t\t\t\t}\n\t\t\t},\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\n\t\t/**\n\t\t * Intercept calls to |fill| and transform fill style if a |globalColorMatrix| is set.\n\t\t */\n\t\tCanvasRenderingContext2D.prototype.fill = <any>(function (a?: any, b?: any) {\n\t\t\tlet oldFillStyle = null;\n\t\t\tif (this._globalColorMatrix) {\n\t\t\t\toldFillStyle = this.fillStyle;\n\t\t\t\tthis.fillStyle = transformStyle(this, this.fillStyle, this._globalColorMatrix);\n\t\t\t}\n\t\t\tif (arguments.length === 0) {\n\t\t\t\tpreviousFill.call(this);\n\t\t\t} else if (arguments.length === 1) {\n\t\t\t\tpreviousFill.call(this, a);\n\t\t\t} else if (arguments.length === 2) {\n\t\t\t\tpreviousFill.call(this, a, b);\n\t\t\t}\n\t\t\tif (oldFillStyle) {\n\t\t\t\tthis.fillStyle = oldFillStyle;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Same as |fill| above.\n\t\t */\n\t\tCanvasRenderingContext2D.prototype.stroke = <any>(function (a?: any, b?: any) {\n\t\t\tlet oldStrokeStyle = null;\n\t\t\tif (this._globalColorMatrix) {\n\t\t\t\toldStrokeStyle = this.strokeStyle;\n\t\t\t\tthis.strokeStyle = transformStyle(this, this.strokeStyle, this._globalColorMatrix);\n\t\t\t}\n\t\t\tif (arguments.length === 0) {\n\t\t\t\tpreviousStroke.call(this);\n\t\t\t} else if (arguments.length === 1) {\n\t\t\t\tpreviousStroke.call(this, a);\n\t\t\t}\n\t\t\tif (oldStrokeStyle) {\n\t\t\t\tthis.strokeStyle = oldStrokeStyle;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Same as |fill| above.\n\t\t */\n\t\tCanvasRenderingContext2D.prototype.fillText = <any>(function (text: string, x: number, y: number, maxWidth?: number) {\n\t\t\tlet oldFillStyle = null;\n\t\t\tif (this._globalColorMatrix) {\n\t\t\t\toldFillStyle = this.fillStyle;\n\t\t\t\tthis.fillStyle = transformStyle(this, this.fillStyle, this._globalColorMatrix);\n\t\t\t}\n\t\t\tif (arguments.length === 3) {\n\t\t\t\tpreviousFillText.call(this, text, x, y);\n\t\t\t} else if (arguments.length === 4) {\n\t\t\t\tpreviousFillText.call(this, text, x, y, maxWidth);\n\t\t\t} else {\n\t\t\t\tDebug.unexpected();\n\t\t\t}\n\t\t\tif (oldFillStyle) {\n\t\t\t\tthis.fillStyle = oldFillStyle;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Same as |fill| above.\n\t\t */\n\t\tCanvasRenderingContext2D.prototype.strokeText = <any>(function (text: string, x: number, y: number, maxWidth?: number) {\n\t\t\tlet oldStrokeStyle = null;\n\t\t\tif (this._globalColorMatrix) {\n\t\t\t\toldStrokeStyle = this.strokeStyle;\n\t\t\t\tthis.strokeStyle = transformStyle(this, this.strokeStyle, this._globalColorMatrix);\n\t\t\t}\n\t\t\tif (arguments.length === 3) {\n\t\t\t\tpreviousStrokeText.call(this, text, x, y);\n\t\t\t} else if (arguments.length === 4) {\n\t\t\t\tpreviousStrokeText.call(this, text, x, y, maxWidth);\n\t\t\t} else {\n\t\t\t\tDebug.unexpected();\n\t\t\t}\n\t\t\tif (oldStrokeStyle) {\n\t\t\t\tthis.strokeStyle = oldStrokeStyle;\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule Shumway.GFX {\n\n\texport interface ISurface {\n\t\tw: number;\n\t\th: number;\n\n\t\tallocate(w: number, h: number): ISurfaceRegion;\n\n\t\tfree(surfaceRegion: ISurfaceRegion): void;\n\t}\n\n\texport interface ISurfaceRegion {\n\t\tsurface: ISurface;\n\t\tregion: RegionAllocator.Region;\n\t}\n\n\texport class ScreenShot {\n\t\tconstructor(public dataURL: string, public w: number, public h: number, public pixelRatio: number) {\n\t\t\t// ...\n\t\t}\n\t}\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway {\n\timport assert = Shumway.Debug.assert;\n\n\t/**\n\t * Things that can be kept in linked lists.\n\t */\n\texport interface ILinkedListNode {\n\t\tnext: ILinkedListNode;\n\t\tprevious: ILinkedListNode;\n\t}\n\n\t/**\n\t * Maintains a LRU doubly-linked list.\n\t */\n\texport class LRUList<T extends ILinkedListNode> {\n\t\tprivate _head: T;\n\t\tprivate _tail: T;\n\t\tprivate _count: number = 0;\n\n\t\tpublic get count() {\n\t\t\treturn this._count;\n\t\t}\n\n\t\t/**\n\t\t * Gets the node at the front of the list. Returns |null| if the list is empty.\n\t\t */\n\t\tget head(): T {\n\t\t\treturn this._head;\n\t\t}\n\n\t\tconstructor() {\n\t\t\tthis._head = this._tail = null;\n\t\t}\n\n\t\tprivate _unshift(node: T) {\n\t\t\trelease || assert(!node.next && !node.previous);\n\t\t\tif (this._count === 0) {\n\t\t\t\tthis._head = this._tail = node;\n\t\t\t} else {\n\t\t\t\tnode.next = this._head;\n\t\t\t\tnode.next.previous = node;\n\t\t\t\tthis._head = node;\n\t\t\t}\n\t\t\tthis._count++;\n\t\t}\n\n\t\tprivate _remove(node: T) {\n\t\t\trelease || assert(this._count > 0);\n\t\t\tif (node === this._head && node === this._tail) {\n\t\t\t\tthis._head = this._tail = null;\n\t\t\t} else if (node === this._head) {\n\t\t\t\tthis._head = <T>(node.next);\n\t\t\t\tthis._head.previous = null;\n\t\t\t} else if (node == this._tail) {\n\t\t\t\tthis._tail = <T>(node.previous);\n\t\t\t\tthis._tail.next = null;\n\t\t\t} else {\n\t\t\t\tnode.previous.next = node.next;\n\t\t\t\tnode.next.previous = node.previous;\n\t\t\t}\n\t\t\tnode.previous = node.next = null;\n\t\t\tthis._count--;\n\t\t}\n\n\t\t/**\n\t\t * Adds or moves a node to the front of the list.\n\t\t */\n\t\tuse(node: T) {\n\t\t\tif (this._head === node) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (node.next || node.previous || this._tail === node) {\n\t\t\t\tthis._remove(node);\n\t\t\t}\n\t\t\tthis._unshift(node);\n\t\t}\n\n\t\t/**\n\t\t * Removes a node from the front of the list.\n\t\t */\n\t\tpop(): T {\n\t\t\tif (!this._tail) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlet node = this._tail;\n\t\t\tthis._remove(node);\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n\t\t * Visits each node in the list in the forward or reverse direction as long as\n\t\t * the callback returns |true|;\n\t\t */\n\t\tvisit(callback: (x: T) => boolean, forward: boolean = true) {\n\t\t\tlet node: T = (forward ? this._head : this._tail);\n\t\t\twhile (node) {\n\t\t\t\tif (!callback(node)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnode = <T>(forward ? node.next : node.previous);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Registers a default font to render non-spacing and non-marking glyphs for undefined characters in embedded fonts.\n\t// Embeds the Adobe Blank web font (https://github.com/adobe-fonts/adobe-blank).\n\texport function registerFallbackFont() {\n\t\tlet style = <CSSStyleSheet>document.styleSheets[0];\n\t\tlet rule = '@font-face{font-family:AdobeBlank;src:url(\"data:font/opentype;base64,}';\n\t\tstyle.insertRule(rule, style.cssRules.length);\n\t}\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nmodule Shumway.GFX {\n\timport Option = Shumway.Options.Option;\n\timport OptionSet = Shumway.Options.OptionSet;\n\n\timport shumwayOptions = Shumway.Settings.shumwayOptions;\n\n\tlet rendererOptions = shumwayOptions.register(new OptionSet(\"Renderer Options\"));\n\texport let imageUpdateOption = rendererOptions.register(new Option(\"\", \"imageUpdate\", \"boolean\", true, \"Enable image updating.\"));\n\texport let imageConvertOption = rendererOptions.register(new Option(\"\", \"imageConvert\", \"boolean\", true, \"Enable image conversion.\"));\n\texport let stageOptions = shumwayOptions.register(new OptionSet(\"Stage Renderer Options\"));\n\texport let forcePaint = stageOptions.register(new Option(\"\", \"forcePaint\", \"boolean\", false, \"Force repainting.\"));\n\texport let ignoreViewport = stageOptions.register(new Option(\"\", \"ignoreViewport\", \"boolean\", false, \"Cull elements outside of the viewport.\"));\n\texport let viewportLoupeDiameter = stageOptions.register(new Option(\"\", \"viewportLoupeDiameter\", \"number\", 256, \"Size of the viewport loupe.\", {\n\t\trange: {\n\t\t\tmin: 1,\n\t\t\tmax: 1024,\n\t\t\tstep: 1\n\t\t}\n\t}));\n\texport let disableClipping = stageOptions.register(new Option(\"\", \"disableClipping\", \"boolean\", false, \"Disable clipping.\"));\n\texport let debugClipping = stageOptions.register(new Option(\"\", \"debugClipping\", \"boolean\", false, \"Disable clipping.\"));\n\texport let hud = stageOptions.register(new Option(\"\", \"hud\", \"boolean\", false, \"Enable HUD.\"));\n\n\tlet canvas2DOptions = stageOptions.register(new OptionSet(\"Canvas2D Options\"));\n\texport let clipDirtyRegions = canvas2DOptions.register(new Option(\"\", \"clipDirtyRegions\", \"boolean\", false, \"Clip dirty regions.\"));\n\texport let clipCanvas = canvas2DOptions.register(new Option(\"\", \"clipCanvas\", \"boolean\", false, \"Clip Regions.\"));\n\texport let cull = canvas2DOptions.register(new Option(\"\", \"cull\", \"boolean\", false, \"Enable culling.\"));\n\n\n\texport let snapToDevicePixels = canvas2DOptions.register(new Option(\"\", \"snapToDevicePixels\", \"boolean\", false, \"\"));\n\texport let imageSmoothing = canvas2DOptions.register(new Option(\"\", \"imageSmoothing\", \"boolean\", false, \"\"));\n\texport let masking = canvas2DOptions.register(new Option(\"\", \"masking\", \"boolean\", true, \"Composite Mask.\"));\n\texport let blending = canvas2DOptions.register(new Option(\"\", \"blending\", \"boolean\", true, \"\"));\n\texport let debugLayers = canvas2DOptions.register(new Option(\"\", \"debugLayers\", \"boolean\", false, \"\"));\n\texport let filters = canvas2DOptions.register(new Option(\"\", \"filters\", \"boolean\", true, \"\"));\n\texport let cacheShapes = canvas2DOptions.register(new Option(\"\", \"cacheShapes\", \"boolean\", true, \"\"));\n\texport let cacheShapesMaxSize = canvas2DOptions.register(new Option(\"\", \"cacheShapesMaxSize\", \"number\", 256, \"\", {\n\t\trange: {\n\t\t\tmin: 1,\n\t\t\tmax: 1024,\n\t\t\tstep: 1\n\t\t}\n\t}));\n\texport let cacheShapesThreshold = canvas2DOptions.register(new Option(\"\", \"cacheShapesThreshold\", \"number\", 256, \"\", {\n\t\trange: {\n\t\t\tmin: 1,\n\t\t\tmax: 1024,\n\t\t\tstep: 1\n\t\t}\n\t}));\n}","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway.GFX.Geometry {\n\n\timport clamp = Shumway.NumberUtilities.clamp;\n\timport pow2 = Shumway.NumberUtilities.pow2;\n\timport epsilonEquals = Shumway.NumberUtilities.epsilonEquals;\n\timport assert = Shumway.Debug.assert;\n\n\texport function radianToDegrees(r: number) {\n\t\treturn r * 180 / Math.PI;\n\t}\n\n\texport function degreesToRadian(d: number) {\n\t\treturn d * Math.PI / 180;\n\t}\n\n\tlet E = 0.0001;\n\n\tfunction eqFloat(a: number, b: number) {\n\t\treturn Math.abs(a - b) < E;\n\t}\n\n\texport class Point {\n\t\tx: number;\n\t\ty: number;\n\n\t\tconstructor(x: number, y: number) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tsetElements(x: number, y: number): Point {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tset(other: Point): Point {\n\t\t\tthis.x = other.x;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(other: Point): number {\n\t\t\treturn this.x * other.x + this.y * other.y;\n\t\t}\n\n\t\tsquaredLength(): number {\n\t\t\treturn this.dot(this);\n\t\t}\n\n\t\tdistanceTo(other: Point): number {\n\t\t\treturn Math.sqrt(this.dot(other));\n\t\t}\n\n\t\tsub(other: Point): Point {\n\t\t\tthis.x -= other.x;\n\t\t\tthis.y -= other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmul(value: number): Point {\n\t\t\tthis.x *= value;\n\t\t\tthis.y *= value;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(): Point {\n\t\t\treturn new Point(this.x, this.y);\n\t\t}\n\n\t\ttoString(digits: number = 2) {\n\t\t\treturn \"{x: \" + this.x.toFixed(digits) + \", y: \" + this.y.toFixed(digits) + \"}\";\n\t\t}\n\n\t\tinTriangle(a: Point, b: Point, c: Point) {\n\t\t\tlet s = a.y * c.x - a.x * c.y + (c.y - a.y) * this.x + (a.x - c.x) * this.y;\n\t\t\tlet t = a.x * b.y - a.y * b.x + (a.y - b.y) * this.x + (b.x - a.x) * this.y;\n\t\t\tif ((s < 0) != (t < 0)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet T = -b.y * c.x + a.y * (c.x - b.x) + a.x * (b.y - c.y) + b.x * c.y;\n\t\t\tif (T < 0.0) {\n\t\t\t\ts = -s;\n\t\t\t\tt = -t;\n\t\t\t\tT = -T;\n\t\t\t}\n\t\t\treturn s > 0 && t > 0 && (s + t) < T;\n\t\t}\n\n\t\tstatic createEmpty(): Point {\n\t\t\treturn new Point(0, 0);\n\t\t}\n\n\t\tstatic createEmptyPoints(count: number): Point [] {\n\t\t\tlet result = [];\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tresult.push(new Point(0, 0));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\texport class Rectangle {\n\t\tstatic allocationCount = 0;\n\n\t\tx: number;\n\t\ty: number;\n\t\tw: number;\n\t\th: number;\n\n\t\tprivate static _temporary = new Rectangle(0, 0, 0, 0);\n\n\t\tprivate static _dirtyStack: Rectangle [] = [];\n\n\t\tconstructor(x: number, y: number, w: number, h: number) {\n\t\t\tthis.setElements(x, y, w, h);\n\t\t\tRectangle.allocationCount++;\n\t\t}\n\n\t\tsetElements(x: number, y: number, w: number, h: number) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.w = w;\n\t\t\tthis.h = h;\n\t\t}\n\n\t\tset(other: Rectangle) {\n\t\t\tthis.x = other.x;\n\t\t\tthis.y = other.y;\n\t\t\tthis.w = other.w;\n\t\t\tthis.h = other.h;\n\t\t}\n\n\t\tcontains(other: Rectangle): boolean {\n\t\t\tlet r1 = other.x + other.w;\n\t\t\tlet b1 = other.y + other.h;\n\t\t\tlet r2 = this.x + this.w;\n\t\t\tlet b2 = this.y + this.h;\n\t\t\treturn (other.x >= this.x) &&\n\t\t\t\t(other.x < r2) &&\n\t\t\t\t(other.y >= this.y) &&\n\t\t\t\t(other.y < b2) &&\n\t\t\t\t(r1 > this.x) &&\n\t\t\t\t(r1 <= r2) &&\n\t\t\t\t(b1 > this.y) &&\n\t\t\t\t(b1 <= b2);\n\t\t}\n\n\t\tcontainsPoint(point: Point): boolean {\n\t\t\treturn (point.x >= this.x) &&\n\t\t\t\t(point.x < this.x + this.w) &&\n\t\t\t\t(point.y >= this.y) &&\n\t\t\t\t(point.y < this.y + this.h);\n\t\t}\n\n\t\tisContained(others: Rectangle []) {\n\t\t\tfor (let i = 0; i < others.length; i++) {\n\t\t\t\tif (others[i].contains(this)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tisSmallerThan(other: Rectangle): boolean {\n\t\t\treturn this.w < other.w && this.h < other.h;\n\t\t}\n\n\t\tisLargerThan(other: Rectangle): boolean {\n\t\t\treturn this.w > other.w && this.h > other.h;\n\t\t}\n\n\t\tunion(other: Rectangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\tthis.set(other);\n\t\t\t\treturn;\n\t\t\t} else if (other.isEmpty()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet x = this.x, y = this.y;\n\t\t\tif (this.x > other.x) {\n\t\t\t\tx = other.x;\n\t\t\t}\n\t\t\tif (this.y > other.y) {\n\t\t\t\ty = other.y;\n\t\t\t}\n\t\t\tlet x0 = this.x + this.w;\n\t\t\tif (x0 < other.x + other.w) {\n\t\t\t\tx0 = other.x + other.w;\n\t\t\t}\n\t\t\tlet y0 = this.y + this.h;\n\t\t\tif (y0 < other.y + other.h) {\n\t\t\t\ty0 = other.y + other.h;\n\t\t\t}\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.w = x0 - x;\n\t\t\tthis.h = y0 - y;\n\t\t}\n\n\t\tisEmpty(): boolean {\n\t\t\treturn this.w <= 0 || this.h <= 0;\n\t\t}\n\n\t\tsetEmpty() {\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\t\t\tthis.w = 0;\n\t\t\tthis.h = 0;\n\t\t}\n\n\t\tintersect(other: Rectangle): void {\n\t\t\tlet result = Rectangle.createEmpty();\n\t\t\tif (this.isEmpty() || other.isEmpty()) {\n\t\t\t\tresult.setEmpty();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult.x = Math.max(this.x, other.x);\n\t\t\tresult.y = Math.max(this.y, other.y);\n\t\t\tresult.w = Math.min(this.x + this.w, other.x + other.w) - result.x;\n\t\t\tresult.h = Math.min(this.y + this.h, other.y + other.h) - result.y;\n\t\t\tif (result.isEmpty()) {\n\t\t\t\tresult.setEmpty();\n\t\t\t}\n\t\t\tthis.set(result);\n\t\t}\n\n\t\tintersects(other: Rectangle): boolean {\n\t\t\tif (this.isEmpty() || other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet x = Math.max(this.x, other.x);\n\t\t\tlet y = Math.max(this.y, other.y);\n\t\t\tlet w = Math.min(this.x + this.w, other.x + other.w) - x;\n\t\t\tlet h = Math.min(this.y + this.h, other.y + other.h) - y;\n\t\t\treturn !(w <= 0 || h <= 0);\n\t\t}\n\n\t\t/**\n\t\t * Tests if this rectangle intersects the AABB of the given rectangle.\n\t\t */\n\t\tintersectsTransformedAABB(other: Rectangle, matrix: Matrix): boolean {\n\t\t\tlet rectangle = Rectangle._temporary;\n\t\t\trectangle.set(other);\n\t\t\tmatrix.transformRectangleAABB(rectangle);\n\t\t\treturn this.intersects(rectangle);\n\t\t}\n\n\t\tintersectsTranslated(other: Rectangle, tx: number, ty: number): boolean {\n\t\t\tif (this.isEmpty() || other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet x = Math.max(this.x, other.x + tx);\n\t\t\tlet y = Math.max(this.y, other.y + ty);\n\t\t\tlet w = Math.min(this.x + this.w, other.x + tx + other.w) - x;\n\t\t\tlet h = Math.min(this.y + this.h, other.y + ty + other.h) - y;\n\t\t\treturn !(w <= 0 || h <= 0);\n\t\t}\n\n\t\tarea(): number {\n\t\t\treturn this.w * this.h;\n\t\t}\n\n\t\tclone(): Rectangle {\n\t\t\tlet rectangle: Rectangle = Rectangle.allocate();\n\t\t\trectangle.set(this);\n\t\t\treturn rectangle;\n\t\t}\n\n\t\tstatic allocate(): Rectangle {\n\t\t\tlet dirtyStack = Rectangle._dirtyStack;\n\t\t\tif (dirtyStack.length) {\n\t\t\t\treturn dirtyStack.pop();\n\t\t\t} else {\n\t\t\t\treturn new Rectangle(12345, 67890, 12345, 67890);\n\t\t\t}\n\t\t}\n\n\t\tfree() {\n\t\t\tRectangle._dirtyStack.push(this);\n\t\t}\n\n\t\t/**\n\t\t * Snaps the rectangle to pixel boundaries. The computed rectangle covers\n\t\t * the original rectangle.\n\t\t */\n\t\tsnap(): Rectangle {\n\t\t\tlet x1 = Math.ceil(this.x + this.w);\n\t\t\tlet y1 = Math.ceil(this.y + this.h);\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.w = x1 - this.x;\n\t\t\tthis.h = y1 - this.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x: number, y: number): Rectangle {\n\t\t\tthis.x *= x;\n\t\t\tthis.y *= y;\n\t\t\tthis.w *= x;\n\t\t\tthis.h *= y;\n\t\t\treturn this;\n\t\t}\n\n\t\toffset(x: number, y: number): Rectangle {\n\t\t\tthis.x += x;\n\t\t\tthis.y += y;\n\t\t\treturn this;\n\t\t}\n\n\t\tresize(w: number, h: number): Rectangle {\n\t\t\tthis.w += w;\n\t\t\tthis.h += h;\n\t\t\treturn this;\n\t\t}\n\n\t\texpand(w: number, h: number): Rectangle {\n\t\t\tthis.offset(-w, -h).resize(2 * w, 2 * h);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCenter(): Point {\n\t\t\treturn new Point(this.x + this.w / 2, this.y + this.h / 2);\n\t\t}\n\n\t\tgetAbsoluteBounds(): Rectangle {\n\t\t\treturn new Rectangle(0, 0, this.w, this.h);\n\t\t}\n\n\t\ttoString(digits: number = 2): string {\n\t\t\treturn \"{\" +\n\t\t\t\tthis.x.toFixed(digits) + \", \" +\n\t\t\t\tthis.y.toFixed(digits) + \", \" +\n\t\t\t\tthis.w.toFixed(digits) + \", \" +\n\t\t\t\tthis.h.toFixed(digits) +\n\t\t\t\t\"}\";\n\t\t}\n\n\t\tstatic createEmpty(): Rectangle {\n\t\t\tlet rectangle = Rectangle.allocate();\n\t\t\trectangle.setEmpty();\n\t\t\treturn rectangle;\n\t\t}\n\n\t\tstatic createSquare(size: number): Rectangle {\n\t\t\treturn new Rectangle(-size / 2, -size / 2, size, size);\n\t\t}\n\n\t\t/**\n\t\t * Creates the maximum rectangle representable by signed 16 bit integers.\n\t\t */\n\t\tstatic createMaxI16() {\n\t\t\treturn new Rectangle(Numbers.MinI16, Numbers.MinI16, Numbers.MaxU16, Numbers.MaxU16);\n\t\t}\n\n\t\tsetMaxI16() {\n\t\t\tthis.setElements(Numbers.MinI16, Numbers.MinI16, Numbers.MaxU16, Numbers.MaxU16)\n\t\t}\n\n\t\tgetCorners(points: Point[]) {\n\t\t\tpoints[0].x = this.x;\n\t\t\tpoints[0].y = this.y;\n\n\t\t\tpoints[1].x = this.x + this.w;\n\t\t\tpoints[1].y = this.y;\n\n\t\t\tpoints[2].x = this.x + this.w;\n\t\t\tpoints[2].y = this.y + this.h;\n\n\t\t\tpoints[3].x = this.x;\n\t\t\tpoints[3].y = this.y + this.h;\n\t\t}\n\t}\n\n\texport class OBB {\n\t\taxes: Point [];\n\t\tcorners: Point [];\n\t\torigins: number [];\n\n\t\tconstructor(corners: Point []) {\n\t\t\tthis.corners = corners.map(function (corner) {\n\t\t\t\treturn corner.clone();\n\t\t\t});\n\t\t\tthis.axes = [\n\t\t\t\tcorners[1].clone().sub(corners[0]),\n\t\t\t\tcorners[3].clone().sub(corners[0])\n\t\t\t];\n\t\t\tthis.origins = [];\n\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\tthis.axes[i].mul(1 / this.axes[i].squaredLength());\n\t\t\t\tthis.origins.push(corners[0].dot(this.axes[i]));\n\t\t\t}\n\t\t}\n\n\t\tgetBounds(): Rectangle {\n\t\t\treturn OBB.getBounds(this.corners);\n\t\t}\n\n\t\tpublic static getBounds(points: Array<Point>) {\n\t\t\tlet min = new Point(Number.MAX_VALUE, Number.MAX_VALUE);\n\t\t\tlet max = new Point(Number.MIN_VALUE, Number.MIN_VALUE);\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tlet x = points[i].x, y = points[i].y;\n\t\t\t\tmin.x = Math.min(min.x, x);\n\t\t\t\tmin.y = Math.min(min.y, y);\n\t\t\t\tmax.x = Math.max(max.x, x);\n\t\t\t\tmax.y = Math.max(max.y, y);\n\t\t\t}\n\t\t\treturn new Rectangle(min.x, min.y, max.x - min.x, max.y - min.y);\n\t\t}\n\n\t\t/**\n\t\t * http://www.flipcode.com/archives/2D_OBB_Intersection.shtml\n\t\t */\n\t\tpublic intersects(other: OBB): boolean {\n\t\t\treturn this.intersectsOneWay(other) && other.intersectsOneWay(this);\n\t\t}\n\n\t\tprivate intersectsOneWay(other: OBB): boolean {\n\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\tlet tMin, tMax;\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tlet t = other.corners[j].dot(this.axes[i]);\n\n\t\t\t\t\tif (j === 0) {\n\t\t\t\t\t\ttMax = tMin = t;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (t < tMin) {\n\t\t\t\t\t\t\ttMin = t;\n\t\t\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\t\t\ttMax = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((tMin > 1 + this.origins[i]) || (tMax < this.origins[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Used to write fast paths for common matrix types.\n\t */\n\texport const enum MatrixType {\n\t\tUnknown = 0x0000,\n\t\tIdentity = 0x0001,\n\t\tTranslation = 0x0002\n\t}\n\n\texport class Matrix {\n\t\tstatic allocationCount = 0;\n\n\t\tprivate _data: Float64Array;\n\t\tprivate _type: MatrixType;\n\n\t\tprivate static _dirtyStack: Matrix [] = [];\n\n\t\tpublic set a(a: number) {\n\t\t\tthis._data[0] = a;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t}\n\n\t\tpublic get a(): number {\n\t\t\treturn this._data[0];\n\t\t}\n\n\t\tpublic set b(b: number) {\n\t\t\tthis._data[1] = b;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t}\n\n\t\tpublic get b(): number {\n\t\t\treturn this._data[1];\n\t\t}\n\n\t\tpublic set c(c: number) {\n\t\t\tthis._data[2] = c;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t}\n\n\t\tpublic get c(): number {\n\t\t\treturn this._data[2];\n\t\t}\n\n\t\tpublic set d(d: number) {\n\t\t\tthis._data[3] = d;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t}\n\n\t\tpublic get d(): number {\n\t\t\treturn this._data[3];\n\t\t}\n\n\t\tpublic set tx(tx: number) {\n\t\t\tthis._data[4] = tx;\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\tthis._type = MatrixType.Translation;\n\t\t\t}\n\t\t}\n\n\t\tpublic get tx(): number {\n\t\t\treturn this._data[4];\n\t\t}\n\n\t\tpublic set ty(ty: number) {\n\t\t\tthis._data[5] = ty;\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\tthis._type = MatrixType.Translation;\n\t\t\t}\n\t\t}\n\n\t\tpublic get ty(): number {\n\t\t\treturn this._data[5];\n\t\t}\n\n\t\tprivate static _svg: SVGSVGElement;\n\n\n\t\tconstructor(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n\t\t\tthis._data = new Float64Array(6);\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t\tthis.setElements(a, b, c, d, tx, ty);\n\t\t\tMatrix.allocationCount++;\n\t\t}\n\n\t\tprivate static _createSVGMatrix(): SVGMatrix {\n\t\t\tif (!Matrix._svg) {\n\t\t\t\tMatrix._svg = <any>document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\t\t\t}\n\t\t\treturn Matrix._svg.createSVGMatrix();\n\t\t}\n\n\t\tsetElements(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n\t\t\tlet m = this._data;\n\t\t\tm[0] = a;\n\t\t\tm[1] = b;\n\t\t\tm[2] = c;\n\t\t\tm[3] = d;\n\t\t\tm[4] = tx;\n\t\t\tm[5] = ty;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t}\n\n\t\tset(other: Matrix) {\n\t\t\tlet m = this._data, n = other._data;\n\t\t\tm[0] = n[0];\n\t\t\tm[1] = n[1];\n\t\t\tm[2] = n[2];\n\t\t\tm[3] = n[3];\n\t\t\tm[4] = n[4];\n\t\t\tm[5] = n[5];\n\t\t\tthis._type = other._type;\n\t\t}\n\n\t\t/**\n\t\t * Whether the transformed query rectangle is empty after this transform is applied to it.\n\t\t */\n\t\temptyArea(query: Rectangle): boolean {\n\t\t\tlet m = this._data;\n\t\t\t// TODO: Work out the details here.\n\t\t\tif (m[0] === 0 || m[3] === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Whether the area of transformed query rectangle is infinite after this transform is applied to it.\n\t\t */\n\t\tinfiniteArea(query: Rectangle): boolean {\n\t\t\tlet m = this._data;\n\t\t\t// TODO: Work out the details here.\n\t\t\tif (Math.abs(m[0]) === Infinity ||\n\t\t\t\tMath.abs(m[3]) === Infinity) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tisEqual(other: Matrix) {\n\t\t\tif (this._type === MatrixType.Identity && other._type === MatrixType.Identity) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet m = this._data, n = other._data;\n\t\t\treturn m[0] === n[0] &&\n\t\t\t\tm[1] === n[1] &&\n\t\t\t\tm[2] === n[2] &&\n\t\t\t\tm[3] === n[3] &&\n\t\t\t\tm[4] === n[4] &&\n\t\t\t\tm[5] === n[5];\n\t\t}\n\n\t\tclone(): Matrix {\n\t\t\tlet matrix = Matrix.allocate();\n\t\t\tmatrix.set(this);\n\t\t\treturn matrix;\n\t\t}\n\n\t\tstatic allocate(): Matrix {\n\t\t\tlet dirtyStack = Matrix._dirtyStack;\n\t\t\tlet matrix = null;\n\t\t\tif (dirtyStack.length) {\n\t\t\t\treturn dirtyStack.pop();\n\t\t\t} else {\n\t\t\t\treturn new Matrix(12345, 12345, 12345, 12345, 12345, 12345);\n\t\t\t}\n\t\t}\n\n\t\tfree() {\n\t\t\tMatrix._dirtyStack.push(this);\n\t\t}\n\n\t\ttransform(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\n\t\t\tlet m = this._data;\n\t\t\tlet _a = m[0], _b = m[1], _c = m[2], _d = m[3], _tx = m[4], _ty = m[5];\n\t\t\tm[0] = _a * a + _c * b;\n\t\t\tm[1] = _b * a + _d * b;\n\t\t\tm[2] = _a * c + _c * d;\n\t\t\tm[3] = _b * c + _d * d;\n\t\t\tm[4] = _a * tx + _c * ty + _tx;\n\t\t\tm[5] = _b * tx + _d * ty + _ty;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformRectangle(rectangle: Rectangle, points: Point[]) {\n\t\t\trelease || assert(points.length === 4);\n\t\t\tlet m = this._data, a = m[0], b = m[1], c = m[2], d = m[3], tx = m[4], ty = m[5];\n\n\t\t\tlet x = rectangle.x;\n\t\t\tlet y = rectangle.y;\n\t\t\tlet w = rectangle.w;\n\t\t\tlet h = rectangle.h;\n\n\t\t\t/*\n\n\t\t\t 0---1\n\t\t\t | / |\n\t\t\t 3---2\n\n\t\t\t */\n\n\t\t\tpoints[0].x = a * x + c * y + tx;\n\t\t\tpoints[0].y = b * x + d * y + ty;\n\t\t\tpoints[1].x = a * (x + w) + c * y + tx;\n\t\t\tpoints[1].y = b * (x + w) + d * y + ty;\n\t\t\tpoints[2].x = a * (x + w) + c * (y + h) + tx;\n\t\t\tpoints[2].y = b * (x + w) + d * (y + h) + ty;\n\t\t\tpoints[3].x = a * x + c * (y + h) + tx;\n\t\t\tpoints[3].y = b * x + d * (y + h) + ty;\n\t\t}\n\n\t\tisTranslationOnly(): boolean {\n\t\t\tif (this._type === MatrixType.Translation) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet m = this._data;\n\t\t\tif (m[0] === 1 &&\n\t\t\t\tm[1] === 0 &&\n\t\t\t\tm[2] === 0 &&\n\t\t\t\tm[3] === 1) {\n\t\t\t\tthis._type = MatrixType.Translation;\n\t\t\t\treturn true;\n\t\t\t} else if (epsilonEquals(m[0], 1) &&\n\t\t\t\tepsilonEquals(m[1], 0) &&\n\t\t\t\tepsilonEquals(m[2], 0) &&\n\t\t\t\tepsilonEquals(m[3], 1)) {\n\t\t\t\tthis._type = MatrixType.Translation;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\ttransformRectangleAABB(rectangle: Rectangle) {\n\t\t\tlet m = this._data;\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\treturn;\n\t\t\t} else if (this._type === MatrixType.Translation) {\n\t\t\t\trectangle.x += m[4];\n\t\t\t\trectangle.y += m[5];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet a = m[0], b = m[1], c = m[2], d = m[3], tx = m[4], ty = m[5];\n\t\t\tlet x = rectangle.x;\n\t\t\tlet y = rectangle.y;\n\t\t\tlet w = rectangle.w;\n\t\t\tlet h = rectangle.h;\n\n\t\t\t/*\n\n\t\t\t 0---1\n\t\t\t | / |\n\t\t\t 3---2\n\n\t\t\t */\n\n\t\t\tlet x0 = a * x + c * y + tx;\n\t\t\tlet y0 = b * x + d * y + ty;\n\n\t\t\tlet x1 = a * (x + w) + c * y + tx;\n\t\t\tlet y1 = b * (x + w) + d * y + ty;\n\n\t\t\tlet x2 = a * (x + w) + c * (y + h) + tx;\n\t\t\tlet y2 = b * (x + w) + d * (y + h) + ty;\n\n\t\t\tlet x3 = a * x + c * (y + h) + tx;\n\t\t\tlet y3 = b * x + d * (y + h) + ty;\n\n\t\t\tlet tmp = 0;\n\n\t\t\t// Manual Min/Max is a lot faster than calling Math.min/max\n\t\t\t// X Min-Max\n\t\t\tif (x0 > x1) {\n\t\t\t\ttmp = x0;\n\t\t\t\tx0 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t\tif (x2 > x3) {\n\t\t\t\ttmp = x2;\n\t\t\t\tx2 = x3;\n\t\t\t\tx3 = tmp;\n\t\t\t}\n\n\t\t\trectangle.x = x0 < x2 ? x0 : x2;\n\t\t\trectangle.w = (x1 > x3 ? x1 : x3) - rectangle.x;\n\n\t\t\t// Y Min-Max\n\t\t\tif (y0 > y1) {\n\t\t\t\ttmp = y0;\n\t\t\t\ty0 = y1;\n\t\t\t\ty1 = tmp;\n\t\t\t}\n\t\t\tif (y2 > y3) {\n\t\t\t\ttmp = y2;\n\t\t\t\ty2 = y3;\n\t\t\t\ty3 = tmp;\n\t\t\t}\n\n\t\t\trectangle.y = y0 < y2 ? y0 : y2;\n\t\t\trectangle.h = (y1 > y3 ? y1 : y3) - rectangle.y;\n\t\t}\n\n\t\tscale(x: number, y: number): Matrix {\n\t\t\tlet m = this._data;\n\t\t\tm[0] *= x;\n\t\t\tm[1] *= y;\n\t\t\tm[2] *= x;\n\t\t\tm[3] *= y;\n\t\t\tm[4] *= x;\n\t\t\tm[5] *= y;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t\treturn this;\n\t\t}\n\n\t\tscaleClone(x: number, y: number): Matrix {\n\t\t\tif (x === 1 && y === 1) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\treturn this.clone().scale(x, y);\n\t\t}\n\n\t\trotate(angle: number): Matrix {\n\t\t\tlet m = this._data, a = m[0], b = m[1], c = m[2], d = m[3], tx = m[4], ty = m[5];\n\t\t\tlet cos = Math.cos(angle);\n\t\t\tlet sin = Math.sin(angle);\n\t\t\tm[0] = cos * a - sin * b;\n\t\t\tm[1] = sin * a + cos * b;\n\t\t\tm[2] = cos * c - sin * d;\n\t\t\tm[3] = sin * c + cos * d;\n\t\t\tm[4] = cos * tx - sin * ty;\n\t\t\tm[5] = sin * tx + cos * ty;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t\treturn this;\n\t\t}\n\n\t\tconcat(other: Matrix): Matrix {\n\t\t\tif (other._type === MatrixType.Identity) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tlet m = this._data, n = other._data;\n\t\t\tlet a = m[0] * n[0];\n\t\t\tlet b = 0.0;\n\t\t\tlet c = 0.0;\n\t\t\tlet d = m[3] * n[3];\n\t\t\tlet tx = m[4] * n[0] + n[4];\n\t\t\tlet ty = m[5] * n[3] + n[5];\n\n\t\t\tif (m[1] !== 0.0 || m[2] !== 0.0 || n[1] !== 0.0 || n[2] !== 0.0) {\n\t\t\t\ta += m[1] * n[2];\n\t\t\t\td += m[2] * n[1];\n\t\t\t\tb += m[0] * n[1] + m[1] * n[3];\n\t\t\t\tc += m[2] * n[0] + m[3] * n[2];\n\t\t\t\ttx += m[5] * n[2];\n\t\t\t\tty += m[4] * n[1];\n\t\t\t}\n\n\t\t\tm[0] = a;\n\t\t\tm[1] = b;\n\t\t\tm[2] = c;\n\t\t\tm[3] = d;\n\t\t\tm[4] = tx;\n\t\t\tm[5] = ty;\n\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t\treturn this;\n\t\t}\n\n\t\tconcatClone(other: Matrix): Matrix {\n\t\t\treturn this.clone().concat(other);\n\t\t}\n\n\t\t/**\n\t\t * this = other * this\n\t\t */\n\t\tpublic preMultiply(other: Matrix): void {\n\t\t\tlet m = this._data, n = other._data;\n\t\t\tif (other._type === MatrixType.Translation &&\n\t\t\t\t(this._type & (MatrixType.Identity | MatrixType.Translation))) {\n\t\t\t\tm[4] += n[4];\n\t\t\t\tm[5] += n[5];\n\t\t\t\tthis._type = MatrixType.Translation;\n\t\t\t\treturn;\n\t\t\t} else if (other._type === MatrixType.Identity) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet a = n[0] * m[0];\n\t\t\tlet b = 0.0;\n\t\t\tlet c = 0.0;\n\t\t\tlet d = n[3] * m[3];\n\t\t\tlet tx = n[4] * m[0] + m[4];\n\t\t\tlet ty = n[5] * m[3] + m[5];\n\n\t\t\tif (n[1] !== 0.0 || n[2] !== 0.0 || m[1] !== 0.0 || m[2] !== 0.0) {\n\t\t\t\ta += n[1] * m[2];\n\t\t\t\td += n[2] * m[1];\n\t\t\t\tb += n[0] * m[1] + n[1] * m[3];\n\t\t\t\tc += n[2] * m[0] + n[3] * m[2];\n\t\t\t\ttx += n[5] * m[2];\n\t\t\t\tty += n[4] * m[1];\n\t\t\t}\n\n\t\t\tm[0] = a;\n\t\t\tm[1] = b;\n\t\t\tm[2] = c;\n\t\t\tm[3] = d;\n\t\t\tm[4] = tx;\n\t\t\tm[5] = ty;\n\t\t\tthis._type = MatrixType.Unknown;\n\t\t}\n\n\t\ttranslate(x: number, y: number): Matrix {\n\t\t\tlet m = this._data;\n\t\t\tm[4] += x;\n\t\t\tm[5] += y;\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\tthis._type = MatrixType.Translation;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tsetIdentity() {\n\t\t\tlet m = this._data;\n\t\t\tm[0] = 1;\n\t\t\tm[1] = 0;\n\t\t\tm[2] = 0;\n\t\t\tm[3] = 1;\n\t\t\tm[4] = 0;\n\t\t\tm[5] = 0;\n\t\t\tthis._type = MatrixType.Identity;\n\t\t}\n\n\t\tisIdentity(): boolean {\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet m = this._data;\n\t\t\treturn m[0] === 1 && m[1] === 0 && m[2] === 0 &&\n\t\t\t\tm[3] === 1 && m[4] === 0 && m[5] === 0;\n\t\t}\n\n\t\ttransformPoint(point: Point) {\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet m = this._data;\n\t\t\tlet x = point.x;\n\t\t\tlet y = point.y;\n\t\t\tpoint.x = m[0] * x + m[2] * y + m[4];\n\t\t\tpoint.y = m[1] * x + m[3] * y + m[5];\n\t\t}\n\n\t\ttransformPoints(points: Point[]) {\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\tthis.transformPoint(points[i]);\n\t\t\t}\n\t\t}\n\n\t\tdeltaTransformPoint(point: Point) {\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet m = this._data;\n\t\t\tlet x = point.x;\n\t\t\tlet y = point.y;\n\t\t\tpoint.x = m[0] * x + m[2] * y;\n\t\t\tpoint.y = m[1] * x + m[3] * y;\n\t\t}\n\n\t\tinverse(result: Matrix) {\n\t\t\tlet m = this._data, r = result._data;\n\t\t\tif (this._type === MatrixType.Identity) {\n\t\t\t\tresult.setIdentity();\n\t\t\t\treturn;\n\t\t\t} else if (this._type === MatrixType.Translation) {\n\t\t\t\tr[0] = 1;\n\t\t\t\tr[1] = 0;\n\t\t\t\tr[2] = 0;\n\t\t\t\tr[3] = 1;\n\t\t\t\tr[4] = -m[4];\n\t\t\t\tr[5] = -m[5];\n\t\t\t\tresult._type = MatrixType.Translation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet b = m[1];\n\t\t\tlet c = m[2];\n\t\t\tlet tx = m[4];\n\t\t\tlet ty = m[5];\n\t\t\tif (b === 0 && c === 0) {\n\t\t\t\tlet a = r[0] = 1 / m[0];\n\t\t\t\tlet d = r[3] = 1 / m[3];\n\t\t\t\tr[1] = 0;\n\t\t\t\tr[2] = 0;\n\t\t\t\tr[4] = -a * tx;\n\t\t\t\tr[5] = -d * ty;\n\t\t\t} else {\n\t\t\t\tlet a = m[0];\n\t\t\t\tlet d = m[3];\n\t\t\t\tlet determinant = a * d - b * c;\n\t\t\t\tif (determinant === 0) {\n\t\t\t\t\tresult.setIdentity();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdeterminant = 1 / determinant;\n\t\t\t\tr[0] = d * determinant;\n\t\t\t\tb = r[1] = -b * determinant;\n\t\t\t\tc = r[2] = -c * determinant;\n\t\t\t\td = r[3] = a * determinant;\n\t\t\t\tr[4] = -(r[0] * tx + c * ty);\n\t\t\t\tr[5] = -(b * tx + d * ty);\n\t\t\t}\n\t\t\tresult._type = MatrixType.Unknown;\n\t\t\treturn;\n\t\t}\n\n\t\tgetTranslateX(): number {\n\t\t\treturn this._data[4];\n\t\t}\n\n\t\tgetTranslateY(): number {\n\t\t\treturn this._data[4];\n\t\t}\n\n\t\tgetScaleX(): number {\n\t\t\tlet m = this._data;\n\t\t\tif (m[0] === 1 && m[1] === 0) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tlet result = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n\t\t\treturn m[0] > 0 ? result : -result;\n\t\t}\n\n\t\tgetScaleY(): number {\n\t\t\tlet m = this._data;\n\t\t\tif (m[2] === 0 && m[3] === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tlet result = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\t\t\treturn m[3] > 0 ? result : -result;\n\t\t}\n\n\t\tgetScale(): number {\n\t\t\treturn (this.getScaleX() + this.getScaleY()) / 2;\n\t\t}\n\n\t\tgetAbsoluteScaleX(): number {\n\t\t\treturn Math.abs(this.getScaleX());\n\t\t}\n\n\t\tgetAbsoluteScaleY(): number {\n\t\t\treturn Math.abs(this.getScaleY());\n\t\t}\n\n\t\tgetRotation(): number {\n\t\t\tlet m = this._data;\n\t\t\treturn Math.atan(m[1] / m[0]) * 180 / Math.PI;\n\t\t}\n\n\t\tisScaleOrRotation(): boolean {\n\t\t\tlet m = this._data;\n\t\t\treturn Math.abs(m[0] * m[2] + m[1] * m[3]) < 0.01;\n\t\t}\n\n\t\ttoString(digits: number = 2): string {\n\t\t\tlet m = this._data;\n\t\t\treturn \"{\" +\n\t\t\t\tm[0].toFixed(digits) + \", \" +\n\t\t\t\tm[1].toFixed(digits) + \", \" +\n\t\t\t\tm[2].toFixed(digits) + \", \" +\n\t\t\t\tm[3].toFixed(digits) + \", \" +\n\t\t\t\tm[4].toFixed(digits) + \", \" +\n\t\t\t\tm[5].toFixed(digits) + \"}\";\n\t\t}\n\n\t\tpublic toWebGLMatrix(): Float32Array {\n\t\t\tlet m = this._data;\n\t\t\treturn new Float32Array([\n\t\t\t\tm[0], m[1], 0, m[2], m[3], 0, m[4], m[5], 1\n\t\t\t]);\n\t\t}\n\n\t\tpublic toCSSTransform(): string {\n\t\t\tlet m = this._data;\n\t\t\treturn \"matrix(\" +\n\t\t\t\tm[0] + \", \" +\n\t\t\t\tm[1] + \", \" +\n\t\t\t\tm[2] + \", \" +\n\t\t\t\tm[3] + \", \" +\n\t\t\t\tm[4] + \", \" +\n\t\t\t\tm[5] + \")\";\n\t\t}\n\n\t\tpublic static createIdentity(): Matrix {\n\t\t\tlet matrix = Matrix.allocate();\n\t\t\tmatrix.setIdentity();\n\t\t\treturn matrix;\n\t\t}\n\n\t\tstatic multiply = function (dst: Matrix, src: Matrix) {\n\t\t\tlet n = src._data;\n\t\t\tdst.transform(n[0], n[1], n[2], n[3], n[4], n[5]);\n\t\t};\n\n\t\tpublic toSVGMatrix(): SVGMatrix {\n\t\t\tlet m = this._data;\n\t\t\tlet matrix: SVGMatrix = Matrix._createSVGMatrix();\n\t\t\ttry {\n\t\t\t\tmatrix.a = m[0];\n\t\t\t\tmatrix.b = m[1];\n\t\t\t\tmatrix.c = m[2];\n\t\t\t\tmatrix.d = m[3];\n\t\t\t\tmatrix.e = m[4];\n\t\t\t\tmatrix.f = m[5];\n\t\t\t} catch (e) {\n\t\t\t\t// The setters on SVGMatrix throw if the assigned value is `NaN`, which we sometimes\n\t\t\t\t// produce. In that case, just fall back to an identity matrix for now.\n\t\t\t\treturn Matrix._createSVGMatrix();\n\t\t\t}\n\t\t\treturn matrix;\n\t\t}\n\n\t\tpublic snap(): boolean {\n\t\t\tlet m = this._data;\n\t\t\tif (this.isTranslationOnly()) {\n\t\t\t\tm[0] = 1;\n\t\t\t\tm[1] = 0;\n\t\t\t\tm[2] = 0;\n\t\t\t\tm[3] = 1;\n\t\t\t\tm[4] = Math.round(m[4]);\n\t\t\t\tm[5] = Math.round(m[5]);\n\t\t\t\tthis._type = MatrixType.Translation;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic static createIdentitySVGMatrix(): SVGMatrix {\n\t\t\treturn Matrix._createSVGMatrix();\n\t\t}\n\n\t\tpublic static createSVGMatrixFromArray(array: number []): SVGMatrix {\n\t\t\tlet matrix: SVGMatrix = Matrix._createSVGMatrix();\n\t\t\tmatrix.a = array[0];\n\t\t\tmatrix.b = array[1];\n\t\t\tmatrix.c = array[2];\n\t\t\tmatrix.d = array[3];\n\t\t\tmatrix.e = array[4];\n\t\t\tmatrix.f = array[5];\n\t\t\treturn matrix;\n\t\t}\n\t}\n\n\texport class DirtyRegion {\n\t\tprivate static tmpRectangle = Rectangle.createEmpty();\n\t\tprivate grid: DirtyRegion.Cell [][];\n\n\t\tprivate w: number;\n\t\tprivate h: number;\n\t\tprivate c: number;\n\t\tprivate r: number;\n\t\tprivate size: number;\n\t\tprivate sizeInBits: number;\n\n\t\tconstructor(w: number, h: number, sizeInBits = 7) {\n\t\t\tlet size = this.size = 1 << sizeInBits;\n\t\t\tthis.sizeInBits = sizeInBits;\n\t\t\tthis.w = w;\n\t\t\tthis.h = h;\n\t\t\tthis.c = Math.ceil(w / size);\n\t\t\tthis.r = Math.ceil(h / size);\n\t\t\tthis.grid = [];\n\t\t\tfor (let y = 0; y < this.r; y++) {\n\t\t\t\tthis.grid.push([]);\n\t\t\t\tfor (let x = 0; x < this.c; x++) {\n\t\t\t\t\tthis.grid[y][x] = new DirtyRegion.Cell(new Rectangle(x * size, y * size, size, size));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tclear() {\n\t\t\tfor (let y = 0; y < this.r; y++) {\n\t\t\t\tfor (let x = 0; x < this.c; x++) {\n\t\t\t\t\tthis.grid[y][x].clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgetBounds(): Rectangle {\n\t\t\treturn new Rectangle(0, 0, this.w, this.h);\n\t\t}\n\n\t\taddDirtyRectangle(rectangle: Rectangle) {\n\t\t\tlet x = rectangle.x >> this.sizeInBits;\n\t\t\tlet y = rectangle.y >> this.sizeInBits;\n\t\t\tif (x >= this.c || y >= this.r) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t\tif (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t\tlet cell = this.grid[y][x];\n\t\t\trectangle = rectangle.clone();\n\t\t\trectangle.snap();\n\n\t\t\tif (cell.region.contains(rectangle)) {\n\t\t\t\tif (cell.bounds.isEmpty()) {\n\t\t\t\t\tcell.bounds.set(rectangle)\n\t\t\t\t} else if (!cell.bounds.contains(rectangle)) {\n\t\t\t\t\tcell.bounds.union(rectangle);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet w = Math.min(this.c, Math.ceil((rectangle.x + rectangle.w) / this.size)) - x;\n\t\t\t\tlet h = Math.min(this.r, Math.ceil((rectangle.y + rectangle.h) / this.size)) - y;\n\t\t\t\tfor (let i = 0; i < w; i++) {\n\t\t\t\t\tfor (let j = 0; j < h; j++) {\n\t\t\t\t\t\tlet cell = this.grid[y + j][x + i];\n\t\t\t\t\t\tlet intersection = cell.region.clone();\n\t\t\t\t\t\tintersection.intersect(rectangle);\n\t\t\t\t\t\tif (!intersection.isEmpty()) {\n\t\t\t\t\t\t\tthis.addDirtyRectangle(intersection);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgatherRegions(regions: Rectangle[]) {\n\t\t\tfor (let y = 0; y < this.r; y++) {\n\t\t\t\tfor (let x = 0; x < this.c; x++) {\n\t\t\t\t\tlet bounds = this.grid[y][x].bounds;\n\t\t\t\t\tif (!bounds.isEmpty()) {\n\t\t\t\t\t\tregions.push(this.grid[y][x].bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tgatherOptimizedRegions(regions: Rectangle[]) {\n\t\t\tthis.gatherRegions(regions);\n\t\t}\n\n\t\tgetDirtyRatio(): number {\n\t\t\tlet totalArea = this.w * this.h;\n\t\t\tif (totalArea === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tlet dirtyArea = 0;\n\t\t\tfor (let y = 0; y < this.r; y++) {\n\t\t\t\tfor (let x = 0; x < this.c; x++) {\n\t\t\t\t\tdirtyArea += this.grid[y][x].region.area();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dirtyArea / totalArea;\n\t\t}\n\n\t\trender(context: CanvasRenderingContext2D, options?: any) {\n\t\t\tfunction drawRectangle(rectangle: Rectangle) {\n\t\t\t\tcontext.rect(rectangle.x, rectangle.y, rectangle.w, rectangle.h);\n\t\t\t}\n\n\t\t\tif (options && options.drawGrid) {\n\t\t\t\tcontext.strokeStyle = \"white\";\n\t\t\t\tfor (let y = 0; y < this.r; y++) {\n\t\t\t\t\tfor (let x = 0; x < this.c; x++) {\n\t\t\t\t\t\tlet cell = this.grid[y][x];\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tdrawRectangle(cell.region);\n\t\t\t\t\t\tcontext.closePath();\n\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.strokeStyle = \"#E0F8D8\";\n\t\t\tfor (let y = 0; y < this.r; y++) {\n\t\t\t\tfor (let x = 0; x < this.c; x++) {\n\t\t\t\t\tlet cell = this.grid[y][x];\n\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\tdrawRectangle(cell.bounds);\n\t\t\t\t\tcontext.closePath();\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t}\n\t\t\t}\n\n//      context.strokeStyle = \"#5856d6\";\n//      let regions = [];\n//      this.gatherOptimizedRegions(regions);\n//      for (let i = 0; i < regions.length; i++) {\n//        context.beginPath();\n//        drawRectangle(regions[i]);\n//        context.closePath();\n//        context.stroke();\n//      }\n\t\t}\n\t}\n\n\texport module DirtyRegion {\n\t\texport class Cell {\n\t\t\tregion: Rectangle;\n\t\t\tbounds: Rectangle;\n\n\t\t\tconstructor(region: Rectangle) {\n\t\t\t\tthis.region = region;\n\t\t\t\tthis.bounds = Rectangle.createEmpty();\n\t\t\t}\n\n\t\t\tclear() {\n\t\t\t\tthis.bounds.setEmpty();\n\t\t\t}\n\t\t}\n\t}\n\n\texport class Tile {\n\t\tx: number;\n\t\ty: number;\n\t\tindex: number;\n\t\tscale: number;\n\t\tbounds: Rectangle;\n\t\tcachedSurfaceRegion: ISurfaceRegion;\n\t\tcolor: Shumway.Color;\n\t\tprivate _obb: OBB;\n\t\tprivate static corners = Point.createEmptyPoints(4);\n\n\t\tgetOBB(): OBB {\n\t\t\tif (this._obb) {\n\t\t\t\treturn this._obb;\n\t\t\t}\n\t\t\tthis.bounds.getCorners(Tile.corners);\n\t\t\treturn this._obb = new OBB(Tile.corners);\n\t\t}\n\n\t\tconstructor(index: number, x: number, y: number, w: number, h: number, scale: number) {\n\t\t\tthis.index = index;\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.scale = scale;\n\t\t\tthis.bounds = new Rectangle(x * w, y * h, w, h);\n\t\t}\n\t}\n\n\t/**\n\t * A grid data structure that lets you query tiles that intersect a transformed rectangle.\n\t */\n\texport class TileCache {\n\t\tw: number;\n\t\th: number;\n\t\ttileW: number;\n\t\ttileH: number;\n\t\trows: number;\n\t\tscale: number;\n\t\tcolumns: number;\n\t\ttiles: Tile [];\n\t\tprivate static _points = Point.createEmptyPoints(4);\n\n\t\tconstructor(w: number, h: number, tileW: number, tileH: number, scale: number) {\n\t\t\tthis.tileW = tileW;\n\t\t\tthis.tileH = tileH;\n\t\t\tthis.scale = scale;\n\t\t\tthis.w = w;\n\t\t\tthis.h = h;\n\t\t\tthis.rows = Math.ceil(h / tileH);\n\t\t\tthis.columns = Math.ceil(w / tileW);\n\t\t\trelease || assert(this.rows < 2048 && this.columns < 2048);\n\t\t\tthis.tiles = [];\n\t\t\tlet index = 0;\n\t\t\tfor (let y = 0; y < this.rows; y++) {\n\t\t\t\tfor (let x = 0; x < this.columns; x++) {\n\t\t\t\t\tthis.tiles.push(new Tile(index++, x, y, tileW, tileH, scale));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Query tiles using a transformed rectangle.\n\t\t * TODO: Fine-tune these heuristics.\n\t\t */\n\t\tgetTiles(query: Rectangle, transform: Matrix): Tile [] {\n\t\t\tif (transform.emptyArea(query)) {\n\t\t\t\treturn [];\n\t\t\t} else if (transform.infiniteArea(query)) {\n\t\t\t\treturn this.tiles;\n\t\t\t}\n\t\t\tlet tileCount = this.columns * this.rows;\n\t\t\t// The |getFewTiles| algorithm works better for a few tiles but it can't handle skew transforms.\n\t\t\tif (tileCount < 40 && transform.isScaleOrRotation()) {\n\t\t\t\tlet precise = tileCount > 10;\n\t\t\t\treturn this.getFewTiles(query, transform, precise);\n\t\t\t} else {\n\t\t\t\treturn this.getManyTiles(query, transform);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Precise indicates that we want to do an exact OBB intersection.\n\t\t */\n\t\tprivate getFewTiles(query: Rectangle, transform: Matrix, precise: boolean = true): Tile [] {\n\t\t\tif (transform.isTranslationOnly() && this.tiles.length === 1) {\n\t\t\t\tif (this.tiles[0].bounds.intersectsTranslated(query, transform.tx, transform.ty)) {\n\t\t\t\t\treturn [this.tiles[0]];\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\ttransform.transformRectangle(query, TileCache._points);\n\t\t\tlet queryOBB;\n\t\t\tlet queryBounds = new Rectangle(0, 0, this.w, this.h);\n\t\t\tif (precise) {\n\t\t\t\tqueryOBB = new OBB(TileCache._points);\n\t\t\t}\n\t\t\tqueryBounds.intersect(OBB.getBounds(TileCache._points));\n\n\t\t\tif (queryBounds.isEmpty()) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tlet minX = queryBounds.x / this.tileW | 0;\n\t\t\tlet minY = queryBounds.y / this.tileH | 0;\n\t\t\tlet maxX = Math.ceil((queryBounds.x + queryBounds.w) / this.tileW) | 0;\n\t\t\tlet maxY = Math.ceil((queryBounds.y + queryBounds.h) / this.tileH) | 0;\n\n\t\t\tminX = clamp(minX, 0, this.columns);\n\t\t\tmaxX = clamp(maxX, 0, this.columns);\n\t\t\tminY = clamp(minY, 0, this.rows);\n\t\t\tmaxY = clamp(maxY, 0, this.rows);\n\n\t\t\tlet tiles = [];\n\t\t\tfor (let x = minX; x < maxX; x++) {\n\t\t\t\tfor (let y = minY; y < maxY; y++) {\n\t\t\t\t\tlet tile = this.tiles[y * this.columns + x];\n\t\t\t\t\tif (tile.bounds.intersects(queryBounds) && (precise ? tile.getOBB().intersects(queryOBB) : true)) {\n\t\t\t\t\t\ttiles.push(tile);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tiles;\n\t\t}\n\n\t\tprivate getManyTiles(query: Rectangle, transform: Matrix): Tile [] {\n\t\t\tfunction intersectX(x: number, p1: Point, p2: Point): number {\n\t\t\t\t// (x - x1) * (y2 - y1) = (y - y1) * (x2 - x1)\n\t\t\t\treturn (x - p1.x) * (p2.y - p1.y) / (p2.x - p1.x) + p1.y;\n\t\t\t}\n\n\t\t\tfunction appendTiles(tiles: Tile[], cache: TileCache,\n\t\t\t                     column: number, startRow: number, endRow: number) {\n\t\t\t\tif (column < 0 || column >= cache.columns) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet j1 = clamp(startRow, 0, cache.rows);\n\t\t\t\tlet j2 = clamp(endRow + 1, 0, cache.rows);\n\t\t\t\tfor (let j = j1; j < j2; j++) {\n\t\t\t\t\ttiles.push(cache.tiles[j * cache.columns + column]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet rectPoints: Point[] = TileCache._points;\n\t\t\ttransform.transformRectangle(query, rectPoints);\n\n\t\t\t// finding minimal-x point, placing at first (and last)\n\t\t\tlet i1 = rectPoints[0].x < rectPoints[1].x ? 0 : 1;\n\t\t\tlet i2 = rectPoints[2].x < rectPoints[3].x ? 2 : 3;\n\t\t\tlet i0 = rectPoints[i1].x < rectPoints[i2].x ? i1 : i2;\n\t\t\tlet lines: Point[] = [];\n\t\t\tfor (let j = 0; j < 5; j++, i0++) {\n\t\t\t\tlines.push(rectPoints[i0 % 4]);\n\t\t\t}\n\t\t\t// and keeping points ordered counterclockwise\n\t\t\tif ((lines[1].x - lines[0].x) * (lines[3].y - lines[0].y) <\n\t\t\t\t(lines[1].y - lines[0].y) * (lines[3].x - lines[0].x)) {\n\t\t\t\tlet tmp: Point = lines[1];\n\t\t\t\tlines[1] = lines[3];\n\t\t\t\tlines[3] = tmp;\n\t\t\t}\n\n\t\t\tlet tiles: Array<Tile> = [];\n\n\t\t\tlet lastY1, lastY2;\n\t\t\tlet i = Math.floor(lines[0].x / this.tileW);\n\t\t\tlet nextX = (i + 1) * this.tileW;\n\t\t\tif (lines[2].x < nextX) {\n\t\t\t\t// edge case: all fits into one column\n\t\t\t\tlastY1 = Math.min(lines[0].y, lines[1].y, lines[2].y, lines[3].y);\n\t\t\t\tlastY2 = Math.max(lines[0].y, lines[1].y, lines[2].y, lines[3].y);\n\t\t\t\tlet j1 = Math.floor(lastY1 / this.tileH);\n\t\t\t\tlet j2 = Math.floor(lastY2 / this.tileH);\n\t\t\t\tappendTiles(tiles, this, i, j1, j2);\n\t\t\t\treturn tiles;\n\t\t\t}\n\n\t\t\tlet line1 = 0, line2 = 4;\n\t\t\tlet lastSegment1 = false, lastSegment2 = false;\n\t\t\tif (lines[0].x === lines[1].x || lines[0].x === lines[3].x) {\n\t\t\t\t// edge case: first rectangle side parallel to columns\n\t\t\t\tif (lines[0].x === lines[1].x) {\n\t\t\t\t\tlastSegment1 = true;\n\t\t\t\t\tline1++;\n\t\t\t\t} else {\n\t\t\t\t\tlastSegment2 = true;\n\t\t\t\t\tline2--;\n\t\t\t\t}\n\n\t\t\t\tlastY1 = intersectX(nextX, lines[line1], lines[line1 + 1]);\n\t\t\t\tlastY2 = intersectX(nextX, lines[line2], lines[line2 - 1]);\n\n\t\t\t\tlet j1 = Math.floor(lines[line1].y / this.tileH);\n\t\t\t\tlet j2 = Math.floor(lines[line2].y / this.tileH);\n\t\t\t\tappendTiles(tiles, this, i, j1, j2);\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tlet nextY1, nextY2;\n\t\t\t\tlet nextSegment1, nextSegment2;\n\t\t\t\tif (lines[line1 + 1].x < nextX) {\n\t\t\t\t\tnextY1 = lines[line1 + 1].y;\n\t\t\t\t\tnextSegment1 = true;\n\t\t\t\t} else {\n\t\t\t\t\tnextY1 = intersectX(nextX, lines[line1], lines[line1 + 1]);\n\t\t\t\t\tnextSegment1 = false;\n\t\t\t\t}\n\t\t\t\tif (lines[line2 - 1].x < nextX) {\n\t\t\t\t\tnextY2 = lines[line2 - 1].y;\n\t\t\t\t\tnextSegment2 = true;\n\t\t\t\t} else {\n\t\t\t\t\tnextY2 = intersectX(nextX, lines[line2], lines[line2 - 1]);\n\t\t\t\t\tnextSegment2 = false;\n\t\t\t\t}\n\n\t\t\t\tlet j1 = Math.floor((lines[line1].y < lines[line1 + 1].y ? lastY1 : nextY1) / this.tileH);\n\t\t\t\tlet j2 = Math.floor((lines[line2].y > lines[line2 - 1].y ? lastY2 : nextY2) / this.tileH);\n\t\t\t\tappendTiles(tiles, this, i, j1, j2);\n\n\t\t\t\tif (nextSegment1 && lastSegment1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (nextSegment1) {\n\t\t\t\t\tlastSegment1 = true;\n\t\t\t\t\tline1++;\n\t\t\t\t\tlastY1 = intersectX(nextX, lines[line1], lines[line1 + 1]);\n\t\t\t\t} else {\n\t\t\t\t\tlastY1 = nextY1;\n\t\t\t\t}\n\t\t\t\tif (nextSegment2) {\n\t\t\t\t\tlastSegment2 = true;\n\t\t\t\t\tline2--;\n\t\t\t\t\tlastY2 = intersectX(nextX, lines[line2], lines[line2 - 1]);\n\t\t\t\t} else {\n\t\t\t\t\tlastY2 = nextY2;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tnextX = (i + 1) * this.tileW;\n\t\t\t} while (line1 < line2);\n\t\t\treturn tiles;\n\t\t}\n\t}\n\n\tlet MIN_CACHE_LEVELS = 5;\n\tlet MAX_CACHE_LEVELS = 3;\n\n\t/**\n\t * Manages tile caches at different scales.\n\t */\n\texport class RenderableTileCache {\n\t\tprivate _source: Renderable;\n\t\tprivate _cacheLevels: TileCache [] = [];\n\t\tprivate _tileSize: number;\n\t\tprivate _minUntiledSize: number;\n\n\t\tconstructor(source: Renderable, tileSize: number, minUntiledSize: number) {\n\t\t\tthis._source = source;\n\t\t\tthis._tileSize = tileSize;\n\t\t\tthis._minUntiledSize = minUntiledSize;\n\t\t}\n\n\t\t/**\n\t\t * Gets the tiles covered by the specified |query| rectangle and transformed by the given |transform| matrix.\n\t\t */\n\t\tprivate _getTilesAtScale(query: Rectangle, transform: Matrix, scratchBounds: Rectangle): Tile [] {\n\t\t\tlet transformScale = Math.max(transform.getAbsoluteScaleX(), transform.getAbsoluteScaleY());\n\t\t\t// Use log2(1 / transformScale) to figure out the tile level.\n\t\t\tlet level = 0;\n\t\t\tif (transformScale !== 1) {\n\t\t\t\tlevel = clamp(Math.round(Math.log(1 / transformScale) / Math.LN2), -MIN_CACHE_LEVELS, MAX_CACHE_LEVELS);\n\t\t\t}\n\t\t\tlet scale = pow2(level);\n\t\t\t// Since we use a single tile for dynamic sources, we've got to make sure that it fits in our surface caches ...\n\n\t\t\tif (this._source.hasFlags(NodeFlags.Dynamic)) {\n\t\t\t\t// .. so try a lower scale level until it fits.\n\t\t\t\twhile (true) {\n\t\t\t\t\tscale = pow2(level);\n\t\t\t\t\tif (scratchBounds.contains(this._source.getBounds().getAbsoluteBounds().clone().scale(scale, scale))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlevel--;\n\t\t\t\t\trelease || assert(level >= -MIN_CACHE_LEVELS);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If the source is not scalable don't cache any tiles at a higher scale factor. However, it may still make\n\t\t\t// sense to cache at a lower scale factor in case we need to evict larger cached images.\n\t\t\tif (!(this._source.hasFlags(NodeFlags.Scalable))) {\n\t\t\t\tlevel = clamp(level, -MIN_CACHE_LEVELS, 0);\n\t\t\t}\n\t\t\tscale = pow2(level);\n\t\t\tlet levelIndex = MIN_CACHE_LEVELS + level;\n\t\t\tlet cache = this._cacheLevels[levelIndex];\n\t\t\tif (!cache) {\n\t\t\t\tlet bounds = this._source.getBounds().getAbsoluteBounds();\n\t\t\t\tlet scaledBounds = bounds.clone().scale(scale, scale);\n\t\t\t\tlet tileW, tileH;\n\t\t\t\tif (this._source.hasFlags(NodeFlags.Dynamic) ||\n\t\t\t\t\t!this._source.hasFlags(NodeFlags.Tileable) || Math.max(scaledBounds.w, scaledBounds.h) <= this._minUntiledSize) {\n\t\t\t\t\ttileW = scaledBounds.w;\n\t\t\t\t\ttileH = scaledBounds.h;\n\t\t\t\t} else {\n\t\t\t\t\ttileW = tileH = this._tileSize;\n\t\t\t\t}\n\t\t\t\tcache = this._cacheLevels[levelIndex] = new TileCache(scaledBounds.w, scaledBounds.h, tileW, tileH, scale);\n\t\t\t}\n\t\t\treturn cache.getTiles(query, transform.scaleClone(scale, scale));\n\t\t}\n\n\t\tpublic fetchTiles(query: Rectangle,\n\t\t                  transform: Matrix,\n\t\t                  scratchContext: CanvasRenderingContext2D,\n\t\t                  cacheImageCallback: (old: ISurfaceRegion, src: CanvasRenderingContext2D, srcBounds: Rectangle) => ISurfaceRegion): Tile [] {\n\t\t\tlet scratchBounds = new Rectangle(0, 0, scratchContext.canvas.width, scratchContext.canvas.height);\n\t\t\tlet tiles = this._getTilesAtScale(query, transform, scratchBounds);\n\t\t\tlet uncachedTiles: Tile [];\n\t\t\tlet source = this._source;\n\t\t\tfor (let i = 0; i < tiles.length; i++) {\n\t\t\t\tlet tile = tiles[i];\n\t\t\t\tif (!tile.cachedSurfaceRegion || !tile.cachedSurfaceRegion.surface || (source.hasFlags(NodeFlags.Dynamic | NodeFlags.Dirty))) {\n\t\t\t\t\tif (!uncachedTiles) {\n\t\t\t\t\t\tuncachedTiles = [];\n\t\t\t\t\t}\n\t\t\t\t\tuncachedTiles.push(tile);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (uncachedTiles) {\n\t\t\t\tthis._cacheTiles(scratchContext, uncachedTiles, cacheImageCallback, scratchBounds);\n\t\t\t}\n\t\t\tsource.removeFlags(NodeFlags.Dirty);\n\t\t\treturn tiles;\n\t\t}\n\n\t\tprivate _getTileBounds(tiles: Tile []): Rectangle {\n\t\t\tlet bounds = Rectangle.createEmpty();\n\t\t\tfor (let i = 0; i < tiles.length; i++) {\n\t\t\t\tbounds.union(tiles[i].bounds);\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\n\t\t/**\n\t\t * This caches raster versions of the specified |uncachedTiles|. The tiles are generated using a scratch\n\t\t * canvas2D context (|scratchContext|) and then cached via |cacheImageCallback|. Ideally, we want to render\n\t\t * all tiles in one go, but they may not fit in the |scratchContext| in which case we need to render the\n\t\t * source shape several times.\n\t\t *\n\t\t * TODO: Find a good algorithm to do this since it's quite important that we don't repaint too many times.\n\t\t * Spending some time trying to figure out the *optimal* solution may pay-off since painting is soo expensive.\n\t\t */\n\n\t\tprivate _cacheTiles(scratchContext: CanvasRenderingContext2D,\n\t\t                    uncachedTiles: Tile [],\n\t\t                    cacheImageCallback: (old: ISurfaceRegion, src: CanvasRenderingContext2D, srcBounds: Rectangle) => ISurfaceRegion,\n\t\t                    scratchBounds: Rectangle,\n\t\t                    maxRecursionDepth: number = 4) {\n\t\t\trelease || assert(maxRecursionDepth > 0, \"Infinite recursion is likely.\");\n\t\t\tlet uncachedTileBounds = this._getTileBounds(uncachedTiles);\n\t\t\tscratchContext.save();\n\t\t\tscratchContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tscratchContext.clearRect(0, 0, scratchBounds.w, scratchBounds.h);\n\t\t\tscratchContext.translate(-uncachedTileBounds.x, -uncachedTileBounds.y);\n\t\t\tscratchContext.scale(uncachedTiles[0].scale, uncachedTiles[0].scale);\n\t\t\t// Translate so that the source is drawn at the origin.\n\t\t\tlet sourceBounds = this._source.getBounds();\n\t\t\tscratchContext.translate(-sourceBounds.x, -sourceBounds.y);\n\t\t\tprofile && timelineBuffer && timelineBuffer.enter(\"renderTiles\");\n\t\t\ttraceLevel >= TraceLevel.Verbose && writer && writer.writeLn(\"Rendering Tiles: \" + uncachedTileBounds);\n\t\t\tthis._source.render(scratchContext, 0);\n\t\t\tscratchContext.restore();\n\t\t\tprofile && timelineBuffer && timelineBuffer.leave(\"renderTiles\");\n\n\t\t\tlet remainingUncachedTiles: Array<Tile> = null;\n\t\t\tfor (let i = 0; i < uncachedTiles.length; i++) {\n\t\t\t\tlet tile = uncachedTiles[i];\n\t\t\t\tlet region = tile.bounds.clone();\n\t\t\t\tregion.x -= uncachedTileBounds.x;\n\t\t\t\tregion.y -= uncachedTileBounds.y;\n\t\t\t\tif (!scratchBounds.contains(region)) {\n\t\t\t\t\tif (!remainingUncachedTiles) {\n\t\t\t\t\t\tremainingUncachedTiles = [];\n\t\t\t\t\t}\n\t\t\t\t\tremainingUncachedTiles.push(tile);\n\t\t\t\t}\n\t\t\t\ttile.cachedSurfaceRegion = cacheImageCallback(tile.cachedSurfaceRegion, scratchContext, region);\n\t\t\t}\n\t\t\tif (remainingUncachedTiles) {\n\t\t\t\t// This is really dumb at the moment; if we have some tiles left over, partition the tile set in half and recurse.\n\t\t\t\tif (remainingUncachedTiles.length >= 2) {\n\t\t\t\t\tlet a = remainingUncachedTiles.slice(0, remainingUncachedTiles.length / 2 | 0);\n\t\t\t\t\tlet b = remainingUncachedTiles.slice(a.length);\n\t\t\t\t\tthis._cacheTiles(scratchContext, a, cacheImageCallback, scratchBounds, maxRecursionDepth - 1);\n\t\t\t\t\tthis._cacheTiles(scratchContext, b, cacheImageCallback, scratchBounds, maxRecursionDepth - 1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._cacheTiles(scratchContext, remainingUncachedTiles, cacheImageCallback, scratchBounds, maxRecursionDepth - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway.GFX {\n\timport roundToMultipleOfPowerOfTwo = IntegerUtilities.roundToMultipleOfPowerOfTwo;\n\timport assert = Shumway.Debug.assert;\n\timport Rectangle = Geometry.Rectangle;\n\n\n\t/**\n\t * Various 2D rectangular region allocators. These are used to manage\n\t * areas of surfaces, 2D Canvases or WebGL surfaces. Each allocator\n\t * implements the |IRegionAllocator| interface and must provied two\n\t * methods to allocate and free regions.\n\t *\n\t * CompactAllocator: Good for tightly packed surface atlases but becomes\n\t * fragmented easily. Allocation / freeing cost is high and should only\n\t * be used for long lived regions.\n\t *\n\t * GridAllocator: Very fast at allocation and freeing but is not very\n\t * tightly packed. Space is initially partitioned in equally sized grid\n\t * cells which may be much larger than the allocated regions. This should\n\t * be used for fixed size allocation regions.\n\t *\n\t * BucketAllocator: Manages a list of GridAllocators with different grid\n\t * sizes.\n\t */\n\n\texport module RegionAllocator {\n\n\t\texport class Region extends Geometry.Rectangle {\n\t\t\t/**\n\t\t\t * The allocator who allocated this region. Once this is assigned it will never\n\t\t\t * change, even if the region is freed.\n\t\t\t */\n\t\t\tpublic allocator: IRegionAllocator;\n\n\t\t\t/**\n\t\t\t * Whether the region contains allocated data.\n\t\t\t */\n\t\t\tpublic allocated: boolean;\n\t\t}\n\n\t\texport interface IRegionAllocator {\n\t\t\t/**\n\t\t\t * Allocates a 2D region.\n\t\t\t */\n\t\t\tallocate(w: number, h: number): Region;\n\n\t\t\t/**\n\t\t\t * Frees the specified region.\n\t\t\t */\n\t\t\tfree(region: Region): void;\n\t\t}\n\n\t\t/**\n\t\t * Simple 2D bin-packing algorithm that recursively partitions space along the x and y axis. The binary tree\n\t\t * can get quite deep so watch out of deep recursive calls. This algorithm works best when inserting items\n\t\t * that are sorted by width and height, from largest to smallest.\n\t\t */\n\t\texport class CompactAllocator implements IRegionAllocator {\n\t\t\t/**\n\t\t\t * Try out randomizing the orientation of each subdivision, sometimes this can lead to better results.\n\t\t\t */\n\t\t\tstatic RANDOM_ORIENTATION: boolean = true;\n\t\t\tstatic MAX_DEPTH: number = 256;\n\t\t\tprivate _root: CompactCell;\n\n\t\t\tconstructor(w: number, h: number) {\n\t\t\t\tthis._root = new CompactCell(0, 0, w | 0, h | 0, false);\n\t\t\t}\n\n\t\t\tallocate(w: number, h: number): Region {\n\t\t\t\tw = Math.ceil(w);\n\t\t\t\th = Math.ceil(h);\n\t\t\t\trelease || assert(w > 0 && h > 0);\n\t\t\t\tlet result = this._root.insert(w, h);\n\t\t\t\tif (result) {\n\t\t\t\t\tresult.allocator = this;\n\t\t\t\t\tresult.allocated = true;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tfree(region: Region) {\n\t\t\t\tlet cell = <CompactCell>region;\n\t\t\t\trelease || assert(cell.allocator === this);\n\t\t\t\tcell.clear();\n\t\t\t\tregion.allocated = false;\n\t\t\t}\n\t\t}\n\n\t\tclass CompactCell extends RegionAllocator.Region {\n\t\t\tprivate _children: CompactCell [];\n\t\t\tprivate _horizontal: boolean;\n\n\t\t\tconstructor(x: number, y: number, w: number, h: number, horizontal: boolean) {\n\t\t\t\tsuper(x, y, w, h);\n\t\t\t\tthis._children = null;\n\t\t\t\tthis._horizontal = horizontal;\n\t\t\t\tthis.allocated = false;\n\t\t\t}\n\n\t\t\tclear() {\n\t\t\t\tthis._children = null;\n\t\t\t\tthis.allocated = false;\n\t\t\t}\n\n\t\t\tinsert(w: number, h: number): CompactCell {\n\t\t\t\treturn this._insert(w, h, 0);\n\t\t\t}\n\n\t\t\tprivate _insert(w: number, h: number, depth: number): CompactCell {\n\t\t\t\tif (depth > CompactAllocator.MAX_DEPTH) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.allocated) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.w < w || this.h < h) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (!this._children) {\n\t\t\t\t\tlet orientation = !this._horizontal;\n\t\t\t\t\tif (CompactAllocator.RANDOM_ORIENTATION) {\n\t\t\t\t\t\torientation = Math.random() >= 0.5;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._horizontal) {\n\t\t\t\t\t\tthis._children = [\n\t\t\t\t\t\t\tnew CompactCell(this.x, this.y, this.w, h, false),\n\t\t\t\t\t\t\tnew CompactCell(this.x, this.y + h, this.w, this.h - h, orientation),\n\t\t\t\t\t\t];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._children = [\n\t\t\t\t\t\t\tnew CompactCell(this.x, this.y, w, this.h, true),\n\t\t\t\t\t\t\tnew CompactCell(this.x + w, this.y, this.w - w, this.h, orientation),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\tlet first = this._children[0];\n\t\t\t\t\tif (first.w === w && first.h === h) {\n\t\t\t\t\t\tfirst.allocated = true;\n\t\t\t\t\t\treturn first;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._insert(w, h, depth + 1);\n\t\t\t\t} else {\n\t\t\t\t\tlet result;\n\t\t\t\t\tresult = this._children[0]._insert(w, h, depth + 1);\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t\tresult = this._children[1]._insert(w, h, depth + 1);\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Simple grid allocator. Starts off with an empty free list and allocates empty cells. Once a cell\n\t\t * is freed it's pushed into the free list. It gets poped off the next time a region is allocated.\n\t\t */\n\t\texport class GridAllocator implements IRegionAllocator {\n\t\t\tprivate _sizeW: number;\n\t\t\tprivate _sizeH: number;\n\t\t\tprivate _rows: number;\n\t\t\tprivate _columns: number;\n\t\t\tprivate _freeList: GridCell [];\n\t\t\tprivate _index: number;\n\t\t\tprivate _total: number;\n\n\t\t\tconstructor(w: number, h: number, sizeW: number, sizeH: number) {\n\t\t\t\tthis._columns = w / sizeW | 0;\n\t\t\t\tthis._rows = h / sizeH | 0;\n\t\t\t\tthis._sizeW = sizeW;\n\t\t\t\tthis._sizeH = sizeH;\n\t\t\t\tthis._freeList = [];\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._total = this._columns * this._rows;\n\t\t\t}\n\n\t\t\tallocate(w: number, h: number): Region {\n\t\t\t\tw = Math.ceil(w);\n\t\t\t\th = Math.ceil(h);\n\t\t\t\trelease || assert(w > 0 && h > 0);\n\t\t\t\tlet sizeW = this._sizeW;\n\t\t\t\tlet sizeH = this._sizeH;\n\t\t\t\tif (w > sizeW || h > sizeH) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tlet freeList = this._freeList;\n\t\t\t\tlet index = this._index;\n\t\t\t\tif (freeList.length > 0) {\n\t\t\t\t\tlet cell = freeList.pop();\n\t\t\t\t\trelease || assert(cell.allocated === false);\n\t\t\t\t\tcell.w = w;\n\t\t\t\t\tcell.h = h;\n\t\t\t\t\tcell.allocated = true;\n\t\t\t\t\treturn cell;\n\t\t\t\t} else if (index < this._total) {\n\t\t\t\t\tlet y = (index / this._columns) | 0;\n\t\t\t\t\tlet x = index - (y * this._columns);\n\t\t\t\t\tlet cell = new GridCell(x * sizeW, y * sizeH, w, h);\n\t\t\t\t\tcell.index = index;\n\t\t\t\t\tcell.allocator = this;\n\t\t\t\t\tcell.allocated = true;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfree(region: Region) {\n\t\t\t\tlet cell = <GridCell>region;\n\t\t\t\trelease || assert(cell.allocator === this);\n\t\t\t\tcell.allocated = false;\n\t\t\t\tthis._freeList.push(cell);\n\t\t\t}\n\t\t}\n\n\t\texport class GridCell extends RegionAllocator.Region {\n\t\t\tindex: number = -1;\n\n\t\t\tconstructor(x: number, y: number, w: number, h: number) {\n\t\t\t\tsuper(x, y, w, h);\n\t\t\t}\n\t\t}\n\n\t\tclass Bucket {\n\t\t\tconstructor(public size: number,\n\t\t\t            public region: Rectangle,\n\t\t\t            public allocator: IRegionAllocator) {\n\t\t\t}\n\t\t}\n\n\t\texport class BucketCell extends RegionAllocator.Region {\n\t\t\tregion: RegionAllocator.Region;\n\n\t\t\tconstructor(x: number, y: number, w: number, h: number, region: any) {\n\t\t\t\tsuper(x, y, w, h);\n\t\t\t\tthis.region = region;\n\t\t\t}\n\t\t}\n\n\t\texport class BucketAllocator implements IRegionAllocator {\n\t\t\tprivate _w: number;\n\t\t\tprivate _h: number;\n\t\t\tprivate _filled: number;\n\t\t\tprivate _buckets: Bucket [];\n\n\t\t\tconstructor(w: number, h: number) {\n\t\t\t\trelease || assert(w > 0 && h > 0);\n\t\t\t\tthis._buckets = [];\n\t\t\t\tthis._w = w | 0;\n\t\t\t\tthis._h = h | 0;\n\t\t\t\tthis._filled = 0;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Finds the first bucket that is large enough to hold the requested region. If no\n\t\t\t * such bucket exists, then allocates a new bucket if there is room otherwise\n\t\t\t * returns null;\n\t\t\t */\n\t\t\tallocate(w: number, h: number): Region {\n\t\t\t\tw = Math.ceil(w);\n\t\t\t\th = Math.ceil(h);\n\t\t\t\trelease || assert(w > 0 && h > 0);\n\t\t\t\tlet size = Math.max(w, h);\n\t\t\t\tif (w > this._w || h > this._h) {\n\t\t\t\t\t// Too big, cannot allocate this.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tlet region = null;\n\t\t\t\tlet bucket;\n\t\t\t\tlet buckets = this._buckets;\n\t\t\t\tdo {\n\t\t\t\t\tfor (let i = 0; i < buckets.length; i++) {\n\t\t\t\t\t\tif (buckets[i].size >= size) {\n\t\t\t\t\t\t\tbucket = buckets[i];\n\t\t\t\t\t\t\tregion = bucket.allocator.allocate(w, h);\n\t\t\t\t\t\t\tif (region) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!region) {\n\t\t\t\t\t\tlet remainingSpace = this._h - this._filled;\n\t\t\t\t\t\tif (remainingSpace < h) {\n\t\t\t\t\t\t\t// Couldn't allocate region and there is no more vertical space to allocate\n\t\t\t\t\t\t\t// a new bucket that can fit the requested size. So give up.\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet gridSize = roundToMultipleOfPowerOfTwo(size, 8);\n\t\t\t\t\t\tlet bucketHeight = gridSize * 2;\n\t\t\t\t\t\tif (bucketHeight > remainingSpace) {\n\t\t\t\t\t\t\tbucketHeight = remainingSpace;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (bucketHeight < gridSize) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet bucketRegion = new Rectangle(0, this._filled, this._w, bucketHeight);\n\t\t\t\t\t\tthis._buckets.push(\n\t\t\t\t\t\t\tnew Bucket(gridSize, bucketRegion, new GridAllocator(bucketRegion.w, bucketRegion.h, gridSize, gridSize))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._filled += bucketHeight;\n\t\t\t\t\t}\n\t\t\t\t} while (!region);\n\n\t\t\t\treturn new BucketCell(bucket.region.x + region.x, bucket.region.y + region.y, region.w, region.h, region);\n\t\t\t}\n\n\t\t\tfree(region: BucketCell) {\n\t\t\t\tregion.region.allocator.free(region.region);\n\t\t\t}\n\t\t}\n\t}\n\n\texport module SurfaceRegionAllocator {\n\t\texport interface ISurfaceRegionAllocator {\n\t\t\t/**\n\t\t\t * Used surfaces.\n\t\t\t */\n\t\t\tsurfaces: ISurface [];\n\n\t\t\t/**\n\t\t\t * Adds a surface to the pool of allocation surfaces.\n\t\t\t */\n\t\t\taddSurface(surface: ISurface): void;\n\n\t\t\t/**\n\t\t\t * Allocates a 2D region.\n\t\t\t */\n\t\t\tallocate(w: number, h: number, excludeSurface: ISurface): ISurfaceRegion;\n\n\t\t\t/**\n\t\t\t * Frees the specified region.\n\t\t\t */\n\t\t\tfree(region: ISurfaceRegion): void;\n\t\t}\n\n\t\texport class SimpleAllocator implements ISurfaceRegionAllocator {\n\t\t\tprivate _createSurface: (w: number, h: number) => ISurface;\n\t\t\tprivate _surfaces: ISurface [];\n\n\t\t\tpublic get surfaces(): ISurface [] {\n\t\t\t\treturn this._surfaces;\n\t\t\t}\n\n\t\t\tconstructor(createSurface: (w: number, h: number) => ISurface) {\n\t\t\t\tthis._createSurface = createSurface;\n\t\t\t\tthis._surfaces = [];\n\t\t\t}\n\n\t\t\tprivate _createNewSurface(w: number, h: number): ISurface {\n\t\t\t\tlet surface = this._createSurface(w, h);\n\t\t\t\tthis._surfaces.push(surface);\n\t\t\t\treturn surface;\n\t\t\t}\n\n\t\t\taddSurface(surface: ISurface) {\n\t\t\t\tthis._surfaces.push(surface);\n\t\t\t}\n\n\t\t\tallocate(w: number, h: number, excludeSurface: ISurface): ISurfaceRegion {\n\t\t\t\tfor (let i = 0; i < this._surfaces.length; i++) {\n\t\t\t\t\tlet surface = this._surfaces[i];\n\t\t\t\t\tif (surface === excludeSurface) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet region = surface.allocate(w, h);\n\t\t\t\t\tif (region) {\n\t\t\t\t\t\treturn region;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._createNewSurface(w, h).allocate(w, h);\n\t\t\t}\n\n\t\t\tfree(region: ISurfaceRegion) {\n\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway.GFX {\n\timport Rectangle = Geometry.Rectangle;\n\timport Point = Geometry.Point;\n\timport Matrix = Geometry.Matrix;\n\timport DirtyRegion = Geometry.DirtyRegion;\n\timport Filter = Shumway.GFX.Filter;\n\timport TileCache = Geometry.TileCache;\n\timport Tile = Geometry.Tile;\n\timport OBB = Geometry.OBB;\n\n\timport assert = Shumway.Debug.assert;\n\timport unexpected = Shumway.Debug.unexpected;\n\n\texport enum BlendMode {\n\t\tNormal = 1,\n\t\tLayer = 2,\n\t\tMultiply = 3,\n\t\tScreen = 4,\n\t\tLighten = 5,\n\t\tDarken = 6,\n\t\tDifference = 7,\n\t\tAdd = 8,\n\t\tSubtract = 9,\n\t\tInvert = 10,\n\t\tAlpha = 11,\n\t\tErase = 12,\n\t\tOverlay = 13,\n\t\tHardLight = 14\n\t}\n\n\texport const enum NodeFlags {\n\t\tNone = 0x00000,\n\n\t\tVisible = 0x00001,\n\n\t\tTransparent = 0x00002,\n\n\t\t/**\n\t\t * Whether this node acts as a mask for another node.\n\t\t */\n\t\tIsMask = 0x00004,\n\n\t\t/**\n\t\t * Whether this node is marked to be cached as a bitmap. This isn't just a performance optimization,\n\t\t * but also affects the way masking is performed.\n\t\t */\n\t\tCacheAsBitmap = 0x00010,\n\n\t\t/**\n\t\t * Whether this node's contents should be drawn snapped to pixel boundaries.\n\t\t * Only relevant for bitmaps.\n\t\t */\n\t\tPixelSnapping = 0x00020,\n\n\t\t/**\n\t\t * Whether this node's contents should use higher quality image smoothing.\n\t\t * Only relevant for bitmaps.\n\t\t */\n\t\tImageSmoothing = 0x00040,\n\n\t\t/**\n\t\t * Whether source has dynamic content.\n\t\t */\n\t\tDynamic = 0x00100,\n\n\t\t/**\n\t\t * Whether the source's content can be scaled and drawn at a higher resolution.\n\t\t */\n\t\tScalable = 0x00200,\n\n\t\t/**\n\t\t * Whether the source's content should be tiled.\n\t\t */\n\t\tTileable = 0x00400,\n\n\t\t/**\n\t\t * Whether this node's bounding box is automatically computed from its children. If this\n\t\t * flag is |false| then this node's bounding box can only be set via |setBounds|.\n\t\t */\n\t\tBoundsAutoCompute = 0x00800,\n\n\t\t/**\n\t\t * Whether this node needs to be repainted.\n\t\t */\n\t\tDirty = 0x01000,\n\n\t\t/**\n\t\t * Whether this node's bounds is invalid and needs to be recomputed. Only nodes that have the\n\t\t * |BoundsAutoCompute| flag set can have this flag set.\n\t\t */\n\t\tInvalidBounds = 0x02000,\n\n\t\t/**\n\t\t * Whether this node's concatenated matrix is invalid. This happens whenever a node's ancestor\n\t\t * is moved in the node tree.\n\t\t */\n\t\tInvalidConcatenatedMatrix = 0x04000,\n\n\t\t/**\n\t\t * Whether this node's inverted concatenated matrix is invalid. This happens whenever a node's ancestor\n\t\t * is moved in the node tree.\n\t\t */\n\t\tInvalidInvertedConcatenatedMatrix = 0x08000,\n\n\t\t/**\n\t\t * Same as above, but for colors.\n\t\t */\n\t\tInvalidConcatenatedColorMatrix = 0x10000,\n\n\t\t/**\n\t\t * Flags to propagate upwards when a node is added or removed from a group.\n\t\t */\n\t\tUpOnAddedOrRemoved = InvalidBounds | Dirty,\n\n\t\t/**\n\t\t * Flags to propagate downwards when a node is added or removed from a group.\n\t\t */\n\t\tDownOnAddedOrRemoved = InvalidConcatenatedMatrix | InvalidInvertedConcatenatedMatrix | InvalidConcatenatedColorMatrix,\n\n\t\t/**\n\t\t * Flags to propagate upwards when a node is moved.\n\t\t */\n\t\tUpOnMoved = InvalidBounds | Dirty,\n\n\t\t/**\n\t\t * Flags to propagate downwards when a node is moved.\n\t\t */\n\t\tDownOnMoved = InvalidConcatenatedMatrix | InvalidInvertedConcatenatedMatrix,\n\n\t\t/**\n\t\t * Flags to propagate upwards when a node's color matrix is changed.\n\t\t */\n\t\tUpOnColorMatrixChanged = Dirty,\n\n\t\t/**\n\t\t * Flags to propagate downwards when a node's color matrix is changed.\n\t\t */\n\t\tDownOnColorMatrixChanged = InvalidConcatenatedColorMatrix,\n\n\t\t/**\n\t\t * Flags to propagate upwards when a node is invalidated.\n\t\t */\n\t\tUpOnInvalidate = InvalidBounds | Dirty,\n\n\t\t/**\n\t\t * Default node flags, however not all node types use these defaults.\n\t\t */\n\t\tDefault = BoundsAutoCompute |\n\t\t\tInvalidBounds |\n\t\t\tInvalidConcatenatedMatrix |\n\t\t\tInvalidInvertedConcatenatedMatrix |\n\t\t\tVisible,\n\t}\n\n\t/**\n\t * Scene graph object hierarchy. This enum makes it possible to write fast type checks.\n\t */\n\texport const enum NodeType {\n\t\tNode = 0x0001,\n\t\tShape = 0x0003, // 0x0002 | Node,\n\t\tGroup = 0x0005, // 0x0004 | Node,\n\t\tStage = 0x000D, // 0x0008 | Group\n\t\tRenderable = 0x0021  // 0x0020 | Node\n\t}\n\n\tfunction getNodeTypeName(nodeType: NodeType) {\n\t\tif (nodeType === NodeType.Node) return \"Node\";\n\t\telse if (nodeType === NodeType.Shape) return \"Shape\";\n\t\telse if (nodeType === NodeType.Group) return \"Group\";\n\t\telse if (nodeType === NodeType.Stage) return \"Stage\";\n\t\telse if (nodeType === NodeType.Renderable) return \"Renderable\";\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Basic event types. Not much here.\n\t */\n\texport const enum NodeEventType {\n\t\tNone = 0x0000,\n\t\tOnStageBoundsChanged = 0x0001,\n\t\tRemovedFromStage = 0x0002\n\t}\n\n\t/**\n\t * Basic node visitor. Inherit from this if you want a more sophisticated visitor, for instance all\n\t * renderers extends this class.\n\t */\n\texport class NodeVisitor {\n\t\tvisitNode(node: Node, state: State) {\n\t\t\t// ...\n\t\t}\n\n\t\tvisitShape(node: Shape, state: State) {\n\t\t\tthis.visitNode(node, state);\n\t\t}\n\n\t\tvisitGroup(node: Group, state: State) {\n\t\t\tthis.visitNode(node, state);\n\t\t\tlet children = node.getChildren();\n\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\tchildren[i].visit(this, state);\n\t\t\t}\n\t\t}\n\n\t\tvisitStage(node: Stage, state: State) {\n\t\t\tthis.visitGroup(node, state);\n\t\t}\n\n\t\tvisitRenderable(node: Renderable, state: State) {\n\t\t\tthis.visitNode(node, state);\n\t\t}\n\t}\n\n\t/**\n\t * Nodes that cache transformation state. These are used to thread state when traversing\n\t * the scene graph. Since they keep track of rendering state, they might as well become\n\t * scene graph nodes.\n\t */\n\texport class State {\n\t\tconstructor() {\n\n\t\t}\n\t}\n\n\texport class PreRenderState extends State {\n\t\tdepth: number = 0;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\t}\n\n\t/**\n\t * Helper visitor that checks and resets the dirty bit and calculates stack levels. If the root\n\t * node is dirty, then we have to repaint the entire node tree.\n\t */\n\texport class PreRenderVisitor extends NodeVisitor {\n\t\tpublic isDirty = true;\n\t\tprivate _dirtyRegion: DirtyRegion = null;\n\t\tprivate _depth = 0;\n\n\t\tstart(node: Group, dirtyRegion: DirtyRegion) {\n\t\t\tthis._dirtyRegion = dirtyRegion;\n\t\t\tthis._depth = 0;\n\t\t\tnode.visit(this, null);\n\t\t}\n\n\t\tvisitGroup(node: Group, state: State) {\n\t\t\tlet children = node.getChildren();\n\t\t\tthis.visitNode(node, state);\n\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\tchildren[i].visit(this, state);\n\t\t\t}\n\t\t}\n\n\t\tvisitNode(node: Node, state: State) {\n\t\t\tif (node.hasFlags(NodeFlags.Dirty)) {\n\t\t\t\tthis.isDirty = true;\n\t\t\t}\n\t\t\tnode.toggleFlags(NodeFlags.Dirty, false);\n\t\t\tnode.depth = this._depth++;\n\t\t}\n\t}\n\n\t/**\n\t * Debugging visitor.\n\t */\n\texport class TracingNodeVisitor extends NodeVisitor {\n\t\tconstructor(public writer: IndentingWriter) {\n\t\t\tsuper();\n\t\t}\n\n\t\tvisitNode(node: Node, state: State) {\n\t\t\t// ...\n\t\t}\n\n\t\tvisitShape(node: Shape, state: State) {\n\t\t\tthis.writer.writeLn(node.toString());\n\t\t\tthis.visitNode(node, state);\n\t\t}\n\n\t\tvisitGroup(node: Group, state: State) {\n\t\t\tthis.visitNode(node, state);\n\n\t\t\tlet children = node.getChildren();\n\t\t\tthis.writer.enter(node.toString() + \" \" + children.length);\n\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\tchildren[i].visit(this, state);\n\t\t\t}\n\t\t\tthis.writer.outdent();\n\t\t}\n\n\t\tvisitStage(node: Stage, state: State) {\n\t\t\tthis.visitGroup(node, state);\n\t\t}\n\t}\n\n\t/**\n\t * Base class of all nodes in the scene graph.\n\t */\n\texport class Node {\n\t\t/**\n\t\t * Temporary array of nodes to avoid allocations.\n\t\t */\n\t\tprivate static _path: Node [] = [];\n\n\t\t/**\n\t\t * Used to give nodes unique ids.\n\t\t */\n\t\tprivate static _nextId: number = 0;\n\n\t\tprotected _id: number;\n\n\t\tpublic get id(): number {\n\t\t\treturn this._id;\n\t\t}\n\n\t\t/**\n\t\t * Keep track of node type directly on the node so we don't have to use |instanceof| for type checks.\n\t\t */\n\t\tprotected _type: NodeType;\n\n\t\t/**\n\t\t * All sorts of flags.\n\t\t */\n\t\t_flags: NodeFlags;\n\n\t\t/**\n\t\t * Index of this node in its parent's children list.\n\t\t */\n\t\t_index: number;\n\n\t\t/**\n\t\t * Parent node. This is |null| for the root node and for |Renderables| which have more than one parent.\n\t\t */\n\t\t_parent: Group;\n\n\t\t/**\n\t\t * Number of sibillings to clip.\n\t\t */\n\t\tprotected _clip: number = -1;\n\n\t\t/**\n\t\t * Layer info: blend modes, filters and such.\n\t\t */\n\t\tprotected _layer: Layer;\n\n\t\t/**\n\t\t * Transform info: matrix, color matrix. Null transform is the identity.\n\t\t */\n\t\tprotected _transform: Transform;\n\n\t\t/**\n\t\t * This nodes stack level.\n\t\t */\n\t\tpublic depth: number;\n\n\t\tprotected _eventListeners: {\n\t\t\ttype: NodeEventType;\n\t\t\tlistener: (node: Node, type?: NodeEventType) => void;\n\t\t} [] = null;\n\n\t\tprotected _dispatchEvent(type: NodeEventType) {\n\t\t\tif (!this._eventListeners) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet listeners = this._eventListeners;\n\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\tlet listener = listeners[i];\n\t\t\t\tif (listener.type === type) {\n\t\t\t\t\tlistener.listener(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adds an event listener.\n\t\t */\n\t\tpublic addEventListener(type: NodeEventType, listener: (node: Node, type?: NodeEventType) => void) {\n\t\t\tif (!this._eventListeners) {\n\t\t\t\tthis._eventListeners = [];\n\t\t\t}\n\t\t\tthis._eventListeners.push({type: type, listener: listener});\n\t\t}\n\n\t\t/**\n\t\t * Removes an event listener.\n\t\t */\n\t\tpublic removeEventListener(type: NodeEventType, listener: (node: Node, type?: NodeEventType) => void) {\n\t\t\tlet listeners = this._eventListeners;\n\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\tlet listenerObject = listeners[i];\n\t\t\t\tif (listenerObject.type === type && listenerObject.listener === listener) {\n\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Property bag used to attach dynamic properties to this object.\n\t\t */\n\t\tprotected _properties: { [name: string]: any };\n\n\t\tpublic get properties(): { [name: string]: any } {\n\t\t\treturn this._properties || (this._properties = {});\n\t\t}\n\n\t\t/**\n\t\t * Bounds of the scene graph object. Bounds are computed automatically for non-leaf nodes\n\t\t * that have the |NodeFlags.BoundsAutoCompute| flag set.\n\t\t */\n\t\tprotected _bounds: Rectangle;\n\n\t\tconstructor() {\n\t\t\tthis._id = Node._nextId++;\n\t\t\tthis._type = NodeType.Node;\n\t\t\tthis._index = -1;\n\t\t\tthis._parent = null;\n\t\t\tthis.reset();\n\t\t}\n\n\t\t/**\n\t\t * Resets the Node to its initial state but preserves its identity.\n\t\t * It safe to call this on a child without disrupting ownership.\n\t\t */\n\t\treset() {\n\t\t\tthis._flags = NodeFlags.Default;\n\t\t\tthis._bounds = null;\n\t\t\tthis._layer = null;\n\t\t\tthis._transform = null;\n\t\t\tthis._properties = null;\n\t\t\tthis.depth = -1;\n\t\t}\n\n\t\tpublic get clip(): number {\n\t\t\treturn this._clip;\n\t\t}\n\n\t\tpublic set clip(value: number) {\n\t\t\tthis._clip = value;\n\t\t}\n\n\t\tpublic get parent(): Node {\n\t\t\treturn this._parent;\n\t\t}\n\n\t\tpublic getTransformedBounds(target: Node): Rectangle {\n\t\t\tlet bounds = this.getBounds(true);\n\t\t\tif (target === this || bounds.isEmpty()) {\n\t\t\t\t// Nop.\n\t\t\t} else {\n\t\t\t\tlet m = this.getTransform().getConcatenatedMatrix();\n\t\t\t\tif (target) {\n\t\t\t\t\tlet t = target.getTransform().getInvertedConcatenatedMatrix(true);\n\t\t\t\t\tt.preMultiply(m);\n\t\t\t\t\tt.transformRectangleAABB(bounds);\n\t\t\t\t\tt.free();\n\t\t\t\t} else {\n\t\t\t\t\tm.transformRectangleAABB(bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\n\t\t_markCurrentBoundsAsDirtyRegion() {\n\t\t\t// return;\n\t\t\tlet stage = this.getStage();\n\t\t\tif (!stage) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet bounds = this.getTransformedBounds(stage);\n\t\t\tstage.dirtyRegion.addDirtyRectangle(bounds);\n\t\t}\n\n\t\tpublic getStage(withDirtyRegion: boolean = true): Stage {\n\t\t\tlet node = this._parent;\n\t\t\twhile (node) {\n\t\t\t\tif (node.isType(NodeType.Stage)) {\n\t\t\t\t\tlet stage = <Stage>node;\n\t\t\t\t\tif (withDirtyRegion) {\n\t\t\t\t\t\tif (stage.dirtyRegion) {\n\t\t\t\t\t\t\treturn stage;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn stage;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode = node._parent;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * This shouldn't be used on any hot path becuse it allocates.\n\t\t */\n\t\tpublic getChildren(clone: boolean = false): Node [] {\n\t\t\tthrow Shumway.Debug.abstractMethod(\"Node::getChildren\");\n\t\t}\n\n\t\tpublic getBounds(clone: boolean = false): Rectangle {\n\t\t\tthrow Shumway.Debug.abstractMethod(\"Node::getBounds\");\n\t\t}\n\n\t\t/**\n\t\t * Can only be set on nodes without the |NodeFlags.BoundsAutoCompute| flag set.\n\t\t */\n\t\tpublic setBounds(value: Rectangle) {\n\t\t\trelease || assert(!(this._flags & NodeFlags.BoundsAutoCompute));\n\t\t\tlet bounds = this._bounds || (this._bounds = Rectangle.createEmpty());\n\t\t\tbounds.set(value);\n\t\t\tthis.removeFlags(NodeFlags.InvalidBounds);\n\t\t}\n\n\t\tpublic clone(): Node {\n\t\t\tthrow Shumway.Debug.abstractMethod(\"Node::clone\");\n\t\t}\n\n\t\tpublic setFlags(flags: NodeFlags) {\n\t\t\tthis._flags |= flags;\n\t\t}\n\n\t\tpublic hasFlags(flags: NodeFlags): boolean {\n\t\t\treturn (this._flags & flags) === flags;\n\t\t}\n\n\t\tpublic hasAnyFlags(flags: NodeFlags): boolean {\n\t\t\treturn !!(this._flags & flags);\n\t\t}\n\n\t\tpublic removeFlags(flags: NodeFlags) {\n\t\t\tthis._flags &= ~flags;\n\t\t}\n\n\t\tpublic toggleFlags(flags: NodeFlags, on: boolean) {\n\t\t\tif (on) {\n\t\t\t\tthis._flags |= flags;\n\t\t\t} else {\n\t\t\t\tthis._flags &= ~flags;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Propagates flags up the tree. Propagation stops if all flags are already set.\n\t\t */\n\t\t_propagateFlagsUp(flags: NodeFlags) {\n\t\t\tif (flags === NodeFlags.None || this.hasFlags(flags)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.hasFlags(NodeFlags.BoundsAutoCompute)) {\n\t\t\t\tflags &= ~NodeFlags.InvalidBounds;\n\t\t\t}\n\t\t\tthis.setFlags(flags);\n\t\t\tlet parent = this._parent;\n\t\t\tif (parent) {\n\t\t\t\tparent._propagateFlagsUp(flags);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Propagates flags down the tree. Non-containers just set the flags on themselves.\n\t\t */\n\t\t_propagateFlagsDown(flags: NodeFlags) {\n\t\t\tthrow Shumway.Debug.abstractMethod(\"Node::_propagateFlagsDown\");\n\t\t}\n\n\t\tpublic isAncestor(node: Node): boolean {\n\t\t\twhile (node) {\n\t\t\t\tif (node === this) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\trelease || assert(node !== node._parent);\n\t\t\t\tnode = node._parent;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Return's a list of ancestors excluding the |last|, the return list is reused.\n\t\t */\n\t\tstatic _getAncestors(node: Node, last: Node): Node [] {\n\t\t\tlet path = Node._path;\n\t\t\tpath.length = 0;\n\t\t\twhile (node && node !== last) {\n\t\t\t\trelease || assert(node !== node._parent);\n\t\t\t\tpath.push(node);\n\t\t\t\tnode = node._parent;\n\t\t\t}\n\t\t\trelease || assert(node === last, \"Last ancestor is not an ancestor.\");\n\t\t\treturn path;\n\t\t}\n\n\t\t/**\n\t\t * Finds the closest ancestor with a given set of flags that are either turned on or off.\n\t\t */\n\t\t_findClosestAncestor(flags: NodeFlags, on: boolean): Node {\n\t\t\tlet node: Node = this;\n\t\t\twhile (node) {\n\t\t\t\tif (node.hasFlags(flags) === on) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trelease || assert(node !== node._parent);\n\t\t\t\tnode = node._parent;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Type check.\n\t\t */\n\t\tpublic isType(type: NodeType): boolean {\n\t\t\treturn this._type === type;\n\t\t}\n\n\t\t/**\n\t\t * Subtype check.\n\t\t */\n\t\tpublic isTypeOf(type: NodeType): boolean {\n\t\t\treturn (this._type & type) === type;\n\t\t}\n\n\t\tpublic isLeaf(): boolean {\n\t\t\treturn this.isType(NodeType.Renderable) || this.isType(NodeType.Shape);\n\t\t}\n\n\t\tpublic isLinear(): boolean {\n\t\t\tif (this.isLeaf()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isType(NodeType.Group)) {\n\t\t\t\tlet children = (<any>this)._children;\n\t\t\t\tif (children.length === 1 && children[0].isLinear()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic getTransformMatrix(clone: boolean = false): Matrix {\n\t\t\treturn this.getTransform().getMatrix(clone);\n\t\t}\n\n\t\tpublic getTransform(): Transform {\n\t\t\tif (this._transform === null) {\n\t\t\t\tthis._transform = new Transform(this);\n\t\t\t}\n\t\t\treturn this._transform;\n\t\t}\n\n\t\tpublic getLayer(): Layer {\n\t\t\tif (this._layer === null) {\n\t\t\t\tthis._layer = new Layer(this);\n\t\t\t}\n\t\t\treturn this._layer;\n\t\t}\n\n\t\tpublic getLayerBounds(includeFilters: boolean): Rectangle {\n\t\t\tlet bounds = this.getBounds();\n\t\t\tif (includeFilters && this._layer) {\n\t\t\t\tthis._layer.expandBounds(bounds);\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\n//    public getConcatenatedMatrix(clone: boolean = false): Matrix {\n//      let transform: Transform = this.getTransform(false);\n//      if (transform) {\n//        return transform.getConcatenatedMatrix(clone);\n//      }\n//      return Matrix.createIdentity();\n//    }\n\n\t\t/**\n\t\t * Dispatch on node types.\n\t\t */\n\t\tpublic visit(visitor: NodeVisitor, state: State) {\n\t\t\tconst thisAny = this as any;\n\t\t\tswitch (this._type) {\n\t\t\t\tcase NodeType.Node:\n\t\t\t\t\tvisitor.visitNode(this, state);\n\t\t\t\t\tbreak;\n\t\t\t\tcase NodeType.Group:\n\t\t\t\t\tvisitor.visitGroup(thisAny, state);\n\t\t\t\t\tbreak;\n\t\t\t\tcase NodeType.Stage:\n\t\t\t\t\tvisitor.visitStage(thisAny, state);\n\t\t\t\t\tbreak;\n\t\t\t\tcase NodeType.Shape:\n\t\t\t\t\tvisitor.visitShape(thisAny, state);\n\t\t\t\t\tbreak;\n\t\t\t\tcase NodeType.Renderable:\n\t\t\t\t\tvisitor.visitRenderable(thisAny, state);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tDebug.unexpectedCase();\n\t\t\t}\n\t\t}\n\n\t\tpublic invalidate() {\n\t\t\tthis._markCurrentBoundsAsDirtyRegion();\n\t\t\tthis._propagateFlagsUp(NodeFlags.UpOnInvalidate);\n\t\t}\n\n\t\tpublic toString(bounds: boolean = false): string {\n\t\t\tlet s = getNodeTypeName(this._type) + \" \" + this._id;\n\t\t\tif (bounds) {\n\t\t\t\ts += \" \" + this._bounds.toString();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t}\n\n\t/**\n\t * Nodes that contain other nodes.\n\t */\n\texport class Group extends Node {\n\t\tprotected _children: Node [];\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._type = NodeType.Group;\n\t\t\tthis._children = [];\n\t\t}\n\n\t\tpublic getChildren(clone: boolean = false): Node [] {\n\t\t\tif (clone) {\n\t\t\t\treturn this._children.slice(0);\n\t\t\t}\n\t\t\treturn this._children;\n\t\t}\n\n\t\tpublic childAt(index: number): Node {\n\t\t\trelease || assert(index >= 0 && index < this._children.length);\n\t\t\treturn this._children[index];\n\t\t}\n\n\t\tpublic get child(): Node {\n\t\t\trelease || assert(this._children.length === 1);\n\t\t\treturn this._children[0];\n\t\t}\n\n\t\tpublic get groupChild(): Group {\n\t\t\trelease || assert(this._children.length === 1);\n\t\t\trelease || assert(this._children[0] instanceof Group);\n\t\t\treturn <Group>this._children[0];\n\t\t}\n\n\t\t/**\n\t\t * Adds a node and remove's it from its previous location if it has a parent and propagates\n\t\t * flags accordingly.\n\t\t */\n\t\tpublic addChild(node: Node) {\n\t\t\trelease || assert(node);\n\t\t\trelease || assert(!node.isAncestor(this));\n\t\t\tif (node._parent) {\n\t\t\t\tnode._parent.removeChildAt(node._index);\n\t\t\t}\n\t\t\tnode._parent = this;\n\t\t\tnode._index = this._children.length;\n\t\t\tthis._children.push(node);\n\t\t\tthis._propagateFlagsUp(NodeFlags.UpOnAddedOrRemoved);\n\t\t\tnode._propagateFlagsDown(NodeFlags.DownOnAddedOrRemoved);\n\t\t\tnode._markCurrentBoundsAsDirtyRegion();\n\t\t}\n\n\t\t/**\n\t\t * Removes a child at the given index and propagates flags accordingly.\n\t\t */\n\t\tpublic removeChildAt(index: number) {\n\t\t\trelease || assert(index >= 0 && index < this._children.length);\n\t\t\tlet node = this._children[index];\n\t\t\trelease || assert(index === node._index);\n\t\t\tnode._markCurrentBoundsAsDirtyRegion();\n\t\t\tthis._children.splice(index, 1);\n\t\t\tnode._index = -1;\n\t\t\tnode._parent = null;\n\t\t\tthis._propagateFlagsUp(NodeFlags.UpOnAddedOrRemoved);\n\t\t\tnode._propagateFlagsDown(NodeFlags.DownOnAddedOrRemoved);\n\t\t}\n\n\t\tpublic clearChildren() {\n\t\t\tfor (let i = 0; i < this._children.length; i++) {\n\t\t\t\tlet child = this._children[i];\n\t\t\t\tchild._markCurrentBoundsAsDirtyRegion();\n\t\t\t\tif (child) {\n\t\t\t\t\tchild._index = -1;\n\t\t\t\t\tchild._parent = null;\n\t\t\t\t\tchild._propagateFlagsDown(NodeFlags.DownOnAddedOrRemoved);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._children.length = 0;\n\t\t\tthis._propagateFlagsUp(NodeFlags.UpOnAddedOrRemoved);\n\t\t}\n\n\t\t/**\n\t\t * Override and propagate flags to all children.\n\t\t */\n\t\t_propagateFlagsDown(flags: NodeFlags) {\n\t\t\tif (this.hasFlags(flags)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.setFlags(flags);\n\t\t\tlet children = this._children;\n\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\tchildren[i]._propagateFlagsDown(flags);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Takes the union of all child bounds and caches the bounds locally.\n\t\t */\n\t\tpublic getBounds(clone: boolean = false): Rectangle {\n\t\t\tlet bounds = this._bounds || (this._bounds = Rectangle.createEmpty());\n\t\t\tif (this.hasFlags(NodeFlags.InvalidBounds)) {\n\t\t\t\tbounds.setEmpty();\n\t\t\t\tlet children = this._children;\n\t\t\t\tlet childBounds = Rectangle.allocate();\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\tlet child = children[i];\n\t\t\t\t\tchildBounds.set(child.getBounds());\n\t\t\t\t\tchild.getTransformMatrix().transformRectangleAABB(childBounds);\n\t\t\t\t\tbounds.union(childBounds);\n\t\t\t\t}\n\t\t\t\tchildBounds.free();\n\t\t\t\tthis.removeFlags(NodeFlags.InvalidBounds);\n\t\t\t}\n\t\t\tif (clone) {\n\t\t\t\treturn bounds.clone();\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\n\t\t/**\n\t\t * Takes the union of all child bounds, optionaly including filter expansions.\n\t\t */\n\t\tpublic getLayerBounds(includeFilters: boolean): Rectangle {\n\t\t\tif (!includeFilters) {\n\t\t\t\treturn this.getBounds();\n\t\t\t}\n\t\t\tlet bounds = Rectangle.createEmpty();\n\t\t\tlet children = this._children;\n\t\t\tlet childBounds = Rectangle.allocate();\n\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\tlet child = children[i];\n\t\t\t\tchildBounds.set(child.getLayerBounds(includeFilters));\n\t\t\t\tchild.getTransformMatrix().transformRectangleAABB(childBounds);\n\t\t\t\tbounds.union(childBounds);\n\t\t\t}\n\t\t\tchildBounds.free();\n\t\t\tif (includeFilters && this._layer) {\n\t\t\t\tthis._layer.expandBounds(bounds);\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\t}\n\n\t/**\n\t * Transform associated with a node. This helps to reduce the size of nodes.\n\t */\n\texport class Transform {\n\n\t\t/**\n\t\t * Node that this transform belongs to.\n\t\t */\n\t\tprotected _node: Node;\n\n\t\t/**\n\t\t * Transform matrix.\n\t\t */\n\t\tprotected _matrix: Matrix;\n\n\t\t/**\n\t\t * Transform color matrix.\n\t\t */\n\t\tprotected _colorMatrix: ColorMatrix;\n\n\t\t/**\n\t\t * Concatenated matrix. This is not frequently used.\n\t\t */\n\t\tprotected _concatenatedMatrix: Matrix;\n\n\t\t/**\n\t\t * Inverted concatenated matrix. This is not frequently used.\n\t\t */\n\t\tprotected _invertedConcatenatedMatrix: Matrix;\n\n\t\t/**\n\t\t * Concatenated color matrix. This is not frequently used.\n\t\t */\n\t\tprotected _concatenatedColorMatrix: ColorMatrix;\n\n\t\tconstructor(node: Node) {\n\t\t\tthis._node = node;\n\t\t\tthis._matrix = Matrix.createIdentity(); // MEMORY: Lazify construction.\n\t\t\tthis._colorMatrix = ColorMatrix.createIdentity(); // MEMORY: Lazify construction.\n\t\t\tthis._concatenatedMatrix = Matrix.createIdentity(); // MEMORY: Lazify construction.\n\t\t\tthis._invertedConcatenatedMatrix = Matrix.createIdentity(); // MEMORY: Lazify construction.\n\t\t\tthis._concatenatedColorMatrix = ColorMatrix.createIdentity(); // MEMORY: Lazify construction.\n\t\t}\n\n//    public get x(): number {\n//      return this._matrix.tx;\n//    }\n//\n//    public set x(value: number) {\n//      this._matrix.tx = value;\n//      this._node._propagateFlagsUp(NodeFlags.UpOnMoved);\n//      this._node._propagateFlagsDown(NodeFlags.DownOnMoved);\n//    }\n//\n//    public get y(): number {\n//      return this._matrix.ty;\n//    }\n//\n//    public set y(value: number) {\n//      this._matrix.ty = value;\n//      this._node._propagateFlagsUp(NodeFlags.UpOnMoved);\n//      this._node._propagateFlagsDown(NodeFlags.DownOnMoved);\n//    }\n\n\t\t/**\n\t\t * Set a node's transform matrix. You should never mutate the matrix object directly.\n\t\t */\n\t\tpublic setMatrix(value: Matrix) {\n\t\t\tif (this._matrix.isEqual(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._node._markCurrentBoundsAsDirtyRegion();\n\t\t\tthis._matrix.set(value);\n\t\t\tthis._node._propagateFlagsUp(NodeFlags.UpOnMoved);\n\t\t\tthis._node._propagateFlagsDown(NodeFlags.DownOnMoved);\n\t\t\tthis._node._markCurrentBoundsAsDirtyRegion();\n\t\t}\n\n\t\tpublic setColorMatrix(value: ColorMatrix) {\n\t\t\tthis._colorMatrix.set(value);\n\t\t\tthis._node._propagateFlagsUp(NodeFlags.UpOnColorMatrixChanged);\n\t\t\tthis._node._propagateFlagsDown(NodeFlags.DownOnColorMatrixChanged);\n\t\t\tthis._node._markCurrentBoundsAsDirtyRegion();\n\t\t}\n\n\t\tpublic getMatrix(clone: boolean = false): Matrix {\n\t\t\tif (clone) {\n\t\t\t\treturn this._matrix.clone();\n\t\t\t}\n\t\t\treturn this._matrix;\n\t\t}\n\n\t\tpublic hasColorMatrix() {\n\t\t\treturn this._colorMatrix !== null;\n\t\t}\n\n\t\tpublic getColorMatrix(clone: boolean = false): ColorMatrix {\n\t\t\tif (this._colorMatrix === null) {\n\t\t\t\tthis._colorMatrix = ColorMatrix.createIdentity();\n\t\t\t}\n\t\t\tif (clone) {\n\t\t\t\treturn this._colorMatrix.clone();\n\t\t\t}\n\t\t\treturn this._colorMatrix;\n\t\t}\n\n\t\t/**\n\t\t * Compute the concatenated transforms for this node and all of its ancestors since we're already doing\n\t\t * all the work.\n\t\t */\n\t\tpublic getConcatenatedMatrix(clone: boolean = false): Matrix {\n\t\t\tif (this._node.hasFlags(NodeFlags.InvalidConcatenatedMatrix)) {\n\t\t\t\tlet ancestor = this._node._findClosestAncestor(NodeFlags.InvalidConcatenatedMatrix, false);\n\t\t\t\tlet path = Node._getAncestors(this._node, ancestor);\n\t\t\t\tlet m = ancestor ? ancestor.getTransform()._concatenatedMatrix.clone() : Matrix.createIdentity();\n\t\t\t\tfor (let i = path.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet ancestor = path[i];\n\t\t\t\t\tlet ancestorTransform = ancestor.getTransform();\n\t\t\t\t\trelease || assert(ancestor.hasFlags(NodeFlags.InvalidConcatenatedMatrix));\n\t\t\t\t\tm.preMultiply(ancestorTransform._matrix);\n\t\t\t\t\tancestorTransform._concatenatedMatrix.set(m);\n\t\t\t\t\tancestor.removeFlags(NodeFlags.InvalidConcatenatedMatrix);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (clone) {\n\t\t\t\treturn this._concatenatedMatrix.clone();\n\t\t\t}\n\t\t\treturn this._concatenatedMatrix;\n\t\t}\n\n\t\tpublic getInvertedConcatenatedMatrix(clone: boolean = false): Matrix {\n\t\t\tif (this._node.hasFlags(NodeFlags.InvalidInvertedConcatenatedMatrix)) {\n\t\t\t\tthis.getConcatenatedMatrix().inverse(this._invertedConcatenatedMatrix);\n\t\t\t\tthis._node.removeFlags(NodeFlags.InvalidInvertedConcatenatedMatrix);\n\t\t\t}\n\t\t\tif (clone) {\n\t\t\t\treturn this._invertedConcatenatedMatrix.clone();\n\t\t\t}\n\t\t\treturn this._invertedConcatenatedMatrix;\n\t\t}\n\n//    public getConcatenatedColorMatrix(clone: boolean = false): ColorMatrix {\n//      // Compute the concatenated color transforms for this node and all of its ancestors.\n//      if (this.hasFlags(NodeFlags.InvalidConcatenatedColorMatrix)) {\n//        let ancestor = <Transform>this._findClosestAncestor(NodeFlags.InvalidConcatenatedColorMatrix, false);\n//        let path = <Transform []>Node._getAncestors(this, ancestor, NodeType.Transform);\n//        let m = ancestor ? ancestor._concatenatedColorMatrix.clone() : ColorMatrix.createIdentity();\n//        for (let i = path.length - 1; i >= 0; i--) {\n//          let ancestor = path[i];\n//          release || assert (ancestor.hasFlags(NodeFlags.InvalidConcatenatedColorMatrix));\n//          // TODO: Premultiply here.\n//          m.multiply(ancestor._colorMatrix);\n//          ancestor._concatenatedColorMatrix.set(m);\n//          ancestor.removeFlags(NodeFlags.InvalidConcatenatedColorMatrix);\n//        }\n//      }\n//      if (clone) {\n//        return this._concatenatedColorMatrix.clone();\n//      }\n//      return this._concatenatedColorMatrix;\n//    }\n\n\t\tpublic toString() {\n\t\t\treturn this._matrix.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Layer information associated with a node. This helps to reduce the size of nodes.\n\t */\n\texport class Layer {\n\t\tprotected _node: Node;\n\t\tprotected _blendMode: BlendMode;\n\t\tprotected _mask: Node;\n\t\tprotected _filters: Filter [];\n\n\t\tconstructor(node: Node) {\n\t\t\tthis._node = node;\n\t\t\tthis._mask = null;\n\t\t\tthis._blendMode = BlendMode.Normal;\n\t\t}\n\n\t\tget filters() {\n\t\t\treturn this._filters;\n\t\t}\n\n\t\tset filters(value: Filter []) {\n\t\t\tthis._filters = value;\n\t\t\tif (value.length) {\n\t\t\t\t// TODO: We could avoid invalidating the node if the new filter list contains equal filter objects.\n\t\t\t\tthis._node.invalidate();\n\t\t\t}\n\t\t}\n\n\t\tget blendMode() {\n\t\t\treturn this._blendMode;\n\t\t}\n\n\t\tset blendMode(value: BlendMode) {\n\t\t\tthis._blendMode = value;\n\t\t}\n\n\t\tget mask(): Node {\n\t\t\treturn this._mask;\n\t\t}\n\n\t\tset mask(value: Node) {\n\t\t\tif (this._mask !== value) {\n\t\t\t\tthis._node.invalidate();\n\t\t\t\tif (this._mask) {\n\t\t\t\t\tthis._mask.removeFlags(NodeFlags.IsMask);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._mask = value;\n\t\t\tif (this._mask) {\n\t\t\t\tthis._mask.setFlags(NodeFlags.IsMask);\n\t\t\t}\n\t\t\t// TODO: Keep track of masked object so we can propagate flags up.\n\t\t}\n\n\t\tpublic toString() {\n\t\t\treturn BlendMode[this._blendMode];\n\t\t}\n\n\t\tpublic expandBounds(bounds: Rectangle) {\n\t\t\tlet filters = this._filters;\n\t\t\tif (filters) {\n\t\t\t\tfor (let i = 0; i < filters.length; i++) {\n\t\t\t\t\tfilters[i].expandBounds(bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shapes are instantiations of Renderables.\n\t */\n\texport class Shape extends Node {\n\t\tprivate _source: Renderable;\n\t\tprivate _ratio: number;\n\n\t\tconstructor(source: Renderable) {\n\t\t\tsuper();\n\t\t\trelease || assert(source);\n\t\t\tthis._source = source;\n\t\t\tthis._type = NodeType.Shape;\n\t\t\tthis._ratio = 0;\n\t\t}\n\n\t\tpublic getBounds(clone: boolean = false): Rectangle {\n\t\t\tlet bounds = this._bounds || (this._bounds = Rectangle.createEmpty());\n\t\t\tif (this.hasFlags(NodeFlags.InvalidBounds)) {\n\t\t\t\tbounds.set(this._source.getBounds());\n\t\t\t\tthis.removeFlags(NodeFlags.InvalidBounds);\n\t\t\t}\n\t\t\tif (clone) {\n\t\t\t\treturn bounds.clone();\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\n\t\tget source(): Renderable {\n\t\t\treturn this._source;\n\t\t}\n\n\t\tget ratio(): number {\n\t\t\treturn this._ratio;\n\t\t}\n\n\t\tset ratio(value: number) {\n\t\t\tif (value === this._ratio) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.invalidate();\n\t\t\tthis._ratio = value;\n\t\t}\n\n\t\t_propagateFlagsDown(flags: NodeFlags) {\n\t\t\tthis.setFlags(flags);\n\t\t}\n\n\t\tpublic getChildren(clone: boolean = false): Node[] {\n\t\t\treturn [this._source];\n\t\t}\n\t}\n\n\n\timport StageAlignFlags = Shumway.Remoting.StageAlignFlags;\n\timport StageScaleMode = Shumway.Remoting.StageScaleMode;\n\n\tfunction getRandomIntInclusive(min: number, max: number): number {\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\n\texport class RendererOptions {\n\t\tdebug: boolean = false;\n\t\tpaintRenderable: boolean = true;\n\t\tpaintBounds: boolean = false;\n\t\tpaintDirtyRegion: boolean = false;\n\t\tpaintFlashing: boolean = false;\n\t\tpaintViewport: boolean = false;\n\t\tclear: boolean = true;\n\t}\n\n\texport const enum Backend {\n\t\tCanvas2D = 0,\n\t\tWebGL = 1, // Soon\n\t\tBoth = 2,\n\t\tDOM = 3, // Someday\n\t\tSVG = 4 // Someday\n\t}\n\n\t/**\n\t * Base class for all renderers.\n\t */\n\texport class Renderer extends NodeVisitor {\n\t\t/**\n\t\t * Everything is clipped by the viewport.\n\t\t */\n\t\tprotected _viewport: Rectangle;\n\n\t\tprotected _options: RendererOptions;\n\n\t\t/**\n\t\t * We can render either into a canvas element or into a div element.\n\t\t */\n\t\tprotected _container: HTMLDivElement | HTMLCanvasElement;\n\n\t\tprotected _stage: Stage;\n\n\t\tprotected _devicePixelRatio: number;\n\n\t\tconstructor(container: HTMLDivElement | HTMLCanvasElement, stage: Stage, options: RendererOptions) {\n\t\t\tsuper();\n\t\t\tthis._container = container;\n\t\t\tthis._stage = stage;\n\t\t\tthis._options = options;\n\t\t\tthis._viewport = Rectangle.createSquare(1024);\n\t\t\tthis._devicePixelRatio = 1;\n\t\t}\n\n\t\tset viewport(viewport: Rectangle) {\n\t\t\tthis._viewport.set(viewport);\n\t\t}\n\n\t\tpublic render() {\n\t\t\tthrow Shumway.Debug.abstractMethod(\"Renderer::render\");\n\t\t}\n\n\t\t/**\n\t\t * Notify renderer that the viewport has changed.\n\t\t */\n\t\tpublic resize() {\n\t\t\tthrow Shumway.Debug.abstractMethod(\"Renderer::resize\");\n\t\t}\n\n\t\t/**\n\t\t * Captures a rectangular region of the easel as a dataURL as specified by |bounds|. |stageContent| indicates if the bounds\n\t\t * should be computed by looking at the bounds of the content of the easel rather than the easel itself.\n\t\t */\n\t\tpublic screenShot(bounds: Rectangle, stageContent: boolean, disableHidpi: boolean): ScreenShot {\n\t\t\tthrow Shumway.Debug.abstractMethod(\"Renderer::screenShot\");\n\t\t}\n\t}\n\n\t/**\n\t * Node container that handles Flash style alignment and scale modes.\n\t */\n\texport class Stage extends Group {\n\t\t/**\n\t\t * This is supposed to keep track of dirty regions.\n\t\t */\n\t\tprivate _dirtyRegion: DirtyRegion;\n\n\t\tpublic get dirtyRegion(): DirtyRegion {\n\t\t\treturn this._dirtyRegion;\n\t\t}\n\n\t\tprivate _align: StageAlignFlags;\n\t\tprivate _scaleMode: StageScaleMode;\n\n\t\t/**\n\t\t * All stage content is added to his child node. This is so what we can set the align and scale\n\t\t * transform to all stage descendants but not affect the stage itself.\n\t\t */\n\t\tprivate _content: Group;\n\n\t\tpublic color: Color;\n\n\t\t// Using these constants initially -- they don't require knowing bounds.\n\t\t// Notice that this default values are different from ActionScript object values.\n\t\tprivate static DEFAULT_SCALE = StageScaleMode.NoScale;\n\t\tprivate static DEFAULT_ALIGN = StageAlignFlags.Left | StageAlignFlags.Top;\n\n\t\tprivate _preVisitor: PreRenderVisitor = new PreRenderVisitor();\n\n\t\tconstructor(w: number, h: number, trackDirtyRegion: boolean = false) {\n\t\t\tsuper();\n\t\t\tthis._flags &= ~NodeFlags.BoundsAutoCompute;\n\t\t\tthis._type = NodeType.Stage;\n\t\t\tthis._scaleMode = Stage.DEFAULT_SCALE;\n\t\t\tthis._align = Stage.DEFAULT_ALIGN;\n\t\t\tthis._content = new Group();\n\t\t\tthis._content._flags &= ~NodeFlags.BoundsAutoCompute;\n\t\t\tthis.addChild(this._content);\n\t\t\tthis.setFlags(NodeFlags.Dirty);\n\t\t\tthis.setBounds(new Rectangle(0, 0, w, h));\n\t\t\tif (trackDirtyRegion) {\n\t\t\t\tthis._dirtyRegion = new DirtyRegion(w, h);\n\t\t\t\tthis._dirtyRegion.addDirtyRectangle(new Rectangle(0, 0, w, h));\n\t\t\t} else {\n\t\t\t\tthis._dirtyRegion = null;\n\t\t\t}\n\t\t\tthis._updateContentMatrix();\n\t\t}\n\n\t\tpublic setBounds(value: Rectangle) {\n\t\t\tsuper.setBounds(value);\n\t\t\tthis._updateContentMatrix();\n\t\t\tthis._dispatchEvent(NodeEventType.OnStageBoundsChanged);\n\t\t\tif (this._dirtyRegion) {\n\t\t\t\tthis._dirtyRegion = new DirtyRegion(value.w, value.h);\n\t\t\t\tthis._dirtyRegion.addDirtyRectangle(value);\n\t\t\t}\n\t\t}\n\n\t\tpublic get content(): Group {\n\t\t\treturn this._content;\n\t\t}\n\n\t\t/**\n\t\t * Checks to see if we should render and if so, clears any relevant dirty flags. Returns\n\t\t * true if rendering should commence. Flag clearing is made optional here in case there\n\t\t * is any code that needs to check if rendering is about to happen.\n\t\t */\n\t\treadyToRender(): boolean {\n\t\t\tthis._preVisitor.isDirty = false;\n\t\t\tthis._preVisitor.start(this, this._dirtyRegion);\n\t\t\tif (this._preVisitor.isDirty) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic get align(): StageAlignFlags {\n\t\t\treturn this._align;\n\t\t}\n\n\t\tpublic set align(value: StageAlignFlags) {\n\t\t\tthis._align = value;\n\t\t\tthis._updateContentMatrix();\n\t\t}\n\n\t\tpublic get scaleMode(): StageScaleMode {\n\t\t\treturn this._scaleMode;\n\t\t}\n\n\t\tpublic set scaleMode(value: StageScaleMode) {\n\t\t\tthis._scaleMode = value;\n\t\t\tthis._updateContentMatrix();\n\t\t}\n\n\t\t/**\n\t\t * Figure out what the content transform shuold be given the current align and scale modes.\n\t\t */\n\t\tprivate _updateContentMatrix() {\n\t\t\tif (this._scaleMode === Stage.DEFAULT_SCALE && this._align === Stage.DEFAULT_ALIGN) {\n\t\t\t\t// Shortcut and also guard to avoid using targetWidth/targetHeight.\n\t\t\t\t// ThetargetWidth/targetHeight normally set in setScaleAndAlign call.\n\t\t\t\tthis._content.getTransform().setMatrix(new Matrix(1, 0, 0, 1, 0, 0));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet bounds = this.getBounds();\n\t\t\tlet contentBounds = this._content.getBounds();\n\n\t\t\t// Debug.assert(this.targetWidth > 0 && this.targetHeight > 0);\n\t\t\tlet wScale = bounds.w / contentBounds.w;\n\t\t\tlet hScale = bounds.h / contentBounds.h;\n\t\t\tlet scaleX, scaleY;\n\t\t\tswitch (this._scaleMode) {\n\t\t\t\tcase StageScaleMode.NoBorder:\n\t\t\t\t\tscaleX = scaleY = Math.max(wScale, hScale);\n\t\t\t\t\tbreak;\n\t\t\t\tcase StageScaleMode.NoScale:\n\t\t\t\t\tscaleX = scaleY = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase StageScaleMode.ExactFit:\n\t\t\t\t\tscaleX = wScale;\n\t\t\t\t\tscaleY = hScale;\n\t\t\t\t\tbreak;\n\t\t\t\t// case StageScaleMode.ShowAll:\n\t\t\t\tdefault:\n\t\t\t\t\tscaleX = scaleY = Math.min(wScale, hScale);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet offsetX;\n\t\t\tif ((this._align & StageAlignFlags.Left)) {\n\t\t\t\toffsetX = 0;\n\t\t\t} else if ((this._align & StageAlignFlags.Right)) {\n\t\t\t\toffsetX = bounds.w - contentBounds.w * scaleX;\n\t\t\t} else {\n\t\t\t\toffsetX = (bounds.w - contentBounds.w * scaleX) / 2;\n\t\t\t}\n\n\t\t\tlet offsetY;\n\t\t\tif ((this._align & StageAlignFlags.Top)) {\n\t\t\t\toffsetY = 0;\n\t\t\t} else if ((this._align & StageAlignFlags.Bottom)) {\n\t\t\t\toffsetY = bounds.h - contentBounds.h * scaleY;\n\t\t\t} else {\n\t\t\t\toffsetY = (bounds.h - contentBounds.h * scaleY) / 2;\n\t\t\t}\n\n\t\t\tthis._content.getTransform().setMatrix(new Matrix(scaleX, 0, 0, scaleY, offsetX, offsetY));\n\t\t}\n\t}\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway.GFX {\n\timport Point = Geometry.Point;\n\timport Rectangle = Geometry.Rectangle;\n\timport PathCommand = Shumway.PathCommand;\n\timport Matrix = Geometry.Matrix;\n\timport DataBuffer = Shumway.ArrayUtilities.DataBuffer;\n\timport swap32 = Shumway.IntegerUtilities.swap32;\n\timport memorySizeToString = Shumway.StringUtilities.memorySizeToString;\n\timport assertUnreachable = Shumway.Debug.assertUnreachable;\n\timport unpremultiplyARGB = Shumway.ColorUtilities.unpremultiplyARGB;\n\timport tableLookupUnpremultiplyARGB = Shumway.ColorUtilities.tableLookupUnpremultiplyARGB;\n\timport assert = Shumway.Debug.assert;\n\timport unexpected = Shumway.Debug.unexpected;\n\timport notImplemented = Shumway.Debug.notImplemented;\n\timport pushUnique = Shumway.ArrayUtilities.pushUnique;\n\timport indexOf = Shumway.ArrayUtilities.indexOf;\n\timport VideoPlaybackEvent = Shumway.Remoting.VideoPlaybackEvent;\n\timport VideoControlEvent = Shumway.Remoting.VideoControlEvent;\n\n\tdeclare let registerInspectorAsset: any;\n\n\t/**\n\t * Represents some source renderable content.\n\t */\n\texport class Renderable extends Node {\n\n\t\t/**\n\t\t * Back reference to nodes that use this renderable.\n\t\t */\n\t\tprivate _parents: Shape [] = [];\n\n\t\t/**\n\t\t * Back reference to renderables that use this renderable.\n\t\t */\n\t\tprivate _renderableParents: Renderable [] = [];\n\n\t\tpublic get parents(): Shape [] {\n\t\t\treturn this._parents;\n\t\t}\n\n\t\tpublic addParent(frame: Shape) {\n\t\t\trelease || assert(frame);\n\t\t\tlet index = indexOf(this._parents, frame);\n\t\t\trelease || assert(index < 0);\n\t\t\tthis._parents.push(frame);\n\t\t}\n\n\t\t/**\n\t\t * Checks if this node will be reached by the renderer.\n\t\t */\n\t\tpublic willRender(): boolean {\n\t\t\tlet parents = this._parents;\n\t\t\tfor (let i = 0; i < parents.length; i++) {\n\t\t\t\tlet node = <Node>parents[i];\n\t\t\t\twhile (node) {\n\t\t\t\t\tif (node.isType(NodeType.Stage)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!node.hasFlags(NodeFlags.Visible)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnode = node._parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic addRenderableParent(renderable: Renderable) {\n\t\t\trelease || assert(renderable);\n\t\t\trelease || assert(this._renderableParents.indexOf(renderable) === -1);\n\t\t\tthis._renderableParents.push(renderable);\n\t\t}\n\n\t\t/**\n\t\t * Returns the first unrooted parent or creates a new parent if none was found.\n\t\t */\n\t\tpublic wrap(): Shape {\n\t\t\tlet node: Shape;\n\t\t\tlet parents = this._parents;\n\t\t\tfor (let i = 0; i < parents.length; i++) {\n\t\t\t\tnode = parents[i];\n\t\t\t\tif (!node._parent) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode = new Shape(this);\n\t\t\tthis.addParent(node);\n\t\t\treturn node;\n\t\t}\n\n\t\tpublic invalidate() {\n\t\t\tthis.setFlags(NodeFlags.Dirty);\n\t\t\tlet nodes = this._parents;\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tnodes[i].invalidate();\n\t\t\t}\n\t\t\tlet renderables = this._renderableParents;\n\t\t\tfor (let i = 0; i < renderables.length; i++) {\n\t\t\t\trenderables[i].invalidate();\n\t\t\t}\n\t\t\tlet listeners = this._invalidateEventListeners;\n\t\t\tif (listeners) {\n\t\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\t\tlisteners[i](this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _invalidateEventListeners: { (renderable: Renderable): void } [] = null;\n\n\t\tpublic addInvalidateEventListener(listener: (renderable: Renderable) => void) {\n\t\t\tif (!this._invalidateEventListeners) {\n\t\t\t\tthis._invalidateEventListeners = [];\n\t\t\t}\n\t\t\tlet index = indexOf(this._invalidateEventListeners, listener);\n\t\t\trelease || assert(index < 0);\n\t\t\tthis._invalidateEventListeners.push(listener);\n\t\t}\n\n\n\t\tgetBounds(clone: boolean = false): Shumway.GFX.Geometry.Rectangle {\n\t\t\tif (clone) {\n\t\t\t\treturn this._bounds.clone();\n\t\t\t}\n\t\t\treturn this._bounds;\n\t\t}\n\n\t\tpublic getChildren(clone: boolean = false): Node [] {\n\t\t\treturn null;\n\t\t}\n\n\t\t_propagateFlagsUp(flags: NodeFlags) {\n\t\t\tif (flags === NodeFlags.None || this.hasFlags(flags)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._parents.length; i++) {\n\t\t\t\tthis._parents[i]._propagateFlagsUp(flags);\n\t\t\t}\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._flags &= ~NodeFlags.BoundsAutoCompute;\n\t\t\tthis._type = NodeType.Renderable;\n\t\t}\n\n\t\t/**\n\t\t * Render source content in the specified |context| or add one or more paths to |clipPath| if specified.\n\t\t * If specified, the rectangular |cullBounds| can be used to cull parts of the shape for better performance.\n\t\t * If |paintStencil| is |true| then we must not create any alpha values, and also not paint any strokes.\n\t\t */\n\t\trender(context: CanvasRenderingContext2D, ratio: number, cullBounds?: Shumway.GFX.Geometry.Rectangle,\n\t\t       clipPath?: Path2D, paintStencil?: boolean): void {\n\n\t\t}\n\t}\n\n\texport class CustomRenderable extends Renderable {\n\t\tconstructor(bounds: Rectangle, render: (context: CanvasRenderingContext2D, ratio: number, cullBounds: Shumway.GFX.Geometry.Rectangle) => void) {\n\t\t\tsuper();\n\t\t\tthis.setBounds(bounds);\n\t\t\tthis.render = render;\n\t\t}\n\t}\n\n\texport interface IVideoPlaybackEventSerializer {\n\t\tsendVideoPlaybackEvent(assetId: number, eventType: VideoPlaybackEvent, data: any): void;\n\t}\n\n\texport const enum RenderableVideoState {\n\t\tIdle = 1,\n\t\tPlaying,\n\t\tPaused,\n\t\tEnded\n\t}\n\n\texport class RenderableVideo extends Renderable {\n\t\t_flags = NodeFlags.Dynamic | NodeFlags.Dirty;\n\t\tprivate _video: HTMLVideoElement;\n\t\tprivate _videoEventHandler: (e: Event) => void;\n\t\tprivate _assetId: number;\n\t\tprivate _eventSerializer: IVideoPlaybackEventSerializer;\n\t\tprivate _lastTimeInvalidated: number = 0;\n\t\tprivate _lastPausedTime: number = 0;\n\t\tprivate _seekHappening: boolean = false;\n\t\tprivate _pauseHappening: boolean = false;\n\t\tprivate _isDOMElement = true;\n\t\tprivate _state: RenderableVideoState;\n\t\tstatic _renderableVideos: RenderableVideo [] = [];\n\n\t\tconstructor(assetId: number, eventSerializer: IVideoPlaybackEventSerializer) {\n\t\t\tsuper();\n\n\t\t\tthis.setBounds(new Rectangle(0, 0, 1, 1));\n\n\t\t\tthis._assetId = assetId;\n\t\t\tthis._eventSerializer = eventSerializer;\n\n\t\t\tlet element: HTMLVideoElement = document.createElement('video');\n\t\t\tlet elementEventHandler = this._handleVideoEvent.bind(this);\n\t\t\telement.preload = 'metadata'; // for mobile devices\n\t\t\telement.addEventListener(\"play\", elementEventHandler);\n\t\t\telement.addEventListener(\"pause\", elementEventHandler);\n\t\t\telement.addEventListener(\"ended\", elementEventHandler);\n\t\t\telement.addEventListener(\"loadeddata\", elementEventHandler);\n\t\t\telement.addEventListener(\"progress\", elementEventHandler);\n\t\t\telement.addEventListener(\"suspend\", elementEventHandler);\n\t\t\telement.addEventListener(\"loadedmetadata\", elementEventHandler);\n\t\t\telement.addEventListener(\"error\", elementEventHandler);\n\t\t\telement.addEventListener(\"seeking\", elementEventHandler);\n\t\t\telement.addEventListener(\"seeked\", elementEventHandler);\n\t\t\telement.addEventListener(\"canplay\", elementEventHandler);\n\t\t\telement.style.position = 'absolute';\n\n\t\t\tthis._video = element;\n\t\t\tthis._videoEventHandler = elementEventHandler;\n\n\t\t\tRenderableVideo._renderableVideos.push(this);\n\n\t\t\tif (typeof registerInspectorAsset !== \"undefined\") {\n\t\t\t\tregisterInspectorAsset(-1, -1, this);\n\t\t\t}\n\n\t\t\tthis._state = RenderableVideoState.Idle;\n\t\t}\n\n\t\tpublic get video(): HTMLVideoElement {\n\t\t\treturn this._video;\n\t\t}\n\n\t\tpublic get state(): RenderableVideoState {\n\t\t\treturn this._state;\n\t\t}\n\n\t\tplay() {\n\t\t\tthis._state = RenderableVideoState.Playing;\n\t\t\tthis._video.play();\n\t\t}\n\n\t\tpause() {\n\t\t\tthis._state = RenderableVideoState.Paused;\n\t\t\tthis._video.pause();\n\t\t}\n\n\t\tprivate _handleVideoEvent(evt: Event) {\n\t\t\tlet type: VideoPlaybackEvent;\n\t\t\tlet data: any = null;\n\t\t\tlet element: HTMLVideoElement = this._video;\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase \"play\":\n\t\t\t\t\tif (!this._pauseHappening) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttype = VideoPlaybackEvent.Unpause;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pause\":\n\t\t\t\t\tif (this._state === RenderableVideoState.Playing) {\n\t\t\t\t\t\telement.play();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttype = VideoPlaybackEvent.Pause;\n\t\t\t\t\tthis._pauseHappening = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ended\":\n\t\t\t\t\tthis._state = RenderableVideoState.Ended;\n\t\t\t\t\tthis._notifyNetStream(VideoPlaybackEvent.PlayStop, data);\n\t\t\t\t\ttype = VideoPlaybackEvent.BufferEmpty;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"loadeddata\":\n\t\t\t\t\tthis._pauseHappening = false;\n\t\t\t\t\tthis._notifyNetStream(VideoPlaybackEvent.PlayStart, data);\n\t\t\t\t\tthis.play();\n\t\t\t\t\treturn;\n\t\t\t\tcase \"canplay\":\n\t\t\t\t\tif (this._pauseHappening) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttype = VideoPlaybackEvent.BufferFull;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"progress\":\n\t\t\t\t\ttype = VideoPlaybackEvent.Progress;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"suspend\":\n//          type = VideoPlaybackEvent.BufferEmpty;\n//          break;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"loadedmetadata\":\n\t\t\t\t\ttype = VideoPlaybackEvent.Metadata;\n\t\t\t\t\tdata = {\n\t\t\t\t\t\tvideoWidth: element.videoWidth,\n\t\t\t\t\t\tvideoHeight: element.videoHeight,\n\t\t\t\t\t\tduration: element.duration\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"error\":\n\t\t\t\t\ttype = VideoPlaybackEvent.Error;\n\t\t\t\t\tdata = {\n\t\t\t\t\t\tcode: element.error.code\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"seeking\":\n\t\t\t\t\tif (!this._seekHappening) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttype = VideoPlaybackEvent.Seeking;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"seeked\":\n\t\t\t\t\tif (!this._seekHappening) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttype = VideoPlaybackEvent.Seeked;\n\t\t\t\t\tthis._seekHappening = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn; // unhandled event\n\t\t\t}\n\t\t\tthis._notifyNetStream(type, data);\n\t\t}\n\n\t\tprivate _notifyNetStream(eventType: VideoPlaybackEvent, data: any): void {\n\t\t\tthis._eventSerializer.sendVideoPlaybackEvent(this._assetId, eventType, data);\n\t\t}\n\n\t\tprocessControlRequest(type: VideoControlEvent, data: any): any {\n\t\t\tlet videoElement = this._video;\n\t\t\tlet ESTIMATED_VIDEO_SECOND_SIZE: number = 500;\n\t\t\tswitch (type) {\n\t\t\t\tcase VideoControlEvent.Init:\n\t\t\t\t\tvideoElement.src = data.url;\n\t\t\t\t\tthis.play();\n\t\t\t\t\tthis._notifyNetStream(VideoPlaybackEvent.Initialized, null);\n\t\t\t\t\tbreak;\n\t\t\t\tcase VideoControlEvent.EnsurePlaying:\n\t\t\t\t\tif (videoElement.paused) {\n\t\t\t\t\t\tvideoElement.play();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase VideoControlEvent.Pause:\n\t\t\t\t\tif (videoElement) {\n\t\t\t\t\t\tif (data.paused && !videoElement.paused) {\n\t\t\t\t\t\t\tif (!isNaN(data.time)) {\n\t\t\t\t\t\t\t\tif (videoElement.seekable.length !== 0) {\n\t\t\t\t\t\t\t\t\tvideoElement.currentTime = data.time;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._lastPausedTime = data.time;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._lastPausedTime = videoElement.currentTime;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t} else if (!data.paused && videoElement.paused) {\n\t\t\t\t\t\t\tthis.play();\n\t\t\t\t\t\t\tif (!isNaN(data.time) && this._lastPausedTime !== data.time && videoElement.seekable.length !== 0) {\n\t\t\t\t\t\t\t\tvideoElement.currentTime = data.time;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase VideoControlEvent.Seek:\n\t\t\t\t\tif (videoElement && videoElement.seekable.length !== 0) {\n\t\t\t\t\t\tthis._seekHappening = true;\n\t\t\t\t\t\tvideoElement.currentTime = data.time;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase VideoControlEvent.GetTime:\n\t\t\t\t\treturn videoElement ? videoElement.currentTime : 0;\n\t\t\t\tcase VideoControlEvent.GetBufferLength:\n\t\t\t\t\treturn videoElement ? videoElement.duration : 0;\n\t\t\t\tcase VideoControlEvent.SetSoundLevels:\n\t\t\t\t\tif (videoElement) {\n\t\t\t\t\t\tvideoElement.volume = data.volume;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase VideoControlEvent.GetBytesLoaded:\n\t\t\t\t\tif (!videoElement) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tlet bufferedTill: number = -1;\n\t\t\t\t\tif (videoElement.buffered) {\n\t\t\t\t\t\tfor (let i = 0; i < videoElement.buffered.length; i++) {\n\t\t\t\t\t\t\tbufferedTill = Math.max(bufferedTill, videoElement.buffered.end(i));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferedTill = videoElement.duration;\n\t\t\t\t\t}\n\t\t\t\t\treturn Math.round(bufferedTill * ESTIMATED_VIDEO_SECOND_SIZE);\n\t\t\t\tcase VideoControlEvent.GetBytesTotal:\n\t\t\t\t\treturn videoElement ? Math.round(videoElement.duration * ESTIMATED_VIDEO_SECOND_SIZE) : 0;\n\t\t\t}\n\t\t}\n\n\t\tpublic checkForUpdate() {\n\t\t\tif (this._lastTimeInvalidated !== this._video.currentTime) {\n\t\t\t\t// Videos composited using DOM elements don't need to invalidate parents.\n\t\t\t\tif (!this._isDOMElement) {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._lastTimeInvalidated = this._video.currentTime;\n\t\t}\n\n\t\tpublic static checkForVideoUpdates() {\n\t\t\tlet renderables = RenderableVideo._renderableVideos;\n\t\t\tfor (let i = 0; i < renderables.length; i++) {\n\t\t\t\tlet renderable = renderables[i];\n\t\t\t\t// Check if the node will be reached by the renderer.\n\t\t\t\tif (renderable.willRender()) {\n\t\t\t\t\t// If the nodes video element isn't already on the video layer, mark the node as invalid to\n\t\t\t\t\t// make sure the video element will be added the next time the renderer reaches it.\n\t\t\t\t\tif (!renderable._video.parentElement) {\n\t\t\t\t\t\trenderable.invalidate();\n\t\t\t\t\t}\n\t\t\t\t\trenderable._video.style.zIndex = renderable.parents[0].depth + '';\n\t\t\t\t} else if (renderable._video.parentElement) {\n\t\t\t\t\t// The nodes video element should be removed if no longer visible.\n\t\t\t\t\trenderable._dispatchEvent(NodeEventType.RemovedFromStage);\n\t\t\t\t}\n\t\t\t\trenderables[i].checkForUpdate();\n\t\t\t}\n\t\t}\n\n\t\trender(context: CanvasRenderingContext2D, ratio: number, cullBounds: Rectangle): void {\n\t\t\tenterTimeline(\"RenderableVideo.render\");\n\t\t\tlet videoElement = this._video;\n\t\t\tif (videoElement && videoElement.videoWidth > 0) {\n\t\t\t\tcontext.drawImage(videoElement,\n\t\t\t\t\t0, 0, videoElement.videoWidth, videoElement.videoHeight,\n\t\t\t\t\t0, 0, this._bounds.w, this._bounds.h);\n\t\t\t}\n\t\t\tleaveTimeline(\"RenderableVideo.render\");\n\t\t}\n\t}\n\n\texport class RenderableBitmap extends Renderable {\n\t\t_flags = NodeFlags.Dynamic | NodeFlags.Dirty;\n\t\tproperties: { [name: string]: any } = {};\n\t\t_canvas: HTMLCanvasElement;\n\t\t_context: CanvasRenderingContext2D;\n\t\t_imageData: ImageData; // Created lazily when an image is created from a BitmapData instance.\n\t\tprivate _sourceImage: HTMLImageElement;\n\t\tprivate fillStyle: ColorStyle;\n\n\t\tpublic static FromDataBuffer(type: ImageType, dataBuffer: DataBuffer, bounds: Rectangle): RenderableBitmap {\n\t\t\tenterTimeline(\"RenderableBitmap.FromDataBuffer\");\n\t\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = bounds.w;\n\t\t\tcanvas.height = bounds.h;\n\t\t\tlet renderableBitmap = new RenderableBitmap(canvas, bounds);\n\t\t\trenderableBitmap.updateFromDataBuffer(type, dataBuffer);\n\t\t\tleaveTimeline(\"RenderableBitmap.FromDataBuffer\");\n\t\t\treturn renderableBitmap;\n\t\t}\n\n\t\tpublic static FromNode(source: Node, matrix: Shumway.GFX.Geometry.Matrix, colorMatrix: Shumway.GFX.ColorMatrix, blendMode: number, clipRect: Rectangle) {\n\t\t\tenterTimeline(\"RenderableBitmap.FromFrame\");\n\t\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\tlet bounds = source.getBounds();\n\t\t\tcanvas.width = bounds.w;\n\t\t\tcanvas.height = bounds.h;\n\t\t\tlet renderableBitmap = new RenderableBitmap(canvas, bounds);\n\t\t\trenderableBitmap.drawNode(source, matrix, colorMatrix, blendMode, clipRect);\n\t\t\tleaveTimeline(\"RenderableBitmap.FromFrame\");\n\t\t\treturn renderableBitmap;\n\t\t}\n\n\t\t/**\n\t\t * Returns a RenderableBitmap from an Image element, which it uses as its source.\n\t\t *\n\t\t * Takes `width` and `height` as arguments so it can deal with non-decoded images,\n\t\t * which will only get their data after asynchronous decoding has completed.\n\t\t */\n\t\tpublic static FromImage(image: HTMLImageElement, width: number, height: number) {\n\t\t\treturn new RenderableBitmap(image, new Rectangle(0, 0, width, height));\n\t\t}\n\n\t\tpublic updateFromDataBuffer(type: ImageType, dataBuffer: DataBuffer) {\n\t\t\tif (!imageUpdateOption.value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet buffer = dataBuffer.buffer;\n\t\t\tenterTimeline(\"RenderableBitmap.updateFromDataBuffer\", {length: dataBuffer.length});\n\t\t\tif (type === ImageType.JPEG || type === ImageType.PNG || type === ImageType.GIF) {\n\t\t\t\trelease || Debug.assertUnreachable(\"Mustn't encounter un-decoded images here\");\n\t\t\t} else {\n\t\t\t\tlet bounds = this._bounds;\n\t\t\t\tlet imageData = this._imageData;\n\t\t\t\tif (!imageData || imageData.width !== bounds.w || imageData.height !== bounds.h) {\n\t\t\t\t\timageData = this._imageData = this._context.createImageData(bounds.w, bounds.h);\n\t\t\t\t}\n\t\t\t\tif (imageConvertOption.value) {\n\t\t\t\t\tenterTimeline(\"ColorUtilities.convertImage\");\n\t\t\t\t\tlet pixels = new Int32Array(buffer);\n\t\t\t\t\tlet out = new Int32Array((<any>imageData.data).buffer);\n\t\t\t\t\tColorUtilities.convertImage(type, ImageType.StraightAlphaRGBA, pixels, out);\n\t\t\t\t\tleaveTimeline(\"ColorUtilities.convertImage\");\n\t\t\t\t}\n\t\t\t\tenterTimeline(\"putImageData\");\n\t\t\t\tthis._ensureSourceCanvas();\n\t\t\t\tthis._context.putImageData(imageData, 0, 0);\n\t\t\t\tleaveTimeline(\"putImageData\");\n\t\t\t}\n\t\t\tthis.invalidate();\n\t\t\tleaveTimeline(\"RenderableBitmap.updateFromDataBuffer\");\n\t\t}\n\n\t\t/**\n\t\t * Writes the image data into the given |output| data buffer.\n\t\t */\n\t\tpublic readImageData(output: DataBuffer) {\n\t\t\toutput.writeRawBytes((<any>this.imageData).data);\n\t\t}\n\n\t\tconstructor(source: any /* HTMLImageElement | HTMLCanvasElement */, bounds: Rectangle) {\n\t\t\tsuper();\n\t\t\tthis.setBounds(bounds);\n\t\t\tif (source instanceof HTMLCanvasElement) {\n\t\t\t\tthis._initializeSourceCanvas(source);\n\t\t\t} else {\n\t\t\t\tthis._sourceImage = source;\n\t\t\t}\n\t\t}\n\n\t\trender(context: CanvasRenderingContext2D, ratio: number, cullBounds: Rectangle): void {\n\t\t\tenterTimeline(\"RenderableBitmap.render\");\n\t\t\tif (this.renderSource) {\n\t\t\t\tcontext.drawImage(this.renderSource, 0, 0);\n\t\t\t} else {\n\t\t\t\tthis._renderFallback(context);\n\t\t\t}\n\t\t\tleaveTimeline(\"RenderableBitmap.render\");\n\t\t}\n\n\t\tdrawNode(source: Node, matrix: Shumway.GFX.Geometry.Matrix,\n\t\t         colorMatrix: Shumway.GFX.ColorMatrix, blendMode: number, clip: Rectangle): void {\n\t\t\t// TODO: Support colorMatrix and blendMode.\n\t\t\tenterTimeline(\"RenderableBitmap.drawFrame\");\n\t\t\t// TODO: Hack to be able to compile this as part of gfx-base.\n\t\t\tlet Canvas2D = (<any>GFX).Canvas2D;\n\t\t\tlet bounds = this.getBounds();\n\t\t\t// TODO: don't create a new renderer every time.\n\t\t\tlet renderer = new Canvas2D.Canvas2DRenderer(this._canvas, null);\n\t\t\trenderer.renderNode(source, clip || bounds, matrix);\n\t\t\tleaveTimeline(\"RenderableBitmap.drawFrame\");\n\t\t}\n\n\t\tmask(alphaValues: Uint8Array) {\n\t\t\tlet imageData = this.imageData;\n\t\t\tlet pixels = new Int32Array((<any>imageData.data).buffer);\n\t\t\tlet T = Shumway.ColorUtilities.getUnpremultiplyTable();\n\t\t\tfor (let i = 0; i < alphaValues.length; i++) {\n\t\t\t\tlet a = alphaValues[i];\n\t\t\t\tif (a === 0) {\n\t\t\t\t\tpixels[i] = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (a === 0xff) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet pixel = pixels[i];\n\t\t\t\tlet r = (pixel >> 0) & 0xff;\n\t\t\t\tlet g = (pixel >> 8) & 0xff;\n\t\t\t\tlet b = (pixel >> 16) & 0xff;\n\t\t\t\tlet o = a << 8;\n\t\t\t\tr = T[o + Math.min(r, a)];\n\t\t\t\tg = T[o + Math.min(g, a)];\n\t\t\t\tb = T[o + Math.min(b, a)];\n\t\t\t\tpixels[i] = a << 24 | b << 16 | g << 8 | r;\n\t\t\t}\n\t\t\tthis._context.putImageData(imageData, 0, 0);\n\t\t}\n\n\t\tprivate _initializeSourceCanvas(source: HTMLCanvasElement) {\n\t\t\tthis._canvas = source;\n\t\t\tthis._context = this._canvas.getContext(\"2d\");\n\t\t}\n\n\t\tprivate _ensureSourceCanvas() {\n\t\t\tif (this._canvas) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet canvas = document.createElement(\"canvas\");\n\t\t\tlet bounds = this._bounds;\n\t\t\tcanvas.width = bounds.w;\n\t\t\tcanvas.height = bounds.h;\n\t\t\tthis._initializeSourceCanvas(canvas);\n\t\t}\n\n\t\tprivate get imageData(): ImageData {\n\t\t\tif (!this._canvas) {\n\t\t\t\trelease || assert(this._sourceImage);\n\t\t\t\tthis._ensureSourceCanvas();\n\t\t\t\tthis._context.drawImage(this._sourceImage, 0, 0);\n\t\t\t\tthis._sourceImage = null;\n\t\t\t}\n\t\t\treturn this._context.getImageData(0, 0, this._bounds.w, this._bounds.h);\n\t\t}\n\n\t\tget renderSource(): any {// Image |  HTMLCanvasElement\n\t\t\treturn this._canvas || this._sourceImage;\n\t\t}\n\n\t\tprivate _renderFallback(context: CanvasRenderingContext2D) {\n\t\t\t// Only render fallback in debug mode.\n\t\t\tif (release) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.fillStyle) {\n\t\t\t\tthis.fillStyle = Shumway.ColorStyle.randomStyle();\n\t\t\t}\n\t\t\tlet bounds = this._bounds;\n\t\t\tcontext.save();\n\t\t\tcontext.beginPath();\n\t\t\tcontext.lineWidth = 2;\n\t\t\tcontext.fillStyle = this.fillStyle as string;\n\t\t\tcontext.fillRect(bounds.x, bounds.y, bounds.w, bounds.h);\n\t\t\tcontext.restore();\n\t\t}\n\t}\n\n\texport const enum PathType {\n\t\tFill,\n\t\tStroke,\n\t\tStrokeFill /* Doesn't define thickness, caps and joints. */\n\t}\n\n\texport class StyledPath {\n\t\tpath: Path2D;\n\n\t\tconstructor(public type: PathType, public style: any, public smoothImage: boolean,\n\t\t            public strokeProperties: StrokeProperties) {\n\t\t\tthis.path = new Path2D();\n\t\t\trelease || assert((type === PathType.Stroke ||\n\t\t\t\ttype === PathType.StrokeFill) === !!strokeProperties);\n\t\t}\n\t}\n\n\texport class StrokeProperties {\n\t\tconstructor(public thickness: number, public scaleMode: LineScaleMode,\n\t\t            public capsStyle: string, public jointsStyle: string,\n\t\t            public miterLimit: number) {\n\t\t}\n\t}\n\n\tfunction morph(start: number, end: number, ratio: number): number {\n\t\treturn start + (end - start) * ratio;\n\t}\n\n\tfunction morphColor(start: number, end: number, ratio: number): number {\n\t\treturn morph(start >> 24 & 0xff, end >> 24 & 0xff, ratio) << 24 |\n\t\t\tmorph(start >> 16 & 0xff, end >> 16 & 0xff, ratio) << 16 |\n\t\t\tmorph(start >> 8 & 0xff, end >> 8 & 0xff, ratio) << 8 |\n\t\t\tmorph(start & 0xff, end & 0xff, ratio);\n\t}\n\n\texport class RenderableShape extends Renderable {\n\t\t_flags: NodeFlags = NodeFlags.Dirty |\n\t\t\tNodeFlags.Scalable |\n\t\t\tNodeFlags.Tileable;\n\n\t\tproperties: { [name: string]: any } = {};\n\n\t\tprivate fillStyle: ColorStyle;\n\t\tprivate _paths: StyledPath[];\n\n\t\tprotected _id: number;\n\t\tprotected _pathData: ShapeData;\n\t\tprotected _textures: RenderableBitmap[];\n\n\t\tprotected static LINE_CAPS_STYLES = ['round', 'butt', 'square'];\n\t\tprotected static LINE_JOINTS_STYLES = ['round', 'bevel', 'miter'];\n\n\t\tconstructor(id: number, pathData: ShapeData, textures: RenderableBitmap[], bounds: Rectangle) {\n\t\t\tsuper();\n\t\t\tthis.setBounds(bounds);\n\t\t\tthis._id = id;\n\t\t\tthis._pathData = pathData;\n\t\t\tthis._textures = textures;\n\t\t\tif (textures.length) {\n\t\t\t\tthis.setFlags(NodeFlags.Dynamic);\n\t\t\t}\n\t\t}\n\n\t\tupdate(pathData: ShapeData, textures: RenderableBitmap[], bounds: Rectangle) {\n\t\t\tthis.setBounds(bounds);\n\t\t\tthis._pathData = pathData;\n\t\t\tthis._paths = null;\n\t\t\tthis._textures = textures;\n\t\t\tthis.setFlags(NodeFlags.Dynamic);\n\t\t\tthis.invalidate();\n\t\t}\n\n\t\t/**\n\t\t * If |clipPath| is not |null| then we must add all paths to |clipPath| instead of drawing to |context|.\n\t\t * We also cannot call |save| or |restore| because those functions reset the current clipping region.\n\t\t * It looks like Flash ignores strokes when clipping so we can also ignore stroke paths when computing\n\t\t * the clip region.\n\t\t *\n\t\t * If |paintStencil| is |true| then we must not create any alpha values, and also not paint\n\t\t * any strokes.\n\t\t */\n\t\trender(context: CanvasRenderingContext2D, ratio: number, cullBounds: Rectangle,\n\t\t       clipPath: Path2D = null, paintStencil: boolean = false): void {\n\t\t\tlet paintStencilStyle = release ? '#000000' : '#FF4981';\n\t\t\tcontext.fillStyle = context.strokeStyle = 'transparent';\n\n\t\t\tlet paths = this._deserializePaths(this._pathData, context, ratio);\n\t\t\trelease || assert(paths);\n\n\t\t\tenterTimeline(\"RenderableShape.render\", this);\n\t\t\tfor (let i = 0; i < paths.length; i++) {\n\t\t\t\tlet path = paths[i];\n\t\t\t\tcontext['mozImageSmoothingEnabled'] = context.msImageSmoothingEnabled =\n\t\t\t\t\tcontext['imageSmoothingEnabled'] =\n\t\t\t\t\t\tpath.smoothImage;\n\t\t\t\tif (path.type === PathType.Fill) {\n\t\t\t\t\tif (clipPath) {\n\t\t\t\t\t\tclipPath.addPath(path.path, (<any>context).currentTransform);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillStyle = paintStencil ? paintStencilStyle : path.style;\n\t\t\t\t\t\tcontext.fill(path.path, 'evenodd');\n\t\t\t\t\t\tcontext.fillStyle = 'transparent';\n\t\t\t\t\t}\n\t\t\t\t} else if (!clipPath && !paintStencil) {\n\t\t\t\t\tcontext.strokeStyle = path.style;\n\t\t\t\t\tlet lineScaleMode = LineScaleMode.Normal;\n\t\t\t\t\tif (path.strokeProperties) {\n\t\t\t\t\t\tlineScaleMode = path.strokeProperties.scaleMode;\n\t\t\t\t\t\tcontext.lineWidth = path.strokeProperties.thickness;\n\t\t\t\t\t\tcontext.lineCap = path.strokeProperties.capsStyle;\n\t\t\t\t\t\tcontext.lineJoin = path.strokeProperties.jointsStyle;\n\t\t\t\t\t\tcontext.miterLimit = path.strokeProperties.miterLimit;\n\t\t\t\t\t}\n\t\t\t\t\t// Special-cases 1px and 3px lines by moving the drawing position down/right by 0.5px.\n\t\t\t\t\t// Flash apparently does this to create sharp, non-aliased lines in the normal case of thin\n\t\t\t\t\t// lines drawn on round pixel values.\n\t\t\t\t\t// Our handling doesn't always create the same results: for drawing coordinates with\n\t\t\t\t\t// fractional values, Flash draws blurry lines. We do, too, but we still move the line\n\t\t\t\t\t// down/right. Flash does something slightly different, with the result that a line drawn\n\t\t\t\t\t// on coordinates slightly below round pixels (0.8, say) will be moved up/left.\n\t\t\t\t\t// Properly fixing this would probably have to happen in the rasterizer. Or when replaying\n\t\t\t\t\t// all the drawing commands, which seems expensive.\n\t\t\t\t\tlet lineWidth = context.lineWidth;\n\t\t\t\t\tlet isSpecialCaseWidth = lineWidth === 1 || lineWidth === 3;\n\t\t\t\t\tif (isSpecialCaseWidth) {\n\t\t\t\t\t\tcontext.translate(0.5, 0.5);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.flashStroke(path.path, lineScaleMode);\n\t\t\t\t\tif (isSpecialCaseWidth) {\n\t\t\t\t\t\tcontext.translate(-0.5, -0.5);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.strokeStyle = 'transparent';\n\t\t\t\t}\n\t\t\t}\n\t\t\tleaveTimeline(\"RenderableShape.render\");\n\t\t}\n\n\t\tprotected _deserializePaths(data: ShapeData, context: CanvasRenderingContext2D,\n\t\t                            ratio: number): StyledPath[] {\n\t\t\trelease || assert(data ? !this._paths : this._paths);\n\t\t\tenterTimeline(\"RenderableShape.deserializePaths\");\n\t\t\t// TODO: Optimize path handling to use only one path if possible.\n\t\t\t// If both line and fill style are set at the same time, we don't need to duplicate the\n\t\t\t// geometry.\n\n\t\t\tif (this._paths) {\n\t\t\t\treturn this._paths;\n\t\t\t}\n\n\t\t\tlet paths: Array<StyledPath> = this._paths = [];\n\n\t\t\tlet fillPath: Path2D = null;\n\t\t\tlet strokePath: Path2D = null;\n\n\t\t\t// We have to alway store the last position because Flash keeps the drawing cursor where it\n\t\t\t// was when changing fill or line style, whereas Canvas forgets it on beginning a new path.\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\t\t\tlet cpX: number;\n\t\t\tlet cpY: number;\n\t\t\tlet formOpen = false;\n\t\t\tlet formOpenX = 0;\n\t\t\tlet formOpenY = 0;\n\t\t\tlet commands = data.commands;\n\t\t\tlet coordinates = data.coordinates;\n\t\t\tlet styles = data.styles;\n\t\t\tstyles.position = 0;\n\t\t\tlet coordinatesIndex = 0;\n\t\t\tlet commandsCount = data.commandsPosition;\n\t\t\t// Description of serialization format can be found in flash.display.Graphics.\n\t\t\tlet commandIndex;\n\t\t\tfor (commandIndex = 0; commandIndex < commandsCount; commandIndex++) {\n\t\t\t\tlet command = commands[commandIndex];\n\t\t\t\tswitch (command) {\n\t\t\t\t\tcase PathCommand.MoveTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 2);\n\t\t\t\t\t\tif (formOpen && fillPath) {\n\t\t\t\t\t\t\tfillPath.lineTo(formOpenX, formOpenY);\n\t\t\t\t\t\t\tstrokePath && strokePath.lineTo(formOpenX, formOpenY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tformOpen = true;\n\t\t\t\t\t\tx = formOpenX = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\ty = formOpenY = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tfillPath && fillPath.moveTo(x, y);\n\t\t\t\t\t\tstrokePath && strokePath.moveTo(x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 2);\n\t\t\t\t\t\tx = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\ty = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tfillPath && fillPath.lineTo(x, y);\n\t\t\t\t\t\tstrokePath && strokePath.lineTo(x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.CurveTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 4);\n\t\t\t\t\t\tcpX = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tcpY = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tx = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\ty = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tfillPath && fillPath.quadraticCurveTo(cpX, cpY, x, y);\n\t\t\t\t\t\tstrokePath && strokePath.quadraticCurveTo(cpX, cpY, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.CubicCurveTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 6);\n\t\t\t\t\t\tcpX = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tcpY = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tlet cpX2 = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tlet cpY2 = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tx = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\ty = coordinates[coordinatesIndex++] / 20;\n\t\t\t\t\t\tfillPath && fillPath.bezierCurveTo(cpX, cpY, cpX2, cpY2, x, y);\n\t\t\t\t\t\tstrokePath && strokePath.bezierCurveTo(cpX, cpY, cpX2, cpY2, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.BeginSolidFill:\n\t\t\t\t\t\trelease || assert(styles.bytesAvailable >= 4);\n\t\t\t\t\t\tfillPath = this._createPath(PathType.Fill,\n\t\t\t\t\t\t\tColorUtilities.rgbaToCSSStyle(styles.readUnsignedInt()),\n\t\t\t\t\t\t\tfalse, null, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.BeginBitmapFill:\n\t\t\t\t\t\tlet bitmapStyle = this._readBitmap(styles, context);\n\t\t\t\t\t\tfillPath = this._createPath(PathType.Fill, bitmapStyle.style, bitmapStyle.smoothImage,\n\t\t\t\t\t\t\tnull, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.BeginGradientFill:\n\t\t\t\t\t\tfillPath = this._createPath(PathType.Fill, this._readGradient(styles, context),\n\t\t\t\t\t\t\tfalse, null, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.EndFill:\n\t\t\t\t\t\tfillPath = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineStyleSolid:\n\t\t\t\t\t\tlet color = ColorUtilities.rgbaToCSSStyle(styles.readUnsignedInt());\n\t\t\t\t\t\t// Skip pixel hinting.\n\t\t\t\t\t\tstyles.position += 1;\n\t\t\t\t\t\tlet scaleMode: LineScaleMode = styles.readByte();\n\t\t\t\t\t\tlet capsStyle: string = RenderableShape.LINE_CAPS_STYLES[styles.readByte()];\n\t\t\t\t\t\tlet jointsStyle: string = RenderableShape.LINE_JOINTS_STYLES[styles.readByte()];\n\t\t\t\t\t\tlet strokeProperties = new StrokeProperties(coordinates[coordinatesIndex++] / 20,\n\t\t\t\t\t\t\tscaleMode, capsStyle, jointsStyle, styles.readByte());\n\t\t\t\t\t\t// Look ahead at the following command to determine if this is a complex stroke style.\n\t\t\t\t\t\tif (commands[commandIndex + 1] === PathCommand.LineStyleGradient) {\n\t\t\t\t\t\t\tcommandIndex++;\n\t\t\t\t\t\t\tstrokePath = this._createPath(PathType.StrokeFill, this._readGradient(styles, context),\n\t\t\t\t\t\t\t\tfalse, strokeProperties, x, y);\n\t\t\t\t\t\t} else if (commands[commandIndex + 1] === PathCommand.LineStyleGradient) {\n\t\t\t\t\t\t\tcommandIndex++;\n\t\t\t\t\t\t\tlet bitmapStyle = this._readBitmap(styles, context);\n\t\t\t\t\t\t\tstrokePath = this._createPath(PathType.StrokeFill, bitmapStyle.style,\n\t\t\t\t\t\t\t\tbitmapStyle.smoothImage, strokeProperties, x, y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstrokePath = this._createPath(PathType.Stroke, color, false, strokeProperties, x, y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineEnd:\n\t\t\t\t\t\tstrokePath = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\trelease || assertUnreachable('Invalid command ' + command + ' encountered at index' +\n\t\t\t\t\t\t\tcommandIndex + ' of ' + commandsCount);\n\t\t\t\t}\n\t\t\t}\n\t\t\trelease || assert(styles.bytesAvailable === 0);\n\t\t\trelease || assert(commandIndex === commandsCount);\n\t\t\trelease || assert(coordinatesIndex === data.coordinatesPosition);\n\t\t\tif (formOpen && fillPath) {\n\t\t\t\tfillPath.lineTo(formOpenX, formOpenY);\n\t\t\t\tstrokePath && strokePath.lineTo(formOpenX, formOpenY);\n\t\t\t}\n\t\t\tthis._pathData = null;\n\t\t\tleaveTimeline(\"RenderableShape.deserializePaths\");\n\n\t\t\treturn paths;\n\t\t}\n\n\t\tprivate _createPath(type: PathType, style: any, smoothImage: boolean,\n\t\t                    strokeProperties: StrokeProperties, x: number, y: number): Path2D {\n\t\t\tlet path = new StyledPath(type, style, smoothImage, strokeProperties);\n\t\t\tthis._paths.push(path);\n\t\t\tpath.path.moveTo(x, y);\n\t\t\treturn path.path;\n\t\t}\n\n\t\tprivate _readMatrix(data: DataBuffer): Matrix {\n\t\t\treturn new Matrix(\n\t\t\t\tdata.readFloat(), data.readFloat(), data.readFloat(),\n\t\t\t\tdata.readFloat(), data.readFloat(), data.readFloat()\n\t\t\t);\n\t\t}\n\n\t\tprivate _readGradient(styles: DataBuffer, context: CanvasRenderingContext2D): CanvasGradient {\n\t\t\t// Assert at least one color stop.\n\t\t\trelease || assert(styles.bytesAvailable >= 1 + 1 + 6 * 4 /* matrix fields as floats */ +\n\t\t\t\t1 + 1 + 4 + 1 + 1);\n\t\t\tlet gradientType = styles.readUnsignedByte();\n\t\t\tlet focalPoint = styles.readShort() * 2 / 0xff;\n\t\t\trelease || assert(focalPoint >= -1 && focalPoint <= 1);\n\t\t\tlet transform = this._readMatrix(styles);\n\t\t\tlet gradient = gradientType === GradientType.Linear ?\n\t\t\t\tcontext.createLinearGradient(-1, 0, 1, 0) :\n\t\t\t\tcontext.createRadialGradient(focalPoint, 0, 0, 0, 0, 1);\n\t\t\tgradient.setTransform && gradient.setTransform(transform.toSVGMatrix());\n\t\t\tlet colorStopsCount = styles.readUnsignedByte();\n\t\t\tfor (let i = 0; i < colorStopsCount; i++) {\n\t\t\t\tlet ratio = styles.readUnsignedByte() / 0xff;\n\t\t\t\tlet cssColor = ColorUtilities.rgbaToCSSStyle(styles.readUnsignedInt());\n\t\t\t\tgradient.addColorStop(ratio, cssColor);\n\t\t\t}\n\n\t\t\t// Skip spread and interpolation modes for now.\n\t\t\tstyles.position += 2;\n\n\t\t\treturn gradient;\n\t\t}\n\n\t\tprivate _readBitmap(styles: DataBuffer,\n\t\t                    context: CanvasRenderingContext2D): {\n\t\t\tstyle: CanvasPattern;\n\t\t\tsmoothImage: boolean\n\t\t} {\n\t\t\trelease || assert(styles.bytesAvailable >= 4 + 6 * 4 /* matrix fields as floats */ + 1 + 1);\n\t\t\tlet textureIndex = styles.readUnsignedInt();\n\t\t\tlet fillTransform: Matrix = this._readMatrix(styles);\n\t\t\tlet repeat = styles.readBoolean() ? 'repeat' : 'no-repeat';\n\t\t\tlet smooth = styles.readBoolean();\n\t\t\tlet texture = this._textures[textureIndex];\n\t\t\tlet fillStyle: CanvasPattern;\n\t\t\tif (texture) {\n\t\t\t\tfillStyle = context.createPattern(texture.renderSource, repeat);\n\t\t\t\tfillStyle.setTransform(fillTransform.toSVGMatrix());\n\t\t\t} else {\n\t\t\t\t// TODO: Wire up initially-missing textures that become available later.\n\t\t\t\t// An invalid SWF can have shape fills refer to images that occur later in the SWF. In that\n\t\t\t\t// case, the image only becomes available once that frame is actually reached. Before that\n\t\t\t\t// the fill isn't drawn; it is drawn once the image becomes available, though.\n\t\t\t\tfillStyle = null;\n\t\t\t}\n\t\t\treturn {style: fillStyle, smoothImage: smooth};\n\t\t}\n\n\t\tprotected _renderFallback(context: CanvasRenderingContext2D) {\n\t\t\tif (!this.fillStyle) {\n\t\t\t\tthis.fillStyle = Shumway.ColorStyle.randomStyle();\n\t\t\t}\n\t\t\tlet bounds = this._bounds;\n\t\t\tcontext.save();\n\t\t\tcontext.beginPath();\n\t\t\tcontext.lineWidth = 2;\n\t\t\tcontext.fillStyle = this.fillStyle as string;\n\t\t\tcontext.fillRect(bounds.x, bounds.y, bounds.w, bounds.h);\n//      context.textBaseline = \"top\";\n//      context.fillStyle = \"white\";\n//      context.fillText(String(id), bounds.x, bounds.y);\n\t\t\tcontext.restore();\n\t\t}\n\n\t}\n\n\texport class RenderableMorphShape extends RenderableShape {\n\t\t_flags: NodeFlags = NodeFlags.Dynamic |\n\t\t\tNodeFlags.Dirty |\n\t\t\tNodeFlags.Scalable |\n\t\t\tNodeFlags.Tileable;\n\n\t\tprivate _morphPaths: { [key: number]: StyledPath[] } = Object.create(null);\n\n\t\tprotected _deserializePaths(data: ShapeData, context: CanvasRenderingContext2D, ratio: number): StyledPath[] {\n\t\t\tenterTimeline(\"RenderableMorphShape.deserializePaths\");\n\t\t\t// TODO: Optimize path handling to use only one path if possible.\n\t\t\t// If both line and fill style are set at the same time, we don't need to duplicate the\n\t\t\t// geometry.\n\n\t\t\tif (this._morphPaths[ratio]) {\n\t\t\t\treturn this._morphPaths[ratio];\n\t\t\t}\n\n\t\t\tlet paths: Array<StyledPath> = this._morphPaths[ratio] = [];\n\n\t\t\tlet fillPath: Path2D = null;\n\t\t\tlet strokePath: Path2D = null;\n\n\t\t\t// We have to alway store the last position because Flash keeps the drawing cursor where it\n\t\t\t// was when changing fill or line style, whereas Canvas forgets it on beginning a new path.\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\t\t\tlet cpX: number;\n\t\t\tlet cpY: number;\n\t\t\tlet formOpen = false;\n\t\t\tlet formOpenX = 0;\n\t\t\tlet formOpenY = 0;\n\t\t\tlet commands = data.commands;\n\t\t\tlet coordinates = data.coordinates;\n\t\t\tlet morphCoordinates = data.morphCoordinates;\n\t\t\tlet styles = data.styles;\n\t\t\tlet morphStyles = data.morphStyles;\n\t\t\tstyles.position = 0;\n\t\t\tmorphStyles.position = 0;\n\t\t\tlet coordinatesIndex = 0;\n\t\t\tlet commandsCount = data.commandsPosition;\n\t\t\t// Description of serialization format can be found in flash.display.Graphics.\n\t\t\tlet commandIndex;\n\t\t\tfor (commandIndex = 0; commandIndex < commandsCount; commandIndex++) {\n\t\t\t\tlet command = commands[commandIndex];\n\t\t\t\tswitch (command) {\n\t\t\t\t\tcase PathCommand.MoveTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 2);\n\t\t\t\t\t\tif (formOpen && fillPath) {\n\t\t\t\t\t\t\tfillPath.lineTo(formOpenX, formOpenY);\n\t\t\t\t\t\t\tstrokePath && strokePath.lineTo(formOpenX, formOpenY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tformOpen = true;\n\t\t\t\t\t\tx = formOpenX = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\ty = formOpenY = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tfillPath && fillPath.moveTo(x, y);\n\t\t\t\t\t\tstrokePath && strokePath.moveTo(x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 2);\n\t\t\t\t\t\tx = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\ty = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tfillPath && fillPath.lineTo(x, y);\n\t\t\t\t\t\tstrokePath && strokePath.lineTo(x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.CurveTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 4);\n\t\t\t\t\t\tcpX = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tcpY = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tx = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\ty = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tfillPath && fillPath.quadraticCurveTo(cpX, cpY, x, y);\n\t\t\t\t\t\tstrokePath && strokePath.quadraticCurveTo(cpX, cpY, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.CubicCurveTo:\n\t\t\t\t\t\trelease || assert(coordinatesIndex <= data.coordinatesPosition - 6);\n\t\t\t\t\t\tcpX = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tcpY = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tlet cpX2 = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tlet cpY2 = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tx = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\ty = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tfillPath && fillPath.bezierCurveTo(cpX, cpY, cpX2, cpY2, x, y);\n\t\t\t\t\t\tstrokePath && strokePath.bezierCurveTo(cpX, cpY, cpX2, cpY2, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.BeginSolidFill:\n\t\t\t\t\t\trelease || assert(styles.bytesAvailable >= 4);\n\t\t\t\t\t\tfillPath = this._createMorphPath(PathType.Fill, ratio,\n\t\t\t\t\t\t\tColorUtilities.rgbaToCSSStyle(\n\t\t\t\t\t\t\t\tmorphColor(styles.readUnsignedInt(), morphStyles.readUnsignedInt(), ratio)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfalse, null, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.BeginBitmapFill:\n\t\t\t\t\t\tlet bitmapStyle = this._readMorphBitmap(styles, morphStyles, ratio, context);\n\t\t\t\t\t\tfillPath = this._createMorphPath(PathType.Fill, ratio, bitmapStyle.style, bitmapStyle.smoothImage,\n\t\t\t\t\t\t\tnull, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.BeginGradientFill:\n\t\t\t\t\t\tlet gradientStyle = this._readMorphGradient(styles, morphStyles, ratio, context);\n\t\t\t\t\t\tfillPath = this._createMorphPath(PathType.Fill, ratio, gradientStyle,\n\t\t\t\t\t\t\tfalse, null, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.EndFill:\n\t\t\t\t\t\tfillPath = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineStyleSolid:\n\t\t\t\t\t\tlet width = morph(coordinates[coordinatesIndex],\n\t\t\t\t\t\t\tmorphCoordinates[coordinatesIndex++], ratio) / 20;\n\t\t\t\t\t\tlet color = ColorUtilities.rgbaToCSSStyle(\n\t\t\t\t\t\t\tmorphColor(styles.readUnsignedInt(), morphStyles.readUnsignedInt(), ratio)\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// Skip pixel hinting.\n\t\t\t\t\t\tstyles.position += 1;\n\t\t\t\t\t\tlet scaleMode: LineScaleMode = styles.readByte();\n\t\t\t\t\t\tlet capsStyle: string = RenderableShape.LINE_CAPS_STYLES[styles.readByte()];\n\t\t\t\t\t\tlet jointsStyle: string = RenderableShape.LINE_JOINTS_STYLES[styles.readByte()];\n\t\t\t\t\t\tlet strokeProperties = new StrokeProperties(\n\t\t\t\t\t\t\twidth, scaleMode, capsStyle, jointsStyle, styles.readByte());\n\t\t\t\t\t\tif (strokeProperties.thickness > 0) {\n\t\t\t\t\t\t\tstrokePath = this._createMorphPath(PathType.Stroke, ratio, color, false, strokeProperties, x, y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineStyleGradient:\n\t\t\t\t\t\tgradientStyle = this._readMorphGradient(styles, morphStyles, ratio, context);\n\t\t\t\t\t\tstrokePath = this._createMorphPath(PathType.StrokeFill, ratio, gradientStyle,\n\t\t\t\t\t\t\tfalse, null, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineStyleBitmap:\n\t\t\t\t\t\tbitmapStyle = this._readMorphBitmap(styles, morphStyles, ratio, context);\n\t\t\t\t\t\tstrokePath = this._createMorphPath(PathType.StrokeFill, ratio, bitmapStyle.style,\n\t\t\t\t\t\t\tbitmapStyle.smoothImage, null, x, y);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PathCommand.LineEnd:\n\t\t\t\t\t\tstrokePath = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\trelease || assertUnreachable('Invalid command ' + command + ' encountered at index' +\n\t\t\t\t\t\t\tcommandIndex + ' of ' + commandsCount);\n\t\t\t\t}\n\t\t\t}\n\t\t\trelease || assert(styles.bytesAvailable === 0);\n\t\t\trelease || assert(commandIndex === commandsCount);\n\t\t\trelease || assert(coordinatesIndex === data.coordinatesPosition);\n\t\t\tif (formOpen && fillPath) {\n\t\t\t\tfillPath.lineTo(formOpenX, formOpenY);\n\t\t\t\tstrokePath && strokePath.lineTo(formOpenX, formOpenY);\n\t\t\t}\n\t\t\tleaveTimeline(\"RenderableMorphShape.deserializPaths\");\n\n\t\t\treturn paths;\n\t\t}\n\n\t\tprivate _createMorphPath(type: PathType, ratio: number, style: any, smoothImage: boolean,\n\t\t                         strokeProperties: StrokeProperties, x: number, y: number): Path2D {\n\t\t\tlet path = new StyledPath(type, style, smoothImage, strokeProperties);\n\t\t\tthis._morphPaths[ratio].push(path);\n\t\t\tpath.path.moveTo(x, y);\n\t\t\treturn path.path;\n\t\t}\n\n\t\tprivate _readMorphMatrix(data: DataBuffer, morphData: DataBuffer, ratio: number): Matrix {\n\t\t\treturn new Matrix(\n\t\t\t\tmorph(data.readFloat(), morphData.readFloat(), ratio),\n\t\t\t\tmorph(data.readFloat(), morphData.readFloat(), ratio),\n\t\t\t\tmorph(data.readFloat(), morphData.readFloat(), ratio),\n\t\t\t\tmorph(data.readFloat(), morphData.readFloat(), ratio),\n\t\t\t\tmorph(data.readFloat(), morphData.readFloat(), ratio),\n\t\t\t\tmorph(data.readFloat(), morphData.readFloat(), ratio)\n\t\t\t);\n\t\t}\n\n\t\tprivate _readMorphGradient(styles: DataBuffer, morphStyles: DataBuffer, ratio: number,\n\t\t                           context: CanvasRenderingContext2D): CanvasGradient {\n\t\t\t// Assert at least one color stop.\n\t\t\trelease || assert(styles.bytesAvailable >= 1 + 1 + 6 * 4 /* matrix fields as floats */ +\n\t\t\t\t1 + 1 + 4 + 1 + 1);\n\t\t\tlet gradientType = styles.readUnsignedByte();\n\t\t\tlet focalPoint = styles.readShort() * 2 / 0xff;\n\t\t\trelease || assert(focalPoint >= -1 && focalPoint <= 1);\n\t\t\tlet transform = this._readMorphMatrix(styles, morphStyles, ratio);\n\t\t\tlet gradient = gradientType === GradientType.Linear ?\n\t\t\t\tcontext.createLinearGradient(-1, 0, 1, 0) :\n\t\t\t\tcontext.createRadialGradient(focalPoint, 0, 0, 0, 0, 1);\n\t\t\tgradient.setTransform && gradient.setTransform(transform.toSVGMatrix());\n\t\t\tlet colorStopsCount = styles.readUnsignedByte();\n\t\t\tfor (let i = 0; i < colorStopsCount; i++) {\n\t\t\t\tlet stop = morph(\n\t\t\t\t\tstyles.readUnsignedByte() / 0xff, morphStyles.readUnsignedByte() / 0xff, ratio\n\t\t\t\t);\n\t\t\t\tlet color = morphColor(\n\t\t\t\t\tstyles.readUnsignedInt(), morphStyles.readUnsignedInt(), ratio\n\t\t\t\t);\n\t\t\t\tlet cssColor = ColorUtilities.rgbaToCSSStyle(color);\n\t\t\t\tgradient.addColorStop(stop, cssColor);\n\t\t\t}\n\n\t\t\t// Skip spread and interpolation modes for now.\n\t\t\tstyles.position += 2;\n\n\t\t\treturn gradient;\n\t\t}\n\n\t\tprivate _readMorphBitmap(styles: DataBuffer, morphStyles: DataBuffer, ratio: number,\n\t\t                         context: CanvasRenderingContext2D): {\n\t\t\tstyle: CanvasPattern;\n\t\t\tsmoothImage: boolean\n\t\t} {\n\t\t\trelease || assert(styles.bytesAvailable >= 4 + 6 * 4 /* matrix fields as floats */ + 1 + 1);\n\t\t\tlet textureIndex = styles.readUnsignedInt();\n\t\t\tlet fillTransform: Matrix = this._readMorphMatrix(styles, morphStyles, ratio);\n\t\t\tlet repeat = styles.readBoolean() ? 'repeat' : 'no-repeat';\n\t\t\tlet smooth = styles.readBoolean();\n\t\t\tlet texture = this._textures[textureIndex];\n\t\t\trelease || assert(texture._canvas);\n\t\t\tlet fillStyle: CanvasPattern = context.createPattern(texture._canvas, repeat);\n\t\t\tfillStyle.setTransform(fillTransform.toSVGMatrix());\n\t\t\treturn {style: fillStyle, smoothImage: smooth};\n\t\t}\n\n\t}\n\n\texport class TextLine {\n\t\tprivate static _measureContext: CanvasRenderingContext2D;\n\n\t\tx: number = 0;\n\t\ty: number = 0;\n\t\twidth: number = 0;\n\t\tascent: number = 0;\n\t\tdescent: number = 0;\n\t\tleading: number = 0;\n\t\talign: number = 0;\n\t\truns: TextRun[] = [];\n\n\t\tprivate static _getMeasureContext(): CanvasRenderingContext2D {\n\t\t\tif (!TextLine._measureContext) {\n\t\t\t\tTextLine._measureContext = document.createElement('canvas').getContext('2d');\n\t\t\t}\n\t\t\treturn TextLine._measureContext;\n\t\t}\n\n\t\taddRun(font: string, fillStyle: string, text: string,\n\t\t       letterSpacing: number, underline: boolean) {\n\t\t\tif (text) {\n\t\t\t\tlet measureContext = TextLine._getMeasureContext();\n\t\t\t\tmeasureContext.font = font;\n\t\t\t\tlet width = measureText(measureContext, text, letterSpacing);\n\t\t\t\tthis.runs.push(new TextRun(font, fillStyle, text, width, letterSpacing, underline));\n\t\t\t\tthis.width += width;\n\t\t\t}\n\t\t}\n\n\t\twrap(maxWidth: number): TextLine[] {\n\t\t\tlet lines: TextLine[] = [this];\n\t\t\tlet runs = this.runs;\n\n\t\t\tlet currentLine: TextLine = this;\n\t\t\tcurrentLine.width = 0;\n\t\t\tcurrentLine.runs = [];\n\n\t\t\tlet measureContext = TextLine._getMeasureContext();\n\n\t\t\tfor (let i = 0; i < runs.length; i++) {\n\t\t\t\tlet run = runs[i];\n\t\t\t\tlet text = run.text;\n\t\t\t\trun.text = '';\n\t\t\t\trun.width = 0;\n\t\t\t\tmeasureContext.font = run.font;\n\t\t\t\tlet spaceLeft = maxWidth;\n\t\t\t\tlet words = text.split(/[\\s.-]/);\n\t\t\t\tlet offset = 0;\n\t\t\t\tfor (let j = 0; j < words.length; j++) {\n\t\t\t\t\tlet word = words[j];\n\t\t\t\t\tlet chunk = text.substr(offset, word.length + 1);\n\t\t\t\t\tlet letterSpacing = run.letterSpacing;\n\t\t\t\t\tlet wordWidth = measureText(measureContext, chunk, letterSpacing);\n\t\t\t\t\tif (wordWidth > spaceLeft) {\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif (run.text) {\n\t\t\t\t\t\t\t\tcurrentLine.runs.push(run);\n\t\t\t\t\t\t\t\tcurrentLine.width += run.width;\n\t\t\t\t\t\t\t\trun = new TextRun(run.font, run.fillStyle, '', 0, run.letterSpacing, run.underline);\n\t\t\t\t\t\t\t\tlet newLine = new TextLine();\n\t\t\t\t\t\t\t\tnewLine.y = (currentLine.y + currentLine.descent + currentLine.leading + currentLine.ascent) | 0;\n\t\t\t\t\t\t\t\tnewLine.ascent = currentLine.ascent;\n\t\t\t\t\t\t\t\tnewLine.descent = currentLine.descent;\n\t\t\t\t\t\t\t\tnewLine.leading = currentLine.leading;\n\t\t\t\t\t\t\t\tnewLine.align = currentLine.align;\n\t\t\t\t\t\t\t\tlines.push(newLine);\n\t\t\t\t\t\t\t\tcurrentLine = newLine;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tspaceLeft = maxWidth - wordWidth;\n\t\t\t\t\t\t\tif (spaceLeft < 0) {\n\t\t\t\t\t\t\t\tlet k = chunk.length;\n\t\t\t\t\t\t\t\tlet t = chunk;\n\t\t\t\t\t\t\t\tlet w = wordWidth;\n\t\t\t\t\t\t\t\twhile (k > 1) {\n\t\t\t\t\t\t\t\t\tk--;\n\t\t\t\t\t\t\t\t\tt = chunk.substr(0, k);\n\t\t\t\t\t\t\t\t\tw = measureText(measureContext, t, letterSpacing);\n\t\t\t\t\t\t\t\t\tif (w <= maxWidth) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trun.text = t;\n\t\t\t\t\t\t\t\trun.width = w;\n\t\t\t\t\t\t\t\tchunk = chunk.substr(k);\n\t\t\t\t\t\t\t\twordWidth = measureText(measureContext, chunk, letterSpacing);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (chunk && spaceLeft < 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tspaceLeft = spaceLeft - wordWidth;\n\t\t\t\t\t}\n\t\t\t\t\trun.text += chunk;\n\t\t\t\t\trun.width += wordWidth;\n\t\t\t\t\toffset += word.length + 1;\n\t\t\t\t}\n\t\t\t\tcurrentLine.runs.push(run);\n\t\t\t\tcurrentLine.width += run.width;\n\t\t\t}\n\n\t\t\treturn lines;\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn 'TextLine {x: ' + this.x + ', y: ' + this.y + ', width: ' + this.width +\n\t\t\t\t', height: ' + (this.ascent + this.descent + this.leading) + '}';\n\t\t}\n\t}\n\n\texport class TextRun {\n\t\tconstructor(public font: string = '',\n\t\t            public fillStyle: string = '',\n\t\t            public text: string = '',\n\t\t            public width: number = 0,\n\t\t            public letterSpacing: number = 0,\n\t\t            public underline: boolean = false) {\n\n\t\t}\n\t}\n\n\tfunction measureText(context: CanvasRenderingContext2D, text: string,\n\t                     letterSpacing: number): number {\n\t\tlet width = context.measureText(text).width | 0;\n\t\tif (letterSpacing > 0) {\n\t\t\twidth += text.length * letterSpacing;\n\t\t}\n\t\treturn width;\n\t}\n\n\texport class RenderableText extends Renderable {\n\n\t\t_flags = NodeFlags.Dynamic | NodeFlags.Dirty;\n\t\tproperties: { [name: string]: any } = {};\n\n\t\tprivate _textBounds: Rectangle;\n\t\tprivate _textRunData: DataBuffer;\n\t\tprivate _plainText: string;\n\t\tprivate _backgroundColor: number;\n\t\tprivate _borderColor: number;\n\t\tprivate _matrix: Shumway.GFX.Geometry.Matrix;\n\t\tprivate _coords: DataBuffer;\n\t\tprivate _scrollV: number;\n\t\tprivate _scrollH: number;\n\n\t\ttextRect: Rectangle;\n\t\tlines: TextLine[];\n\n\t\tconstructor(bounds: any) {\n\t\t\tsuper();\n\t\t\tthis._textBounds = bounds.clone();\n\t\t\tthis._textRunData = null;\n\t\t\tthis._plainText = '';\n\t\t\tthis._backgroundColor = 0;\n\t\t\tthis._borderColor = 0;\n\t\t\tthis._matrix = Matrix.createIdentity();\n\t\t\tthis._coords = null;\n\t\t\tthis._scrollV = 1;\n\t\t\tthis._scrollH = 0;\n\t\t\tthis.textRect = bounds.clone();\n\t\t\tthis.lines = [];\n\t\t\tthis.setBounds(bounds);\n\t\t}\n\n\t\tsetBounds(bounds: any): void {\n\t\t\tsuper.setBounds(bounds);\n\t\t\tthis._textBounds.set(bounds);\n\t\t\tthis.textRect.setElements(bounds.x + 2, bounds.y + 2, bounds.w - 2, bounds.h - 2);\n\t\t}\n\n\t\tsetContent(plainText: string, textRunData: DataBuffer, matrix: Shumway.GFX.Geometry.Matrix, coords: DataBuffer): void {\n\t\t\tthis._textRunData = textRunData;\n\t\t\tthis._plainText = plainText;\n\t\t\tthis._matrix.set(matrix);\n\t\t\tthis._coords = coords;\n\t\t\tthis.lines = [];\n\t\t}\n\n\t\tsetStyle(backgroundColor: number, borderColor: number, scrollV: number, scrollH: number): void {\n\t\t\tthis._backgroundColor = backgroundColor;\n\t\t\tthis._borderColor = borderColor;\n\t\t\tthis._scrollV = scrollV;\n\t\t\tthis._scrollH = scrollH;\n\t\t}\n\n\t\treflow(autoSize: number, wordWrap: boolean): void {\n\t\t\tlet textRunData = this._textRunData;\n\n\t\t\tif (!textRunData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet bounds = this._bounds;\n\t\t\tlet availableWidth = bounds.w - 4;\n\t\t\tlet plainText = this._plainText;\n\t\t\tlet lines = this.lines;\n\n\t\t\tlet currentLine = new TextLine();\n\t\t\tlet baseLinePos = 0;\n\t\t\tlet maxWidth = 0;\n\t\t\tlet maxAscent = 0;\n\t\t\tlet maxDescent = 0;\n\t\t\tlet maxLeading = -0xffffffff;\n\t\t\tlet firstAlign = -1;\n\n\t\t\tlet finishLine = function () {\n\t\t\t\tif (!currentLine.runs.length) {\n\t\t\t\t\tbaseLinePos += maxAscent + maxDescent + maxLeading;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (lines.length) {\n\t\t\t\t\tbaseLinePos += maxLeading;\n\t\t\t\t}\n\n\t\t\t\tbaseLinePos += maxAscent;\n\t\t\t\tcurrentLine.y = baseLinePos | 0;\n\t\t\t\tbaseLinePos += maxDescent;\n\t\t\t\tcurrentLine.ascent = maxAscent;\n\t\t\t\tcurrentLine.descent = maxDescent;\n\t\t\t\tcurrentLine.leading = maxLeading;\n\t\t\t\tcurrentLine.align = firstAlign;\n\n\t\t\t\tif (wordWrap && currentLine.width > availableWidth) {\n\t\t\t\t\tlet wrappedLines = currentLine.wrap(availableWidth);\n\t\t\t\t\tfor (let i = 0; i < wrappedLines.length; i++) {\n\t\t\t\t\t\tlet line = wrappedLines[i];\n\t\t\t\t\t\tbaseLinePos = line.y + line.descent + line.leading;\n\t\t\t\t\t\tlines.push(line);\n\t\t\t\t\t\tif (line.width > maxWidth) {\n\t\t\t\t\t\t\tmaxWidth = line.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(currentLine);\n\t\t\t\t\tif (currentLine.width > maxWidth) {\n\t\t\t\t\t\tmaxWidth = currentLine.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcurrentLine = new TextLine();\n\t\t\t};\n\n\t\t\tenterTimeline(\"RenderableText.reflow\");\n\n\t\t\twhile (textRunData.position < textRunData.length) {\n\t\t\t\tlet beginIndex = textRunData.readInt();\n\t\t\t\tlet endIndex = textRunData.readInt();\n\n\t\t\t\tlet size = textRunData.readInt();\n\t\t\t\tlet fontName = textRunData.readUTF();\n\n\t\t\t\tlet ascent = textRunData.readInt();\n\t\t\t\tlet descent = textRunData.readInt();\n\t\t\t\tlet leading = textRunData.readInt();\n\t\t\t\tif (ascent > maxAscent) {\n\t\t\t\t\tmaxAscent = ascent;\n\t\t\t\t}\n\t\t\t\tif (descent > maxDescent) {\n\t\t\t\t\tmaxDescent = descent;\n\t\t\t\t}\n\t\t\t\tif (leading > maxLeading) {\n\t\t\t\t\tmaxLeading = leading;\n\t\t\t\t}\n\n\t\t\t\tlet bold = textRunData.readBoolean();\n\t\t\t\tlet italic = textRunData.readBoolean();\n\t\t\t\tlet boldItalic = '';\n\t\t\t\tif (italic) {\n\t\t\t\t\tboldItalic += 'italic ';\n\t\t\t\t}\n\t\t\t\tif (bold) {\n\t\t\t\t\tboldItalic += 'bold ';\n\t\t\t\t}\n\t\t\t\tlet font = boldItalic + size + 'px ' + fontName + ', AdobeBlank';\n\n\t\t\t\tlet color = textRunData.readInt();\n\t\t\t\tlet fillStyle = ColorUtilities.rgbToHex(color);\n\n\t\t\t\tlet align = textRunData.readInt();\n\t\t\t\tif (firstAlign === -1) {\n\t\t\t\t\tfirstAlign = align;\n\t\t\t\t}\n\n\t\t\t\tlet bullet = textRunData.readBoolean();\n\t\t\t\t//let display = textRunData.readInt();\n\t\t\t\tlet indent = textRunData.readInt();\n\t\t\t\t//let blockIndent = textRunData.readInt();\n\t\t\t\tlet kerning = textRunData.readInt();\n\t\t\t\tlet leftMargin = textRunData.readInt();\n\t\t\t\tlet letterSpacing = textRunData.readInt();\n\t\t\t\tlet rightMargin = textRunData.readInt();\n\t\t\t\t//let tabStops = textRunData.readInt();\n\t\t\t\tlet underline = textRunData.readBoolean();\n\n\t\t\t\tlet text = '';\n\t\t\t\tlet eof = false;\n\t\t\t\tfor (let i = beginIndex; !eof; i++) {\n\t\t\t\t\tlet eof = i >= endIndex - 1;\n\n\t\t\t\t\tlet char = plainText[i];\n\t\t\t\t\tif (char !== '\\r' && char !== '\\n') {\n\t\t\t\t\t\ttext += char;\n\t\t\t\t\t\tif (i < plainText.length - 1) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcurrentLine.addRun(font, fillStyle, text, letterSpacing, underline);\n\t\t\t\t\tfinishLine();\n\t\t\t\t\ttext = '';\n\n\t\t\t\t\tif (eof) {\n\t\t\t\t\t\tmaxAscent = 0;\n\t\t\t\t\t\tmaxDescent = 0;\n\t\t\t\t\t\tmaxLeading = -0xffffffff;\n\t\t\t\t\t\tfirstAlign = -1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (char === '\\r' && plainText[i + 1] === '\\n') {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurrentLine.addRun(font, fillStyle, text, letterSpacing, underline);\n\t\t\t}\n\n\t\t\t// Append an additional empty line if we find a line break character at the end of the text.\n\t\t\tlet endCharacter = plainText[plainText.length - 1];\n\t\t\tif (endCharacter === '\\r' || endCharacter === '\\n') {\n\t\t\t\tlines.push(currentLine);\n\t\t\t}\n\n\t\t\tlet rect = this.textRect;\n\t\t\trect.w = maxWidth;\n\t\t\trect.h = baseLinePos;\n\n\t\t\tif (autoSize) {\n\t\t\t\tif (!wordWrap) {\n\t\t\t\t\tavailableWidth = maxWidth;\n\t\t\t\t\tlet width = bounds.w;\n\t\t\t\t\tswitch (autoSize) {\n\t\t\t\t\t\tcase 1: // CENTER\n\t\t\t\t\t\t\trect.x = (width - (availableWidth + 4)) >> 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // LEFT\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: // RIGHT\n\t\t\t\t\t\t\trect.x = width - (availableWidth + 4);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthis._textBounds.setElements(rect.x - 2, rect.y - 2, rect.w + 4, rect.h + 4);\n\t\t\t\t\tbounds.w = availableWidth + 4;\n\t\t\t\t}\n\t\t\t\tbounds.x = rect.x - 2;\n\t\t\t\tbounds.h = baseLinePos + 4;\n\t\t\t} else {\n\t\t\t\tthis._textBounds = bounds;\n\t\t\t}\n\n\t\t\tlet numLines = lines.length;\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tlet line = lines[i];\n\t\t\t\tif (line.width < availableWidth) {\n\t\t\t\t\tswitch (line.align) {\n\t\t\t\t\t\tcase 0: // left\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1: // right\n\t\t\t\t\t\t\tline.x = (availableWidth - line.width) | 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // center\n\t\t\t\t\t\t\tline.x = ((availableWidth - line.width) / 2) | 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.invalidate()\n\t\t\tleaveTimeline(\"RenderableText.reflow\");\n\t\t}\n\n\t\tprivate static absoluteBoundPoints = [new Point(0, 0), new Point(0, 0),\n\t\t\tnew Point(0, 0), new Point(0, 0)];\n\n\t\tprivate static roundBoundPoints(points: Point[]) {\n\t\t\trelease || assert(points === RenderableText.absoluteBoundPoints);\n\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\tlet point = points[i];\n\t\t\t\tpoint.x = Math.floor(point.x + .1) + .5;\n\t\t\t\tpoint.y = Math.floor(point.y + .1) + .5;\n\t\t\t}\n\t\t}\n\n\t\trender(context: CanvasRenderingContext2D): void {\n\t\t\tenterTimeline(\"RenderableText.render\");\n\t\t\tcontext.save();\n\n\t\t\tlet rect = this._textBounds;\n\t\t\tif (this._backgroundColor) {\n\t\t\t\tcontext.fillStyle = ColorUtilities.rgbaToCSSStyle(this._backgroundColor);\n\t\t\t\tcontext.fillRect(rect.x, rect.y, rect.w, rect.h);\n\t\t\t}\n\t\t\tif (this._borderColor) {\n\t\t\t\tcontext.strokeStyle = ColorUtilities.rgbaToCSSStyle(this._borderColor);\n\t\t\t\tcontext.lineCap = 'square';\n\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t// TextField bounds are always drawn as 1px lines on (global-space) pixel boundaries.\n\t\t\t\t// Their rounding is a bit weird, though: fractions below .9 are rounded down.\n\t\t\t\t// We can only fully implement this in browsers that support `currentTransform`.\n\t\t\t\tlet boundPoints = RenderableText.absoluteBoundPoints;\n\t\t\t\tlet m: SVGMatrix = (context as any)['currentTransform'];\n\t\t\t\tif (m) {\n\t\t\t\t\trect = rect.clone();\n\t\t\t\t\tlet matrix = new Matrix(m.a, m.b, m.c, m.d, m.e, m.f);\n\t\t\t\t\tmatrix.transformRectangle(rect, boundPoints);\n\t\t\t\t\tcontext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tboundPoints[0].x = rect.x;\n\t\t\t\t\tboundPoints[0].y = rect.y;\n\t\t\t\t\tboundPoints[1].x = rect.x + rect.w;\n\t\t\t\t\tboundPoints[1].y = rect.y;\n\t\t\t\t\tboundPoints[2].x = rect.x + rect.w;\n\t\t\t\t\tboundPoints[2].y = rect.y + rect.h;\n\t\t\t\t\tboundPoints[3].x = rect.x;\n\t\t\t\t\tboundPoints[3].y = rect.y + rect.h;\n\t\t\t\t}\n\t\t\t\tRenderableText.roundBoundPoints(boundPoints);\n\t\t\t\tlet path = new Path2D();\n\t\t\t\tpath.moveTo(boundPoints[0].x, boundPoints[0].y);\n\t\t\t\tpath.lineTo(boundPoints[1].x, boundPoints[1].y);\n\t\t\t\tpath.lineTo(boundPoints[2].x, boundPoints[2].y);\n\t\t\t\tpath.lineTo(boundPoints[3].x, boundPoints[3].y);\n\t\t\t\tpath.lineTo(boundPoints[0].x, boundPoints[0].y);\n\t\t\t\tcontext.stroke(path);\n\t\t\t\tif (m) {\n\t\t\t\t\tcontext.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._coords) {\n\t\t\t\tthis._renderChars(context);\n\t\t\t} else {\n\t\t\t\tthis._renderLines(context);\n\t\t\t}\n\n\t\t\tcontext.restore();\n\t\t\tleaveTimeline(\"RenderableText.render\");\n\t\t}\n\n\t\tprivate _renderChars(context: CanvasRenderingContext2D) {\n\t\t\tif (this._matrix) {\n\t\t\t\tlet m = this._matrix;\n\t\t\t\tcontext.transform(m.a, m.b, m.c, m.d, m.tx, m.ty);\n\t\t\t}\n\t\t\tlet lines = this.lines;\n\t\t\tlet coords = this._coords;\n\t\t\tcoords.position = 0;\n\t\t\tlet font = '';\n\t\t\tlet fillStyle = '';\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tlet line = lines[i];\n\t\t\t\tlet runs = line.runs;\n\t\t\t\tfor (let j = 0; j < runs.length; j++) {\n\t\t\t\t\tlet run = runs[j];\n\t\t\t\t\tif (run.font !== font) {\n\t\t\t\t\t\tcontext.font = font = run.font;\n\t\t\t\t\t}\n\t\t\t\t\tif (run.fillStyle !== fillStyle) {\n\t\t\t\t\t\tcontext.fillStyle = fillStyle = run.fillStyle;\n\t\t\t\t\t}\n\t\t\t\t\tlet text = run.text;\n\t\t\t\t\tfor (let k = 0; k < text.length; k++) {\n\t\t\t\t\t\tlet x = coords.readInt() / 20;\n\t\t\t\t\t\tlet y = coords.readInt() / 20;\n\t\t\t\t\t\tcontext.fillText(text[k], x, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _renderLines(context: CanvasRenderingContext2D) {\n\t\t\t// TODO: Render bullet points.\n\t\t\tlet bounds = this._textBounds;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect(bounds.x + 2, bounds.y + 2, bounds.w - 4, bounds.h - 4);\n\t\t\tcontext.clip();\n\t\t\tcontext.translate((bounds.x - this._scrollH) + 2, bounds.y + 2);\n\t\t\tlet lines = this.lines;\n\t\t\tlet scrollV = this._scrollV;\n\t\t\tlet scrollY = 0;\n\t\t\tlet font = '';\n\t\t\tlet fillStyle = '';\n\t\t\tcontext.textAlign = \"left\";\n\t\t\tcontext.textBaseline = \"alphabetic\";\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tlet line = lines[i];\n\t\t\t\tlet x = line.x;\n\t\t\t\tlet y = line.y;\n\t\t\t\t// Skip lines until we are within the scroll view.\n\t\t\t\tif (i + 1 < scrollV) {\n\t\t\t\t\tscrollY = y + line.descent + line.leading;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ty -= scrollY;\n\t\t\t\t// Flash skips rendering lines that are not fully visible in height (except of the very\n\t\t\t\t// first line within the scroll view).\n\t\t\t\tif ((i + 1) - scrollV && y > bounds.h) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet runs = line.runs;\n\t\t\t\tfor (let j = 0; j < runs.length; j++) {\n\t\t\t\t\tlet run = runs[j];\n\t\t\t\t\tif (run.font !== font) {\n\t\t\t\t\t\tcontext.font = font = run.font;\n\t\t\t\t\t}\n\t\t\t\t\tif (run.fillStyle !== fillStyle) {\n\t\t\t\t\t\tcontext.fillStyle = fillStyle = run.fillStyle;\n\t\t\t\t\t}\n\t\t\t\t\tif (run.underline) {\n\t\t\t\t\t\tcontext.fillRect(x, (y + (line.descent / 2)) | 0, run.width, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.textAlign = \"left\";\n\t\t\t\t\tcontext.textBaseline = \"alphabetic\";\n\t\t\t\t\tif (run.letterSpacing > 0) {\n\t\t\t\t\t\tlet text = run.text;\n\t\t\t\t\t\tfor (let k = 0; k < text.length; k++) {\n\t\t\t\t\t\t\tcontext.fillText(text[k], x, y);\n\t\t\t\t\t\t\tx += measureText(context, text[k], run.letterSpacing);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(run.text, x, y);\n\t\t\t\t\t\tx += run.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\texport class Label extends Renderable {\n\t\t_flags: NodeFlags = NodeFlags.Dynamic | NodeFlags.Scalable;\n\t\tproperties: { [name: string]: any } = {};\n\t\tprivate _text: string;\n\n\t\tget text(): string {\n\t\t\treturn this._text;\n\t\t}\n\n\t\tset text(value: string) {\n\t\t\tthis._text = value;\n\t\t}\n\n\t\tconstructor(w: number, h: number) {\n\t\t\tsuper();\n\t\t\tthis.setBounds(new Rectangle(0, 0, w, h));\n\t\t}\n\n\t\trender(context: CanvasRenderingContext2D, ratio: number, cullBounds?: Rectangle) {\n\t\t\tcontext.save();\n\t\t\tcontext.textBaseline = \"top\";\n\t\t\tcontext.fillStyle = \"white\";\n\t\t\tcontext.fillText(this.text, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\t}\n}\n","/**\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule Shumway.GFX {\n\timport Rectangle = Geometry.Rectangle;\n\timport Point = Geometry.Point;\n\timport Matrix = Geometry.Matrix;\n\timport DirtyRegion = Geometry.DirtyRegion;\n\timport clampByte = Shumway.ColorUtilities.clampByte;\n\n\timport assert = Shumway.Debug.assert;\n\n\texport class Filter {\n\t\tpublic expandBounds(bounds: Rectangle) {\n\t\t\t// NOOP\n\t\t}\n\t}\n\n\tlet EPS = 0.000000001;\n\t// Step widths for blur based filters, for quality values 1..15:\n\t// If we plot the border width added by expandBlurBounds for each blurX (or blurY) value, the\n\t// step width is the amount of blurX that adds one pixel to the border width. I.e. for quality = 1,\n\t// the border width increments at blurX = 2, 4, 6, ...\n\tlet blurFilterStepWidths = [\n\t\t2,\n\t\t1 / 1.05,\n\t\t1 / 1.35,\n\t\t1 / 1.55,\n\t\t1 / 1.75,\n\t\t1 / 1.9,\n\t\t1 / 2,\n\t\t1 / 2.1,\n\t\t1 / 2.2,\n\t\t1 / 2.3,\n\t\t1 / 2.5,\n\t\t1 / 3,\n\t\t1 / 3,\n\t\t1 / 3.5,\n\t\t1 / 3.5\n\t];\n\n\tfunction expandBlurBounds(bounds: Rectangle, quality: number,\n\t                          blurX: number, blurY: number, isBlurFilter: boolean) {\n\t\tlet stepWidth = blurFilterStepWidths[quality - 1];\n\t\tlet bx = blurX;\n\t\tlet by = blurY;\n\t\tif (isBlurFilter) {\n\t\t\t// BlurFilter behaves slightly different from other blur based filters:\n\t\t\t// Given ascending blurX/blurY values, a BlurFilter expands the source rect later than with\n\t\t\t// i.e. GlowFilter. The difference appears to be stepWidth / 4 for all quality values.\n\t\t\tlet stepWidth4 = stepWidth / 4;\n\t\t\tbx -= stepWidth4;\n\t\t\tby -= stepWidth4;\n\t\t}\n\t\t// Calculate horizontal and vertical borders:\n\t\t// blurX/blurY values <= 1 are always rounded up to 1, which means that we always expand the\n\t\t// source rect, even when blurX/blurY is 0.\n\t\tlet bh = (Math.ceil((bx < 1 ? 1 : bx) / (stepWidth - EPS)));\n\t\tlet bv = (Math.ceil((by < 1 ? 1 : by) / (stepWidth - EPS)));\n\t\tbounds.x -= bh;\n\t\tbounds.w += bh * 2;\n\t\tbounds.y -= bv;\n\t\tbounds.h += bv * 2;\n\t}\n\n\texport class BlurFilter extends Filter {\n\t\tblurX: number;\n\t\tblurY: number;\n\t\tquality: number;\n\n\t\tconstructor(blurX: number, blurY: number, quality: number) {\n\t\t\tsuper();\n\t\t\tthis.blurX = blurX;\n\t\t\tthis.blurY = blurY;\n\t\t\tthis.quality = quality;\n\t\t}\n\n\t\tpublic expandBounds(bounds: Rectangle) {\n\t\t\texpandBlurBounds(bounds, this.quality, this.blurX, this.blurY, true);\n\t\t}\n\t}\n\n\texport class DropshadowFilter extends Filter {\n\t\talpha: number;\n\t\tangle: number;\n\t\tblurX: number;\n\t\tblurY: number;\n\t\tcolor: number;\n\t\tdistance: number;\n\t\thideObject: boolean;\n\t\tinner: boolean;\n\t\tknockout: boolean;\n\t\tquality: number;\n\t\tstrength: number;\n\n\t\tconstructor(alpha: number, angle: number, blurX: number, blurY: number,\n\t\t            color: number, distance: number,\n\t\t            hideObject: boolean, inner: boolean, knockout: boolean,\n\t\t            quality: number, strength: number) {\n\t\t\tsuper();\n\t\t\tthis.alpha = alpha;\n\t\t\tthis.angle = angle;\n\t\t\tthis.blurX = blurX;\n\t\t\tthis.blurY = blurY;\n\t\t\tthis.color = color;\n\t\t\tthis.distance = distance;\n\t\t\tthis.hideObject = hideObject;\n\t\t\tthis.inner = inner;\n\t\t\tthis.knockout = knockout;\n\t\t\tthis.quality = quality;\n\t\t\tthis.strength = strength;\n\t\t}\n\n\t\tpublic expandBounds(bounds: Rectangle) {\n\t\t\t// TODO: Once we support inset drop shadows, bounds don't expand.\n\t\t\t//       For now, they will be rendered as normal drop shadows.\n\t\t\t// if (this.inner) {\n\t\t\t//   return;\n\t\t\t// }\n\t\t\texpandBlurBounds(bounds, this.quality, this.blurX, this.blurY, false);\n\t\t\tif (this.distance) {\n\t\t\t\tlet a = this.angle * Math.PI / 180;\n\t\t\t\tlet dx = Math.cos(a) * this.distance;\n\t\t\t\tlet dy = Math.sin(a) * this.distance;\n\t\t\t\tlet xMin = bounds.x + (dx >= 0 ? 0 : Math.floor(dx));\n\t\t\t\tlet xMax = bounds.x + bounds.w + Math.ceil(Math.abs(dx));\n\t\t\t\tlet yMin = bounds.y + (dy >= 0 ? 0 : Math.floor(dy));\n\t\t\t\tlet yMax = bounds.y + bounds.h + Math.ceil(Math.abs(dy));\n\t\t\t\tbounds.x = xMin;\n\t\t\t\tbounds.w = xMax - xMin;\n\t\t\t\tbounds.y = yMin;\n\t\t\t\tbounds.h = yMax - yMin;\n\t\t\t}\n\t\t}\n\t}\n\n\texport class GlowFilter extends Filter {\n\t\talpha: number;\n\t\tblurX: number;\n\t\tblurY: number;\n\t\tcolor: number;\n\t\tinner: boolean;\n\t\tknockout: boolean;\n\t\tquality: number;\n\t\tstrength: number;\n\n\t\tconstructor(alpha: number, blurX: number, blurY: number, color: number,\n\t\t            inner: boolean, knockout: boolean,\n\t\t            quality: number, strength: number) {\n\t\t\tsuper();\n\t\t\tthis.alpha = alpha;\n\t\t\tthis.blurX = blurX;\n\t\t\tthis.blurY = blurY;\n\t\t\tthis.color = color;\n\t\t\tthis.inner = inner;\n\t\t\tthis.knockout = knockout;\n\t\t\tthis.quality = quality;\n\t\t\tthis.strength = strength;\n\t\t}\n\n\t\tpublic expandBounds(bounds: Rectangle) {\n\t\t\tif (!this.inner) {\n\t\t\t\texpandBlurBounds(bounds, this.quality, this.blurX, this.blurY, false);\n\t\t\t}\n\t\t}\n\t}\n\n\texport const enum ColorMatrixType {\n\t\tUnknown = 0x0000,\n\t\tIdentity = 0x0001\n\t}\n\n\texport class ColorMatrix extends Filter {\n\t\tprivate _data: Float32Array;\n\t\tprivate _type: ColorMatrixType;\n\n\t\tconstructor(data: any) {\n\t\t\tsuper();\n\t\t\trelease || assert(data.length === 20);\n\t\t\tthis._data = new Float32Array(data);\n\t\t\tthis._type = ColorMatrixType.Unknown;\n\t\t}\n\n\t\tpublic clone(): ColorMatrix {\n\t\t\tlet colorMatrix = new ColorMatrix(this._data);\n\t\t\tcolorMatrix._type = this._type;\n\t\t\treturn colorMatrix;\n\t\t}\n\n\t\tpublic set(other: ColorMatrix) {\n\t\t\tthis._data.set(other._data);\n\t\t\tthis._type = other._type;\n\t\t}\n\n\t\tpublic toWebGLMatrix(): Float32Array {\n\t\t\treturn new Float32Array(this._data);\n\t\t}\n\n\t\tpublic asWebGLMatrix(): Float32Array {\n\t\t\treturn this._data.subarray(0, 16);\n\t\t}\n\n\t\tpublic asWebGLVector(): Float32Array {\n\t\t\treturn this._data.subarray(16, 20);\n\t\t}\n\n\t\tpublic isIdentity(): boolean {\n\t\t\tif (this._type & ColorMatrixType.Identity) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet m = this._data;\n\t\t\treturn m[0] == 1 && m[1] == 0 && m[2] == 0 && m[3] == 0 &&\n\t\t\t\tm[4] == 0 && m[5] == 1 && m[6] == 0 && m[7] == 0 &&\n\t\t\t\tm[8] == 0 && m[9] == 0 && m[10] == 1 && m[11] == 0 &&\n\t\t\t\tm[12] == 0 && m[13] == 0 && m[14] == 0 && m[15] == 1 &&\n\t\t\t\tm[16] == 0 && m[17] == 0 && m[18] == 0 && m[19] == 0;\n\t\t}\n\n\t\tpublic static createIdentity(): ColorMatrix {\n\t\t\tlet colorMatrix = new ColorMatrix([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t0, 0, 0, 0\n\t\t\t]);\n\t\t\tcolorMatrix._type = ColorMatrixType.Identity;\n\t\t\treturn colorMatrix;\n\t\t}\n\n\t\tpublic setMultipliersAndOffsets(redMultiplier: number, greenMultiplier: number, blueMultiplier: number, alphaMultiplier: number,\n\t\t                                redOffset: number, greenOffset: number, blueOffset: number, alphaOffset: number) {\n\t\t\tlet m: Float32Array = this._data;\n\t\t\tfor (let i = 0; i < m.length; i++) {\n\t\t\t\tm[i] = 0;\n\t\t\t}\n\t\t\tm[0] = redMultiplier;\n\t\t\tm[5] = greenMultiplier;\n\t\t\tm[10] = blueMultiplier;\n\t\t\tm[15] = alphaMultiplier;\n\t\t\tm[16] = redOffset / 255;\n\t\t\tm[17] = greenOffset / 255;\n\t\t\tm[18] = blueOffset / 255;\n\t\t\tm[19] = alphaOffset / 255;\n\t\t\tthis._type = ColorMatrixType.Unknown;\n\t\t}\n\n\t\tpublic transformRGBA(rgba: number) {\n\t\t\tlet r = (rgba >> 24) & 0xff;\n\t\t\tlet g = (rgba >> 16) & 0xff;\n\t\t\tlet b = (rgba >> 8) & 0xff;\n\t\t\tlet a = rgba & 0xff;\n\n\t\t\tlet m: Float32Array = this._data;\n\t\t\tlet R = clampByte(r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[16] * 255);\n\t\t\tlet G = clampByte(r * m[4] + g * m[5] + b * m[6] + a * m[7] + m[17] * 255);\n\t\t\tlet B = clampByte(r * m[8] + g * m[9] + b * m[10] + a * m[11] + m[18] * 255);\n\t\t\tlet A = clampByte(r * m[12] + g * m[13] + b * m[14] + a * m[15] + m[19] * 255);\n\n\t\t\treturn R << 24 | G << 16 | B << 8 | A;\n\t\t}\n\n\t\tpublic multiply(other: ColorMatrix) {\n\t\t\tif (other._type & ColorMatrixType.Identity) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet a = this._data, b = other._data;\n\t\t\tlet a00 = a[0 * 4 + 0];\n\t\t\tlet a01 = a[0 * 4 + 1];\n\t\t\tlet a02 = a[0 * 4 + 2];\n\t\t\tlet a03 = a[0 * 4 + 3];\n\t\t\tlet a10 = a[1 * 4 + 0];\n\t\t\tlet a11 = a[1 * 4 + 1];\n\t\t\tlet a12 = a[1 * 4 + 2];\n\t\t\tlet a13 = a[1 * 4 + 3];\n\t\t\tlet a20 = a[2 * 4 + 0];\n\t\t\tlet a21 = a[2 * 4 + 1];\n\t\t\tlet a22 = a[2 * 4 + 2];\n\t\t\tlet a23 = a[2 * 4 + 3];\n\t\t\tlet a30 = a[3 * 4 + 0];\n\t\t\tlet a31 = a[3 * 4 + 1];\n\t\t\tlet a32 = a[3 * 4 + 2];\n\t\t\tlet a33 = a[3 * 4 + 3];\n\t\t\tlet a40 = a[4 * 4 + 0];\n\t\t\tlet a41 = a[4 * 4 + 1];\n\t\t\tlet a42 = a[4 * 4 + 2];\n\t\t\tlet a43 = a[4 * 4 + 3];\n\n\t\t\tlet b00 = b[0 * 4 + 0];\n\t\t\tlet b01 = b[0 * 4 + 1];\n\t\t\tlet b02 = b[0 * 4 + 2];\n\t\t\tlet b03 = b[0 * 4 + 3];\n\t\t\tlet b10 = b[1 * 4 + 0];\n\t\t\tlet b11 = b[1 * 4 + 1];\n\t\t\tlet b12 = b[1 * 4 + 2];\n\t\t\tlet b13 = b[1 * 4 + 3];\n\t\t\tlet b20 = b[2 * 4 + 0];\n\t\t\tlet b21 = b[2 * 4 + 1];\n\t\t\tlet b22 = b[2 * 4 + 2];\n\t\t\tlet b23 = b[2 * 4 + 3];\n\t\t\tlet b30 = b[3 * 4 + 0];\n\t\t\tlet b31 = b[3 * 4 + 1];\n\t\t\tlet b32 = b[3 * 4 + 2];\n\t\t\tlet b33 = b[3 * 4 + 3];\n\t\t\tlet b40 = b[4 * 4 + 0];\n\t\t\tlet b41 = b[4 * 4 + 1];\n\t\t\tlet b42 = b[4 * 4 + 2];\n\t\t\tlet b43 = b[4 * 4 + 3];\n\n\t\t\ta[0 * 4 + 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n\t\t\ta[0 * 4 + 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n\t\t\ta[0 * 4 + 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n\t\t\ta[0 * 4 + 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n\t\t\ta[1 * 4 + 0] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n\t\t\ta[1 * 4 + 1] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n\t\t\ta[1 * 4 + 2] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n\t\t\ta[1 * 4 + 3] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n\t\t\ta[2 * 4 + 0] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n\t\t\ta[2 * 4 + 1] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n\t\t\ta[2 * 4 + 2] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n\t\t\ta[2 * 4 + 3] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n\t\t\ta[3 * 4 + 0] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n\t\t\ta[3 * 4 + 1] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n\t\t\ta[3 * 4 + 2] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n\t\t\ta[3 * 4 + 3] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n\t\t\ta[4 * 4 + 0] = a00 * b40 + a10 * b41 + a20 * b42 + a30 * b43 + a40;\n\t\t\ta[4 * 4 + 1] = a01 * b40 + a11 * b41 + a21 * b42 + a31 * b43 + a41;\n\t\t\ta[4 * 4 + 2] = a02 * b40 + a12 * b41 + a22 * b42 + a32 * b43 + a42;\n\t\t\ta[4 * 4 + 3] = a03 * b40 + a13 * b41 + a23 * b42 + a33 * b43 + a43;\n\t\t\tthis._type = ColorMatrixType.Unknown;\n\t\t}\n\n\t\tpublic get alphaMultiplier(): number {\n\t\t\treturn this._data[15];\n\t\t}\n\n\t\tpublic hasOnlyAlphaMultiplier(): boolean {\n\t\t\tlet m = this._data;\n\t\t\treturn m[0] == 1 && m[1] == 0 && m[2] == 0 && m[3] == 0 &&\n\t\t\t\tm[4] == 0 && m[5] == 1 && m[6] == 0 && m[7] == 0 &&\n\t\t\t\tm[8] == 0 && m[9] == 0 && m[10] == 1 && m[11] == 0 &&\n\t\t\t\tm[12] == 0 && m[13] == 0 && m[14] == 0 && m[16] == 0 &&\n\t\t\t\tm[17] == 0 && m[18] == 0 && m[19] == 0;\n\t\t}\n\n\t\tpublic equals(other: ColorMatrix): boolean {\n\t\t\tif (!other) {\n\t\t\t\treturn false;\n\t\t\t} else if (this._type === other._type && this._type === ColorMatrixType.Identity) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet a = this._data;\n\t\t\tlet b = other._data;\n\t\t\tfor (let i = 0; i < 20; i++) {\n\t\t\t\tif (Math.abs(a[i] - b[i]) > 0.001) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic toSVGFilterMatrix(): string {\n\t\t\tlet m = this._data;\n\t\t\treturn [m[0], m[4], m[8], m[12], m[16],\n\t\t\t\tm[1], m[5], m[9], m[13], m[17],\n\t\t\t\tm[2], m[6], m[10], m[14], m[18],\n\t\t\t\tm[3], m[7], m[11], m[15], m[19]].join(\" \");\n\t\t}\n\t}\n}\n","/*\n * Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/// <reference path='module.ts' />\n/// <reference path='utilities.ts' />\n/// <reference path='settings.ts'/>\n/// <reference path='geometry.ts'/>\n/// <reference path='regionAllocator.ts'/>\n/// <reference path='nodes.ts'/>\n/// <reference path='renderables/renderables.ts'/>\n/// <reference path='filters.ts'/>\n\n/*interface CanvasPattern {\n    setTransform: (matrix: SVGMatrix) => void;\n}*/\n\ninterface CanvasGradient {\n\tsetTransform: (matrix: SVGMatrix) => void;\n}\n\ninterface CanvasRenderingContext2D {\n\tstackDepth: number;\n\n\tfill(path: Path2D, fillRule?: string): void;\n\n\tclip(path: Path2D, fillRule?: string): void;\n\n\tstroke(path: Path2D): void;\n\n\timageSmoothingEnabled: boolean\n\tmozImageSmoothingEnabled: boolean\n\tmsImageSmoothingEnabled: boolean\n\n\tfillRule: string;\n\tmozFillRule: string;\n\n\tenterBuildingClippingRegion(): void;\n\n\tleaveBuildingClippingRegion(): void;\n}\n\ninterface Path2D {\n\t/*constructor();\n\tconstructor(path: Path2D);\n\tconstructor(paths: Path2D[], fillRule?: string);\n\tconstructor(d: any);*/\n\n\taddPath(path: Path2D, transform?: SVGMatrix): void;\n}\n"]}